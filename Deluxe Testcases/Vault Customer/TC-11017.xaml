<Activity mc:Ignorable="sap sap2010" x:Class="TC_11017" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:cr="clr-namespace:CommonLibrary.Report;assembly=CommonLibrary" xmlns:dp="clr-namespace:Deluxe_ReusableLibrary.Payments;assembly=Deluxe_ReusableLibrary" xmlns:dp1="clr-namespace:Deluxe_ReusableLibrary.Payments1;assembly=Deluxe_ReusableLibrary" xmlns:dv="clr-namespace:Deluxe_ReusableLibrary.Vault_Customer;assembly=Deluxe_ReusableLibrary" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:ra="clr-namespace:ReporterForUiPath.Activities;assembly=ReporterForUiPath.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="In_Report_ID" Type="InArgument(x:Int32)" />
    <x:Property Name="out_Suite_ID" Type="InArgument(x:String)" />
    <x:Property Name="out_Test_ID" Type="InArgument(x:String)" />
    <x:Property Name="out_TestID" Type="InArgument(x:String)" />
  </x:Members>
  <this:TC_11017.In_Report_ID>
    <InArgument x:TypeArguments="x:Int32" />
  </this:TC_11017.In_Report_ID>
  <this:TC_11017.out_Suite_ID>
    <InArgument x:TypeArguments="x:String" />
  </this:TC_11017.out_Suite_ID>
  <this:TC_11017.out_Test_ID>
    <InArgument x:TypeArguments="x:String" />
  </this:TC_11017.out_Test_ID>
  <this:TC_11017.out_TestID>
    <InArgument x:TypeArguments="x:String" />
  </this:TC_11017.out_TestID>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>822.4,7575.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>ReporterForUiPath.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>CommonLibrary.Report</x:String>
      <x:String>ReporterForUiPath.Enums</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>Deluxe_ReusableLibrary.Payments</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Testing</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>Deluxe_ReusableLibrary.Vault_Customer</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>UiPath.Testing.Activities.TestData</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Testing.Enums</x:String>
      <x:String>Atlassian.Jira</x:String>
      <x:String>UiPath.BAF.Telemetry</x:String>
      <x:String>UiPath.Jira.Activities</x:String>
      <x:String>UiPath.Jira.Activities.Activities</x:String>
      <x:String>Deluxe_ReusableLibrary.Payments1</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>ReporterForUiPath.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Jira.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>CommonLibrary</AssemblyReference>
      <AssemblyReference>ReporterForUiPath</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>Deluxe_ReusableLibrary</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Windows.Forms.Design</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>Atlassian.Jira</AssemblyReference>
      <AssemblyReference>UiPath.Jira</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="TC_11017" sap:VirtualizedContainerService.HintSize="680,7510.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="str_QuickSaleItemTaxRate" />
      <Variable x:TypeArguments="x:String" Name="str_PresetSaleItemPrice" />
      <Variable x:TypeArguments="x:Double" Name="dbl_SaleItemTaxAmount" />
      <Variable x:TypeArguments="x:String" Name="str_PresetSaleItemName" />
      <Variable x:TypeArguments="x:String" Name="str_DiscountRateAmount" />
      <Variable x:TypeArguments="sd:DataTable" Name="str_OS_SaleItemDataTable" />
      <Variable x:TypeArguments="x:Double" Name="dbl_TwoSaleItemTotal" />
      <Variable x:TypeArguments="x:Double" Default="20" Name="dbl_QuickSaleItemPrice" />
      <Variable x:TypeArguments="x:Double" Name="dbl_PresetSaleItemPrice" />
      <Variable x:TypeArguments="x:String" Default="mastercard" Name="str_CardType" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_TestData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_TestCaseData" />
      <Variable x:TypeArguments="x:String" Name="str_PaymentMethod" />
      <Variable x:TypeArguments="x:String" Name="str_TestId" />
      <Variable x:TypeArguments="x:Int32" Name="int_ReportId" />
      <Variable x:TypeArguments="x:Double" Name="dbl_QuickSaleItemTaxRate" />
      <Variable x:TypeArguments="x:String" Name="str_QuickSaleItemTaxName" />
      <Variable x:TypeArguments="x:String" Name="str_SearchPresetSaleitemName" />
      <Variable x:TypeArguments="x:Double" Name="dbl_PresetSaleItemTaxRate" />
      <Variable x:TypeArguments="x:String" Name="str_DiscountRateTax" />
      <Variable x:TypeArguments="x:String" Name="str_OrderNote" />
      <Variable x:TypeArguments="x:String" Name="str_CardNumber" />
      <Variable x:TypeArguments="x:String" Name="str_SelectCard" />
      <Variable x:TypeArguments="x:Double" Name="dbl_TotalAmount" />
      <Variable x:TypeArguments="x:String" Name="str_QuickSaleItemName" />
      <Variable x:TypeArguments="x:String" Name="str_in_Url" />
      <Variable x:TypeArguments="x:Boolean" Name="bool_RemoveSurcharge" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerCountryCode" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerZipCode" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerStateCode" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerCity" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerAddress" />
      <Variable x:TypeArguments="x:String" Name="str_LastName" />
      <Variable x:TypeArguments="x:String" Name="str_FirstName" />
      <Variable x:TypeArguments="x:String" Name="str_PaymentType" />
      <Variable x:TypeArguments="x:String" Name="str_ExistingCustomerName" />
      <Variable x:TypeArguments="x:String" Name="str_VaultType" />
      <Variable x:TypeArguments="x:String" Name="str_VaultPaymentType" />
      <Variable x:TypeArguments="x:String" Name="str_Merchant" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerState" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerPhone" />
      <Variable x:TypeArguments="x:String" Name="str_Country" />
      <Variable x:TypeArguments="x:String" Name="str_Mail" />
      <Variable x:TypeArguments="x:String" Name="str_VaultCustomer" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ra:CreateReport ContinueOnError="{x:Null}" DisplayName="Create Report" sap:VirtualizedContainerService.HintSize="617.6,134.4" sap2010:WorkflowViewState.IdRef="CreateReport_1" ReportLocation="C:\Users\T475305\Documents\UiPath\Reports" ReportName="TC-11017">
      <ra:CreateReport.isCreated>
        <OutArgument x:TypeArguments="x:Int32">
          <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_74">int_ReportId</CSharpReference>
        </OutArgument>
      </ra:CreateReport.isCreated>
    </ra:CreateReport>
    <ra:StartSuite ContinueOnError="{x:Null}" DisplayName="Start Suite" sap:VirtualizedContainerService.HintSize="617.6,85.6" sap2010:WorkflowViewState.IdRef="StartSuite_1" SuiteName="Vault Customer">
      <ra:StartSuite.ReportId>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_147">int_ReportId</CSharpValue>
        </InArgument>
      </ra:StartSuite.ReportId>
      <ra:StartSuite.suiteId>
        <OutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">out_Suite_ID</CSharpReference>
        </OutArgument>
      </ra:StartSuite.suiteId>
    </ra:StartSuite>
    <cr:startTest sap:VirtualizedContainerService.HintSize="617.6,246.4" sap2010:WorkflowViewState.IdRef="startTest_1" str_in_testName="TC-11017 - Payment Transaction(Vault Customer): Do a transaction with the Discover card by select the Quick item, Preset Item, order note, discount and verify the transaction details in the order summary">
      <cr:startTest.int_in_ReportId>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_148">int_ReportId</CSharpValue>
        </InArgument>
      </cr:startTest.int_in_ReportId>
      <cr:startTest.str_in_SuiteId>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">out_Suite_ID</CSharpValue>
        </InArgument>
      </cr:startTest.str_in_SuiteId>
      <cr:startTest.str_out_TestId>
        <OutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_75">out_TestID</CSharpReference>
        </OutArgument>
      </cr:startTest.str_out_TestId>
    </cr:startTest>
    <Sequence sap:VirtualizedContainerService.HintSize="617.6,1524" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dt_TestData" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ReadRange Range="{x:Null}" AddHeaders="True" DisplayName="Read Range " sap:VirtualizedContainerService.HintSize="555.2,88" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="Payments" WorkbookPath="TestData\DPPTestDataAA.xlsx">
        <ui:ReadRange.DataTable>
          <OutArgument x:TypeArguments="sd:DataTable">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_36">dt_TestData</CSharpReference>
          </OutArgument>
        </ui:ReadRange.DataTable>
      </ui:ReadRange>
      <ui:FilterDataTable DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="555.2,162.4" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" SelectColumnsMode="Remove">
        <ui:FilterDataTable.DataTable>
          <InArgument x:TypeArguments="sd:DataTable">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">dt_TestData</CSharpValue>
          </InArgument>
        </ui:FilterDataTable.DataTable>
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_69">"TestCaseId"</CSharpValue>
                </InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_271">"TC_11017"</CSharpValue>
                </InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.OutputDataTable>
          <OutArgument x:TypeArguments="sd:DataTable">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_37">dt_TestCaseData</CSharpReference>
          </OutArgument>
        </ui:FilterDataTable.OutputDataTable>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
      </ui:FilterDataTable>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="555.2,1081.6" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="521.6,893.6" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="str_TotalAmount" />
                <Variable x:TypeArguments="x:String" Name="str_Email" />
                <Variable x:TypeArguments="x:String" Name="str_CustPhoneNumber" />
                <Variable x:TypeArguments="x:String" Name="strCardType" />
                <Variable x:TypeArguments="x:String" Name="str_QuickSaleItemPrice" />
                <Variable x:TypeArguments="x:String" Name="str_QuickSaleItemTaxName" />
                <Variable x:TypeArguments="x:String" Name="str_SearchPresentSaleitemName" />
                <Variable x:TypeArguments="x:String" Name="str_CustomerCountry" />
                <Variable x:TypeArguments="x:String" Name="str_DiscountRateOption" />
                <Variable x:TypeArguments="x:String" Name="str_MerchantName" />
                <Variable x:TypeArguments="x:String" Name="str_PaymentMethod" />
                <Variable x:TypeArguments="x:String" Name="str_TransactionTotalAmount" />
                <Variable x:TypeArguments="x:String" Name="str_CustomerEmail" />
                <Variable x:TypeArguments="x:String" Name="str_CustomerPhoneNumber" />
                <Variable x:TypeArguments="x:String" Name="str_CustomerState" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.4,804" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="32">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_48">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_93">str_PaymentMethod</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_219">CurrentRow["PaymentMethod"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_49">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_94">str_Email</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_220">CurrentRow["Email"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_50">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_95">str_CustomerPhone</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_221">CurrentRow["Phone"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_51">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_96">str_VaultPaymentType</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_222">CurrentRow["PaymentType"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_52">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_97">str_CustomerAddress</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_223">CurrentRow["CustomerAddress"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_53">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_98">str_CustomerState</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_224">CurrentRow["CustomerState"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_54">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_99">str_CustomerCity</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_225">CurrentRow["CustomerCity"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_55">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_100">str_CustomerZipCode</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_226">CurrentRow["CustomerZipCode"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_56">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_101">str_Country</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_227">CurrentRow["CustomerCountry"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_57">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_102">str_Merchant</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_228">CurrentRow["MerchantName"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_58">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_103">str_CustomerCountryCode</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_229">CurrentRow["CountryCode"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_59">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_104">str_OrderNote</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_230">CurrentRow["OrderNote"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_60">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_105">str_FirstName</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_231">CurrentRow["FirstName"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_61">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_106">str_LastName</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_232">CurrentRow["LastName"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_62">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_107">str_QuickSaleItemName</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_233">CurrentRow["QuickSaleItemName"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_63">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Double">
                          <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_108">dbl_QuickSaleItemPrice</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Double">
                          <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_234">Convert.ToDouble(CurrentRow["QuickSaleItemPrice"].ToString())</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_64">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_109">str_QuickSaleItemTaxName</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_235">CurrentRow["QuickSaleItemTax"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_65">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_110">str_SearchPresetSaleitemName</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_236">CurrentRow["QuickSaleItemTax"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_66">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_111">str_DiscountRateTax</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_237">CurrentRow["DiscountRate"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_67">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_112">str_SelectCard</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_238">CurrentRow["CardNumber"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_68">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_113">str_CardType</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_239">CurrentRow["CardType"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_69">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_116">str_VaultCustomer</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_240">CurrentRow["VaultCustomerName"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_70">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_115">str_VaultPaymentType</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_241">CurrentRow["PaymentType"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
              </ui:MultipleAssign>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <ui:ForEachRow.DataTable>
          <InArgument x:TypeArguments="sd:DataTable">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_72">dt_TestCaseData</CSharpValue>
          </InArgument>
        </ui:ForEachRow.DataTable>
      </ui:ForEachRow>
    </Sequence>
    <dp:PaymentsCreation BreakTriggerScopeInArgument="{x:Null}" str_in_CardExpiration="{x:Null}" str_in_CardNumber="{x:Null}" str_in_CustEmail="{x:Null}" str_in_CustPhoneNumber="{x:Null}" str_in_ExistingCustomerName="{x:Null}" str_in_MerchantName="{x:Null}" str_in_PaymentType="{x:Null}" str_in_TransactionAmount_Total="{x:Null}" DisplayName="Payments creation" sap:VirtualizedContainerService.HintSize="617.6,52.8" sap2010:WorkflowViewState.IdRef="PaymentsCreation_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <dp:PaymentsCreation.bool_in_CreateValutCustomer>
        <InArgument x:TypeArguments="x:Boolean" />
      </dp:PaymentsCreation.bool_in_CreateValutCustomer>
      <dp:PaymentsCreation.int_in_reportId>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_151">int_ReportId</CSharpValue>
        </InArgument>
      </dp:PaymentsCreation.int_in_reportId>
      <dp:PaymentsCreation.str_in_ACH_AccountNickName>
        <InArgument x:TypeArguments="x:String" />
      </dp:PaymentsCreation.str_in_ACH_AccountNickName>
      <dp:PaymentsCreation.str_in_ACH_AccountNumber>
        <InArgument x:TypeArguments="x:String" />
      </dp:PaymentsCreation.str_in_ACH_AccountNumber>
      <dp:PaymentsCreation.str_in_ACH_AccountType>
        <InArgument x:TypeArguments="x:String" />
      </dp:PaymentsCreation.str_in_ACH_AccountType>
      <dp:PaymentsCreation.str_in_ACH_RoutingNumber>
        <InArgument x:TypeArguments="x:String" />
      </dp:PaymentsCreation.str_in_ACH_RoutingNumber>
      <dp:PaymentsCreation.str_in_Cash_AmountTender>
        <InArgument x:TypeArguments="x:String" />
      </dp:PaymentsCreation.str_in_Cash_AmountTender>
      <dp:PaymentsCreation.str_in_CheckNumber>
        <InArgument x:TypeArguments="x:String" />
      </dp:PaymentsCreation.str_in_CheckNumber>
      <dp:PaymentsCreation.str_in_PaymentMethod>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_139">str_PaymentMethod</CSharpValue>
        </InArgument>
      </dp:PaymentsCreation.str_in_PaymentMethod>
      <dp:PaymentsCreation.str_in_testId>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_150">out_TestID</CSharpValue>
        </InArgument>
      </dp:PaymentsCreation.str_in_testId>
      <dp:PaymentsCreation.str_io_CustFirstName>
        <InOutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_81">str_FirstName</CSharpReference>
        </InOutArgument>
      </dp:PaymentsCreation.str_io_CustFirstName>
      <dp:PaymentsCreation.str_io_CustLastName>
        <InOutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_80">str_LastName</CSharpReference>
        </InOutArgument>
      </dp:PaymentsCreation.str_io_CustLastName>
    </dp:PaymentsCreation>
    <dp:VerifytheCustomerDetails Stepid="{x:Null}" int_ReportId="{x:Null}" sap:VirtualizedContainerService.HintSize="617.6,1078.4" sap2010:WorkflowViewState.IdRef="VerifytheCustomerDetails_1" Step="Step">
      <dp:VerifytheCustomerDetails.In_Report_ID>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_201">int_ReportId</CSharpValue>
        </InArgument>
      </dp:VerifytheCustomerDetails.In_Report_ID>
      <dp:VerifytheCustomerDetails.in_CustomerName>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_244">str_VaultCustomer</CSharpValue>
        </InArgument>
      </dp:VerifytheCustomerDetails.in_CustomerName>
      <dp:VerifytheCustomerDetails.int_in_ReportId>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_216">int_ReportId</CSharpValue>
        </InArgument>
      </dp:VerifytheCustomerDetails.int_in_ReportId>
      <dp:VerifytheCustomerDetails.out_Test_ID>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_202">out_TestID</CSharpValue>
        </InArgument>
      </dp:VerifytheCustomerDetails.out_Test_ID>
      <dp:VerifytheCustomerDetails.str_in_Address>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_209">str_CustomerAddress</CSharpValue>
        </InArgument>
      </dp:VerifytheCustomerDetails.str_in_Address>
      <dp:VerifytheCustomerDetails.str_in_CardNumber>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_207">str_CardNumber</CSharpValue>
        </InArgument>
      </dp:VerifytheCustomerDetails.str_in_CardNumber>
      <dp:VerifytheCustomerDetails.str_in_City>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_211">str_CustomerCity</CSharpValue>
        </InArgument>
      </dp:VerifytheCustomerDetails.str_in_City>
      <dp:VerifytheCustomerDetails.str_in_Country>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_208">str_Country</CSharpValue>
        </InArgument>
      </dp:VerifytheCustomerDetails.str_in_Country>
      <dp:VerifytheCustomerDetails.str_in_Countrycode>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_214">str_CustomerCountryCode</CSharpValue>
        </InArgument>
      </dp:VerifytheCustomerDetails.str_in_Countrycode>
      <dp:VerifytheCustomerDetails.str_in_FirstName>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_204">str_FirstName</CSharpValue>
        </InArgument>
      </dp:VerifytheCustomerDetails.str_in_FirstName>
      <dp:VerifytheCustomerDetails.str_in_LastName>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_205">str_LastName</CSharpValue>
        </InArgument>
      </dp:VerifytheCustomerDetails.str_in_LastName>
      <dp:VerifytheCustomerDetails.str_in_MailId>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_206">str_Mail</CSharpValue>
        </InArgument>
      </dp:VerifytheCustomerDetails.str_in_MailId>
      <dp:VerifytheCustomerDetails.str_in_Phonenumber>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_213">str_CustomerPhone</CSharpValue>
        </InArgument>
      </dp:VerifytheCustomerDetails.str_in_Phonenumber>
      <dp:VerifytheCustomerDetails.str_in_SelectMerchant>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_203">str_Merchant</CSharpValue>
        </InArgument>
      </dp:VerifytheCustomerDetails.str_in_SelectMerchant>
      <dp:VerifytheCustomerDetails.str_in_State>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_210">str_CustomerState</CSharpValue>
        </InArgument>
      </dp:VerifytheCustomerDetails.str_in_State>
      <dp:VerifytheCustomerDetails.str_in_TestId>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_215">out_TestID</CSharpValue>
        </InArgument>
      </dp:VerifytheCustomerDetails.str_in_TestId>
      <dp:VerifytheCustomerDetails.str_in_ZipCode>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_212">str_CustomerZipCode</CSharpValue>
        </InArgument>
      </dp:VerifytheCustomerDetails.str_in_ZipCode>
    </dp:VerifytheCustomerDetails>
    <dv:Verify_the_Sale_Item_Fields DisplayName="Verify the Sale Item Fields" sap:VirtualizedContainerService.HintSize="617.6,194.4" sap2010:WorkflowViewState.IdRef="Verify_the_Sale_Item_Fields_1" Step="Step">
      <dv:Verify_the_Sale_Item_Fields.in_Report_ID>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_156">int_ReportId</CSharpValue>
        </InArgument>
      </dv:Verify_the_Sale_Item_Fields.in_Report_ID>
      <dv:Verify_the_Sale_Item_Fields.in_TestID>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_155">out_TestID</CSharpValue>
        </InArgument>
      </dv:Verify_the_Sale_Item_Fields.in_TestID>
    </dv:Verify_the_Sale_Item_Fields>
    <dp1:AddQuickSaleItem str_in_Url="{x:Null}" DisplayName="Add quick sale item" sap:VirtualizedContainerService.HintSize="617.6,402.4" sap2010:WorkflowViewState.IdRef="AddQuickSaleItem_3">
      <dp1:AddQuickSaleItem.dbl_out_SaleItemTaxRate>
        <OutArgument x:TypeArguments="x:Double">
          <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_82">dbl_QuickSaleItemTaxRate</CSharpReference>
        </OutArgument>
      </dp1:AddQuickSaleItem.dbl_out_SaleItemTaxRate>
      <dp1:AddQuickSaleItem.int_in_ReportId>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_160">int_ReportId</CSharpValue>
        </InArgument>
      </dp1:AddQuickSaleItem.int_in_ReportId>
      <dp1:AddQuickSaleItem.str_in_SaleItemName>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_157">str_QuickSaleItemName</CSharpValue>
        </InArgument>
      </dp1:AddQuickSaleItem.str_in_SaleItemName>
      <dp1:AddQuickSaleItem.str_in_SaleItemPrice>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_158">dbl_QuickSaleItemPrice.ToString()</CSharpValue>
        </InArgument>
      </dp1:AddQuickSaleItem.str_in_SaleItemPrice>
      <dp1:AddQuickSaleItem.str_in_SaleItemTaxName>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_161">str_QuickSaleItemTaxName</CSharpValue>
        </InArgument>
      </dp1:AddQuickSaleItem.str_in_SaleItemTaxName>
      <dp1:AddQuickSaleItem.str_in_TestId>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_159">out_TestID</CSharpValue>
        </InArgument>
      </dp1:AddQuickSaleItem.str_in_TestId>
    </dp1:AddQuickSaleItem>
    <dp1:AddPresetSaleItem str_in_Url="{x:Null}" sap:VirtualizedContainerService.HintSize="617.6,402.4" sap2010:WorkflowViewState.IdRef="AddPresetSaleItem_3">
      <dp1:AddPresetSaleItem.dbl_out_PresetSaleItemTaxRate>
        <OutArgument x:TypeArguments="x:Double">
          <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_84">dbl_PresetSaleItemTaxRate</CSharpReference>
        </OutArgument>
      </dp1:AddPresetSaleItem.dbl_out_PresetSaleItemTaxRate>
      <dp1:AddPresetSaleItem.int_in_ReportId>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_163">int_ReportId</CSharpValue>
        </InArgument>
      </dp1:AddPresetSaleItem.int_in_ReportId>
      <dp1:AddPresetSaleItem.str_in_SearchSaleItem>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_162">str_SearchPresetSaleitemName</CSharpValue>
        </InArgument>
      </dp1:AddPresetSaleItem.str_in_SearchSaleItem>
      <dp1:AddPresetSaleItem.str_in_TestId>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_164">out_TestID</CSharpValue>
        </InArgument>
      </dp1:AddPresetSaleItem.str_in_TestId>
      <dp1:AddPresetSaleItem.str_out_PresetItemName>
        <OutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_85">str_PresetSaleItemName</CSharpReference>
        </OutArgument>
      </dp1:AddPresetSaleItem.str_out_PresetItemName>
      <dp1:AddPresetSaleItem.str_out_SaleItemPrice>
        <OutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_83">str_PresetSaleItemPrice</CSharpReference>
        </OutArgument>
      </dp1:AddPresetSaleItem.str_out_SaleItemPrice>
    </dp1:AddPresetSaleItem>
    <Assign sap:VirtualizedContainerService.HintSize="617.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Double">
          <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">dbl_PresetSaleItemPrice</CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Double">
          <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">Convert.ToDouble(str_PresetSaleItemPrice)</CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <dp1:AdditionalFields str_in_InvoiceNumber="{x:Null}" str_in_Url="{x:Null}" str_out_TaxRatePercentage="{x:Null}" DisplayName="Additional fields" sap:VirtualizedContainerService.HintSize="617.6,558.4" sap2010:WorkflowViewState.IdRef="AdditionalFields_5" str_in_CustomerTaxExempt="False">
      <dp1:AdditionalFields.int_in_ReportId>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_168">int_ReportId</CSharpValue>
        </InArgument>
      </dp1:AdditionalFields.int_in_ReportId>
      <dp1:AdditionalFields.str_in_DiscountRate>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_166">str_DiscountRateTax</CSharpValue>
        </InArgument>
      </dp1:AdditionalFields.str_in_DiscountRate>
      <dp1:AdditionalFields.str_in_OrderNote>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_165">str_OrderNote</CSharpValue>
        </InArgument>
      </dp1:AdditionalFields.str_in_OrderNote>
      <dp1:AdditionalFields.str_in_TaxRateListName>
        <InArgument x:TypeArguments="x:String" />
      </dp1:AdditionalFields.str_in_TaxRateListName>
      <dp1:AdditionalFields.str_in_TestId>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_167">out_TestID</CSharpValue>
        </InArgument>
      </dp1:AdditionalFields.str_in_TestId>
      <dp1:AdditionalFields.str_out_DiscountRateAmount>
        <OutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_86">str_DiscountRateAmount</CSharpReference>
        </OutArgument>
      </dp1:AdditionalFields.str_out_DiscountRateAmount>
    </dp1:AdditionalFields>
    <dv:Verify_the_Additional_fields DisplayName="Verify the Additional fields" sap:VirtualizedContainerService.HintSize="617.6,246.4" sap2010:WorkflowViewState.IdRef="Verify_the_Additional_fields_3" Step="Step">
      <dv:Verify_the_Additional_fields.In_Report_ID>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_169">int_ReportId</CSharpValue>
        </InArgument>
      </dv:Verify_the_Additional_fields.In_Report_ID>
      <dv:Verify_the_Additional_fields.in_TestID>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_170">out_TestID</CSharpValue>
        </InArgument>
      </dv:Verify_the_Additional_fields.in_TestID>
      <dv:Verify_the_Additional_fields.out_Test_ID>
        <InArgument x:TypeArguments="x:String" />
      </dv:Verify_the_Additional_fields.out_Test_ID>
    </dv:Verify_the_Additional_fields>
    <dv:SelectVaultType out_TestID="{x:Null}" sap:VirtualizedContainerService.HintSize="617.6,558.4" sap2010:WorkflowViewState.IdRef="SelectVaultType_1" Step="Step">
      <dv:SelectVaultType.In_Report_ID>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_172">int_ReportId</CSharpValue>
        </InArgument>
      </dv:SelectVaultType.In_Report_ID>
      <dv:SelectVaultType.in_CardNumber>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_109">str_CardNumber</CSharpValue>
        </InArgument>
      </dv:SelectVaultType.in_CardNumber>
      <dv:SelectVaultType.in_PaymentType>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_143">str_VaultPaymentType</CSharpValue>
        </InArgument>
      </dv:SelectVaultType.in_PaymentType>
      <dv:SelectVaultType.in_SelectCard>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_110">str_SelectCard</CSharpValue>
        </InArgument>
      </dv:SelectVaultType.in_SelectCard>
      <dv:SelectVaultType.in_TestID>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_175">out_TestID</CSharpValue>
        </InArgument>
      </dv:SelectVaultType.in_TestID>
      <dv:SelectVaultType.str_CardType>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_173">str_CardType</CSharpValue>
        </InArgument>
      </dv:SelectVaultType.str_CardType>
      <dv:SelectVaultType.str_in_CardLogo>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_174">str_CardType</CSharpValue>
        </InArgument>
      </dv:SelectVaultType.str_in_CardLogo>
      <dv:SelectVaultType.str_in_VaultType>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_171">str_VaultPaymentType</CSharpValue>
        </InArgument>
      </dv:SelectVaultType.str_in_VaultType>
    </dv:SelectVaultType>
    <Assign DisplayName="Assign Add two Sale Item Price" sap:VirtualizedContainerService.HintSize="617.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Double">
          <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">dbl_TwoSaleItemTotal</CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Double">
          <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">dbl_QuickSaleItemPrice+dbl_PresetSaleItemPrice</CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <dp1:OrderSummary str_in_AmountTendered="{x:Null}" str_in_ThirdSaleItem="{x:Null}" str_in_Url="{x:Null}" DisplayName="Order summary" sap:VirtualizedContainerService.HintSize="617.6,52.8" sap2010:WorkflowViewState.IdRef="OrderSummary_3" dbl_in_ThirdSaleItemTaxRate="0" dbl_in_ThirdSaleitemPrice="0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <dp1:OrderSummary.bool_in_RemoveSurcharge>
        <InArgument x:TypeArguments="x:Boolean">
          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_188">bool_RemoveSurcharge</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.bool_in_RemoveSurcharge>
      <dp1:OrderSummary.dbl_in_DiscountRateAmount>
        <InArgument x:TypeArguments="x:Double">
          <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_191">Convert.ToDouble(str_DiscountRateAmount)</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.dbl_in_DiscountRateAmount>
      <dp1:OrderSummary.dbl_in_FirstSaleItemTaxRate>
        <InArgument x:TypeArguments="x:Double">
          <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_192">dbl_QuickSaleItemTaxRate</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.dbl_in_FirstSaleItemTaxRate>
      <dp1:OrderSummary.dbl_in_FirstSaleitemPrice>
        <InArgument x:TypeArguments="x:Double">
          <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_194">dbl_QuickSaleItemPrice</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.dbl_in_FirstSaleitemPrice>
      <dp1:OrderSummary.dbl_in_SaleItemTotalAmount>
        <InArgument x:TypeArguments="x:Double">
          <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_176">dbl_TwoSaleItemTotal</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.dbl_in_SaleItemTotalAmount>
      <dp1:OrderSummary.dbl_in_SecondSaleItemTaxRate>
        <InArgument x:TypeArguments="x:Double">
          <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_193">dbl_PresetSaleItemTaxRate</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.dbl_in_SecondSaleItemTaxRate>
      <dp1:OrderSummary.dbl_in_SecondSaleitemPrice>
        <InArgument x:TypeArguments="x:Double">
          <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_195">dbl_PresetSaleItemPrice</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.dbl_in_SecondSaleitemPrice>
      <dp1:OrderSummary.dbl_out_TotalAmount>
        <OutArgument x:TypeArguments="x:Double">
          <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_87">dbl_TotalAmount</CSharpReference>
        </OutArgument>
      </dp1:OrderSummary.dbl_out_TotalAmount>
      <dp1:OrderSummary.int_in_ReportId>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_178">int_ReportId</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.int_in_ReportId>
      <dp1:OrderSummary.str_in_CardType>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_180">str_CardType</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_CardType>
      <dp1:OrderSummary.str_in_CustomerAddress>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_183">str_CustomerAddress</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_CustomerAddress>
      <dp1:OrderSummary.str_in_CustomerCity>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_184">str_CustomerCity</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_CustomerCity>
      <dp1:OrderSummary.str_in_CustomerCountryCode>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_187">str_CustomerCountryCode</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_CustomerCountryCode>
      <dp1:OrderSummary.str_in_CustomerSateCode>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_185">str_CustomerStateCode</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_CustomerSateCode>
      <dp1:OrderSummary.str_in_CustomerZipCode>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_186">str_CustomerZipCode</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_CustomerZipCode>
      <dp1:OrderSummary.str_in_FirstName>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_181">str_FirstName</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_FirstName>
      <dp1:OrderSummary.str_in_FirstSaleItem>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_190">str_QuickSaleItemName</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_FirstSaleItem>
      <dp1:OrderSummary.str_in_Last4Digits>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_197">str_SelectCard</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_Last4Digits>
      <dp1:OrderSummary.str_in_LastName>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_182">str_LastName</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_LastName>
      <dp1:OrderSummary.str_in_OrderNote>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_179">str_OrderNote</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_OrderNote>
      <dp1:OrderSummary.str_in_PaymentType>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_196">str_PaymentType</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_PaymentType>
      <dp1:OrderSummary.str_in_SecondSaleItem>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_189">str_PresetSaleItemName</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_SecondSaleItem>
      <dp1:OrderSummary.str_in_TestId>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_177">out_TestID</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_TestId>
    </dp1:OrderSummary>
    <dp:EditSaleitemQuantityInOrderSummary str_in_Url="{x:Null}" sap:VirtualizedContainerService.HintSize="617.6,298.4" sap2010:WorkflowViewState.IdRef="EditSaleitemQuantityInOrderSummary_1" str_in_SaleItemQuantity="2">
      <dp:EditSaleitemQuantityInOrderSummary.int_in_ReportId>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_245">int_ReportId</CSharpValue>
        </InArgument>
      </dp:EditSaleitemQuantityInOrderSummary.int_in_ReportId>
      <dp:EditSaleitemQuantityInOrderSummary.str_in_SaleItemName>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_246">str_QuickSaleItemName</CSharpValue>
        </InArgument>
      </dp:EditSaleitemQuantityInOrderSummary.str_in_SaleItemName>
      <dp:EditSaleitemQuantityInOrderSummary.str_in_TestId>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_247">str_TestId</CSharpValue>
        </InArgument>
      </dp:EditSaleitemQuantityInOrderSummary.str_in_TestId>
    </dp:EditSaleitemQuantityInOrderSummary>
    <Assign DisplayName="Assign Add two Sale Item Price" sap:VirtualizedContainerService.HintSize="617.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Double">
          <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_117">dbl_TwoSaleItemTotal</CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Double">
          <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_248">dbl_QuickSaleItemPrice+dbl_PresetSaleItemPrice+dbl_QuickSaleItemPrice</CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <dp1:OrderSummary str_in_AmountTendered="{x:Null}" str_in_ThirdSaleItem="{x:Null}" str_in_Url="{x:Null}" DisplayName="Order summary" sap:VirtualizedContainerService.HintSize="617.6,52.8" sap2010:WorkflowViewState.IdRef="OrderSummary_4" dbl_in_ThirdSaleItemTaxRate="0" dbl_in_ThirdSaleitemPrice="0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <dp1:OrderSummary.bool_in_RemoveSurcharge>
        <InArgument x:TypeArguments="x:Boolean">
          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_249">bool_RemoveSurcharge</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.bool_in_RemoveSurcharge>
      <dp1:OrderSummary.dbl_in_DiscountRateAmount>
        <InArgument x:TypeArguments="x:Double">
          <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_250">Convert.ToDouble(str_DiscountRateAmount)</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.dbl_in_DiscountRateAmount>
      <dp1:OrderSummary.dbl_in_FirstSaleItemTaxRate>
        <InArgument x:TypeArguments="x:Double">
          <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_251">dbl_QuickSaleItemTaxRate</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.dbl_in_FirstSaleItemTaxRate>
      <dp1:OrderSummary.dbl_in_FirstSaleitemPrice>
        <InArgument x:TypeArguments="x:Double">
          <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_252">dbl_QuickSaleItemPrice</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.dbl_in_FirstSaleitemPrice>
      <dp1:OrderSummary.dbl_in_SaleItemTotalAmount>
        <InArgument x:TypeArguments="x:Double">
          <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_253">dbl_TwoSaleItemTotal</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.dbl_in_SaleItemTotalAmount>
      <dp1:OrderSummary.dbl_in_SecondSaleItemTaxRate>
        <InArgument x:TypeArguments="x:Double">
          <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_254">dbl_PresetSaleItemTaxRate</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.dbl_in_SecondSaleItemTaxRate>
      <dp1:OrderSummary.dbl_in_SecondSaleitemPrice>
        <InArgument x:TypeArguments="x:Double">
          <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_255">dbl_PresetSaleItemPrice</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.dbl_in_SecondSaleitemPrice>
      <dp1:OrderSummary.dbl_out_TotalAmount>
        <OutArgument x:TypeArguments="x:Double">
          <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_118">dbl_TotalAmount</CSharpReference>
        </OutArgument>
      </dp1:OrderSummary.dbl_out_TotalAmount>
      <dp1:OrderSummary.int_in_ReportId>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_256">int_ReportId</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.int_in_ReportId>
      <dp1:OrderSummary.str_in_CardType>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_257">str_CardType</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_CardType>
      <dp1:OrderSummary.str_in_CustomerAddress>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_258">str_CustomerAddress</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_CustomerAddress>
      <dp1:OrderSummary.str_in_CustomerCity>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_259">str_CustomerCity</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_CustomerCity>
      <dp1:OrderSummary.str_in_CustomerCountryCode>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_260">str_CustomerCountryCode</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_CustomerCountryCode>
      <dp1:OrderSummary.str_in_CustomerSateCode>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_261">str_CustomerStateCode</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_CustomerSateCode>
      <dp1:OrderSummary.str_in_CustomerZipCode>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_262">str_CustomerZipCode</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_CustomerZipCode>
      <dp1:OrderSummary.str_in_FirstName>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_263">str_FirstName</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_FirstName>
      <dp1:OrderSummary.str_in_FirstSaleItem>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_264">str_QuickSaleItemName</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_FirstSaleItem>
      <dp1:OrderSummary.str_in_Last4Digits>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_265">str_SelectCard</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_Last4Digits>
      <dp1:OrderSummary.str_in_LastName>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_266">str_LastName</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_LastName>
      <dp1:OrderSummary.str_in_OrderNote>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_267">str_OrderNote</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_OrderNote>
      <dp1:OrderSummary.str_in_PaymentType>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_268">str_PaymentType</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_PaymentType>
      <dp1:OrderSummary.str_in_SecondSaleItem>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_269">str_PresetSaleItemName</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_SecondSaleItem>
      <dp1:OrderSummary.str_in_TestId>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_270">out_TestID</CSharpValue>
        </InArgument>
      </dp1:OrderSummary.str_in_TestId>
    </dp1:OrderSummary>
    <dv:CloseOrderSummary sap:VirtualizedContainerService.HintSize="617.6,24.8" sap2010:WorkflowViewState.IdRef="CloseOrderSummary_1" />
    <dp:VerifyChargeButtonAmount DisplayName="Verify charge button amount" sap:VirtualizedContainerService.HintSize="617.6,194.4" sap2010:WorkflowViewState.IdRef="VerifyChargeButtonAmount_2">
      <dp:VerifyChargeButtonAmount.dbl_in_ExpectedTotalAmount>
        <InArgument x:TypeArguments="x:Double">
          <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_133">dbl_TotalAmount</CSharpValue>
        </InArgument>
      </dp:VerifyChargeButtonAmount.dbl_in_ExpectedTotalAmount>
      <dp:VerifyChargeButtonAmount.int_in_reportId>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_134">int_ReportId</CSharpValue>
        </InArgument>
      </dp:VerifyChargeButtonAmount.int_in_reportId>
      <dp:VerifyChargeButtonAmount.str_in_testId>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_198">out_TestID</CSharpValue>
        </InArgument>
      </dp:VerifyChargeButtonAmount.str_in_testId>
    </dp:VerifyChargeButtonAmount>
    <dv:VerifyTransactionSuccessAndAuthorizationCode str_out_AuthorizationCode="{x:Null}" sap:VirtualizedContainerService.HintSize="617.6,246.4" sap2010:WorkflowViewState.IdRef="VerifyTransactionSuccessAndAuthorizationCode_1">
      <dv:VerifyTransactionSuccessAndAuthorizationCode.int_in_ReportId>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_199">int_ReportId</CSharpValue>
        </InArgument>
      </dv:VerifyTransactionSuccessAndAuthorizationCode.int_in_ReportId>
      <dv:VerifyTransactionSuccessAndAuthorizationCode.str_in_PaymentType>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">str_PaymentType</CSharpValue>
        </InArgument>
      </dv:VerifyTransactionSuccessAndAuthorizationCode.str_in_PaymentType>
      <dv:VerifyTransactionSuccessAndAuthorizationCode.str_in_TestId>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_200">out_TestID</CSharpValue>
        </InArgument>
      </dv:VerifyTransactionSuccessAndAuthorizationCode.str_in_TestId>
    </dv:VerifyTransactionSuccessAndAuthorizationCode>
  </Sequence>
</Activity>