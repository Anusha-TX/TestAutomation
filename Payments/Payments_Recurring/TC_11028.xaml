<Activity mc:Ignorable="sap sap2010" x:Class="TC_11028_New" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:cr="clr-namespace:CommonLibrary.Report;assembly=CommonLibrary" xmlns:dc="clr-namespace:Deluxe_ReusableLibrary.Customer_Vault;assembly=Deluxe_ReusableLibrary" xmlns:dl="clr-namespace:Deluxe_ReusableLibrary.Login;assembly=Deluxe_ReusableLibrary" xmlns:dl1="clr-namespace:Deluxe_ReusableLibrary.Logout;assembly=Deluxe_ReusableLibrary" xmlns:dp="clr-namespace:Deluxe_ReusableLibrary.Payments;assembly=Deluxe_ReusableLibrary" xmlns:dr="clr-namespace:Deluxe_ReusableLibrary.RealTimeTransaction;assembly=Deluxe_ReusableLibrary" xmlns:dr1="clr-namespace:Deluxe_ReusableLibrary.Reports;assembly=Deluxe_ReusableLibrary" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:ra="clr-namespace:ReporterForUiPath.Activities;assembly=ReporterForUiPath.Activities" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="int_ReportId" Type="InArgument(x:Int32)" />
    <x:Property Name="str_SuiteId" Type="OutArgument(x:String)" />
    <x:Property Name="str_TestId" Type="OutArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>789.3333333333334,7523.333333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>TC_11028_New_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>CommonLibrary.Report</x:String>
      <x:String>Deluxe_ReusableLibrary.Customer_Vault</x:String>
      <x:String>Deluxe_ReusableLibrary.Login</x:String>
      <x:String>Deluxe_ReusableLibrary.Logout</x:String>
      <x:String>Deluxe_ReusableLibrary.Payments</x:String>
      <x:String>Deluxe_ReusableLibrary.RealTimeTransaction</x:String>
      <x:String>Deluxe_ReusableLibrary.Reports</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>ReporterForUiPath.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Web.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>CommonLibrary</AssemblyReference>
      <AssemblyReference>Deluxe_ReusableLibrary</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>ReporterForUiPath</AssemblyReference>
      <AssemblyReference>ReporterForUiPath.Activities</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Windows.Forms.Design</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="799.3333333333334,7458.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_17">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="str_Url" />
      <Variable x:TypeArguments="x:String" Name="ReportPath" />
      <Variable x:TypeArguments="x:String" Name="File_Path" />
      <Variable x:TypeArguments="x:String" Name="Report_Path" />
      <Variable x:TypeArguments="x:String" Name="FilePath_OP" />
      <Variable x:TypeArguments="x:String" Name="ReportPath_OP" />
      <Variable x:TypeArguments="njl:JObject" Name="ExcelFilePathJ" />
      <Variable x:TypeArguments="njl:JObject" Name="ReportFilePathJ" />
      <Variable x:TypeArguments="x:String" Default="TC_11028" Name="str_In_TestCaseID" />
      <Variable x:TypeArguments="x:String" Name="str_GetFirstName" />
      <Variable x:TypeArguments="x:String" Name="str_GetLastName" />
      <Variable x:TypeArguments="x:String" Name="str_Getemail" />
      <Variable x:TypeArguments="x:String" Name="str_GetRecurringStatus" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="737.3333333333334,7370.666666666667" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="TC_11028_New" sap:VirtualizedContainerService.HintSize="698.6666666666666,7109.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="PaymentMethod" />
            <Variable x:TypeArguments="x:String" Name="TotalAmount" />
            <Variable x:TypeArguments="sd:DataTable" Name="dt_DataTable" />
            <Variable x:TypeArguments="sd:DataTable" Name="dt_TestCaseData" />
            <Variable x:TypeArguments="x:String" Name="MerchantName" />
            <Variable x:TypeArguments="x:String" Name="Email" />
            <Variable x:TypeArguments="x:String" Name="Phone" />
            <Variable x:TypeArguments="x:String" Name="PaymentType" />
            <Variable x:TypeArguments="x:String" Name="AccountNickName" />
            <Variable x:TypeArguments="x:String" Name="RoutingNumber" />
            <Variable x:TypeArguments="x:String" Name="AccountNumber" />
            <Variable x:TypeArguments="x:String" Name="AccountType" />
            <Variable x:TypeArguments="x:Double" Name="str_Out_TotalAmount" />
            <Variable x:TypeArguments="x:String" Name="OrderNote" />
            <Variable x:TypeArguments="x:String" Name="DiscountRate" />
            <Variable x:TypeArguments="x:String" Name="out_CustomerStateCode" />
            <Variable x:TypeArguments="x:String" Name="out_DiscountRateAmount" />
            <Variable x:TypeArguments="x:String" Name="InvoiceNumber" />
            <Variable x:TypeArguments="x:Double" Name="Out_TotalAmount" />
            <Variable x:TypeArguments="x:String" Name="Out_MID" />
            <Variable x:TypeArguments="x:String" Name="Out_CustFirstName" />
            <Variable x:TypeArguments="x:String" Name="Out_CustLastName" />
            <Variable x:TypeArguments="x:String" Name="str_in_Frequency" />
            <Variable x:TypeArguments="x:String" Name="str_Frequency" />
            <Variable x:TypeArguments="x:String" Name="SearchPresetSaleItem1" />
            <Variable x:TypeArguments="x:String" Name="out_PresetSaleItemPrice1" />
            <Variable x:TypeArguments="x:Double" Name="out_PresetSaleItemTaxRate1" />
            <Variable x:TypeArguments="x:String" Name="Out_PresetsaleItemName1" />
            <Variable x:TypeArguments="x:String" Name="out_SKUCodePresetSaleItem1" />
            <Variable x:TypeArguments="x:String" Name="SearchPresetSaleItem2" />
            <Variable x:TypeArguments="x:String" Name="out_PresetSaleItemPrice2" />
            <Variable x:TypeArguments="x:Double" Name="out_PresetSaleItemTaxRate2" />
            <Variable x:TypeArguments="x:String" Name="Out_PresetsaleItemName2" />
            <Variable x:TypeArguments="x:String" Name="out_SKUCodePresetSaleItem2" />
            <Variable x:TypeArguments="x:Double" Name="TwoPresetSaleItemPrice" />
            <Variable x:TypeArguments="x:String" Name="TaxRateListName" />
            <Variable x:TypeArguments="x:String" Name="CustomerState" />
            <Variable x:TypeArguments="x:String" Name="CustomerAddress" />
            <Variable x:TypeArguments="x:String" Name="CustomerCity" />
            <Variable x:TypeArguments="x:String" Name="CustomerZipCode" />
            <Variable x:TypeArguments="x:String" Name="CustomerDefaultCountry" />
            <Variable x:TypeArguments="x:String" Name="CustomerCountryCode" />
            <Variable x:TypeArguments="x:String" Name="out_StartDate" />
            <Variable x:TypeArguments="x:String" Name="out_CustomerID" />
            <Variable x:TypeArguments="x:String" Name="out_RecurringID" />
            <Variable x:TypeArguments="x:String" Name="out_EndDate" />
            <Variable x:TypeArguments="x:String" Name="Last4Digit" />
            <Variable x:TypeArguments="x:String" Name="out_TransactionStatus" />
            <Variable x:TypeArguments="x:String" Name="out_AuthorizationCode" />
            <Variable x:TypeArguments="x:String" Name="PaymentType_RealTimeGrid" />
            <Variable x:TypeArguments="x:String" Name="out_PaymendID" />
            <Variable x:TypeArguments="x:String" Name="RecurringStatus" />
            <Variable x:TypeArguments="x:String" Name="Action_Skip" />
            <Variable x:TypeArguments="x:String" Name="Merchant_MID" />
            <Variable x:TypeArguments="x:String" Name="TransactionGrid_Type" />
            <Variable x:TypeArguments="x:String" Name="SubmissionMethod" />
            <Variable x:TypeArguments="x:String" Name="TransactionInformation_Cardtype" />
            <Variable x:TypeArguments="x:String" Name="ProseccingFeeIncluded" />
            <Variable x:TypeArguments="x:String" Name="PartOfRecurringSchedule" />
            <Variable x:TypeArguments="x:String" Name="Receipt_MerchantName" />
            <Variable x:TypeArguments="x:String" Name="ReceiptDetail_AccountType" />
            <Variable x:TypeArguments="x:String" Name="FooterLine1" />
            <Variable x:TypeArguments="x:String" Name="FooterLine2" />
            <Variable x:TypeArguments="x:String" Name="FooterLine3" />
            <Variable x:TypeArguments="x:String" Name="ReceiptDetail_MercahntAddress1" />
            <Variable x:TypeArguments="x:String" Name="MerchantZipCode" />
            <Variable x:TypeArguments="x:String" Name="MerchantPhone" />
            <Variable x:TypeArguments="x:String" Name="MerchantName_TransactionReport" />
            <Variable x:TypeArguments="x:String" Name="MerchantField" />
            <Variable x:TypeArguments="x:String" Name="TransactionType_TransactionReport" />
            <Variable x:TypeArguments="x:String" Name="PaymentType_TransactionReport" />
            <Variable x:TypeArguments="x:String" Name="PaymentMethod_SaleItemReport" />
            <Variable x:TypeArguments="x:String" Name="SaleItem1ItemQuantity" />
            <Variable x:TypeArguments="x:String" Name="SaleItem2ItemQuantity" />
            <Variable x:TypeArguments="x:String" Name="ExcelPath" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Extract Dynamic Testdata and Reports Path" sap:VirtualizedContainerService.HintSize="636.6666666666666,124.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_14">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_93">File_Path</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Config\ExcelPath.json</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_94">Report_Path</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Config\Reportpath.json</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ReadTextFile File="{x:Null}" DisplayName="Read Text File" sap:VirtualizedContainerService.HintSize="434,80" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
              <ui:ReadTextFile.Content>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_82">FilePath_OP</CSharpReference>
                </OutArgument>
              </ui:ReadTextFile.Content>
              <ui:ReadTextFile.FileName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_350">File_Path</CSharpValue>
                </InArgument>
              </ui:ReadTextFile.FileName>
            </ui:ReadTextFile>
            <ui:ReadTextFile File="{x:Null}" DisplayName="Read Text File" sap:VirtualizedContainerService.HintSize="434,80" sap2010:WorkflowViewState.IdRef="ReadTextFile_2">
              <ui:ReadTextFile.Content>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_83">ReportPath_OP</CSharpReference>
                </OutArgument>
              </ui:ReadTextFile.Content>
              <ui:ReadTextFile.FileName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_351">Report_Path</CSharpValue>
                </InArgument>
              </ui:ReadTextFile.FileName>
            </ui:ReadTextFile>
            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1">
              <ui:DeserializeJson.JsonObject>
                <OutArgument x:TypeArguments="njl:JObject">
                  <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_84">ExcelFilePathJ</CSharpReference>
                </OutArgument>
              </ui:DeserializeJson.JsonObject>
              <ui:DeserializeJson.JsonString>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_352">FilePath_OP</CSharpValue>
                </InArgument>
              </ui:DeserializeJson.JsonString>
            </ui:DeserializeJson>
            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2">
              <ui:DeserializeJson.JsonObject>
                <OutArgument x:TypeArguments="njl:JObject">
                  <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_85">ReportFilePathJ</CSharpReference>
                </OutArgument>
              </ui:DeserializeJson.JsonObject>
              <ui:DeserializeJson.JsonString>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_353">ReportPath_OP</CSharpValue>
                </InArgument>
              </ui:DeserializeJson.JsonString>
            </ui:DeserializeJson>
            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_86">ExcelPath</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_354">Path.Combine(Environment.CurrentDirectory,ExcelFilePathJ.SelectToken("Excel_path").ToString())</CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_95">ReportPath</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_355">System.IO.Path.Combine(Environment.CurrentDirectory, ReportFilePathJ.SelectToken("Report_path").ToString())</CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <Sequence DisplayName="Repoert" sap:VirtualizedContainerService.HintSize="636.6666666666666,1052" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If sap:VirtualizedContainerService.HintSize="450,524.6666666666666" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_358">int_ReportId.Equals(0)==true</CSharpValue>
                </InArgument>
              </If.Condition>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,243.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ra:CreateReport ContinueOnError="{x:Null}" DisplayName="Create Report" sap:VirtualizedContainerService.HintSize="354,158.66666666666666" sap2010:WorkflowViewState.IdRef="CreateReport_3" ReportName="TC_11028">
                    <ra:CreateReport.ReportLocation>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_356">ReportPath</CSharpValue>
                      </InArgument>
                    </ra:CreateReport.ReportLocation>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ra:CreateReport.isCreated>
                      <OutArgument x:TypeArguments="x:Int32">
                        <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">int_ReportId</CSharpReference>
                      </OutArgument>
                    </ra:CreateReport.isCreated>
                  </ra:CreateReport>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,101.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_16">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <ra:StartSuite ContinueOnError="{x:Null}" DisplayName="Start Suite" sap:VirtualizedContainerService.HintSize="450,126.66666666666667" sap2010:WorkflowViewState.IdRef="StartSuite_1" SuiteName="Payments_Recurring">
              <ra:StartSuite.ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">int_ReportId</CSharpValue>
                </InArgument>
              </ra:StartSuite.ReportId>
              <ra:StartSuite.suiteId>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">str_SuiteId</CSharpReference>
                </OutArgument>
              </ra:StartSuite.suiteId>
            </ra:StartSuite>
            <cr:startTest sap:VirtualizedContainerService.HintSize="450,272.6666666666667" sap2010:WorkflowViewState.IdRef="startTest_1" str_in_testName="TC_11028_Payments_VerifyTheCustomerAndRecurringDetails ">
              <cr:startTest.int_in_ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">int_ReportId</CSharpValue>
                </InArgument>
              </cr:startTest.int_in_ReportId>
              <cr:startTest.str_in_SuiteId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">str_SuiteId</CSharpValue>
                </InArgument>
              </cr:startTest.str_in_SuiteId>
              <cr:startTest.str_out_TestId>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">str_TestId</CSharpReference>
                </OutArgument>
              </cr:startTest.str_out_TestId>
            </cr:startTest>
          </Sequence>
          <Sequence DisplayName="Excel" sap:VirtualizedContainerService.HintSize="636.6666666666666,2344" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadRange Range="{x:Null}" AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="574.6666666666666,128" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Payments">
              <ui:ReadRange.DataTable>
                <OutArgument x:TypeArguments="sd:DataTable">
                  <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_28">dt_DataTable</CSharpReference>
                </OutArgument>
              </ui:ReadRange.DataTable>
              <ui:ReadRange.WorkbookPath>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_357">ExcelPath</CSharpValue>
                </InArgument>
              </ui:ReadRange.WorkbookPath>
            </ui:ReadRange>
            <ui:FilterDataTable DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="574.6666666666666,202.66666666666666" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" SelectColumnsMode="Remove">
              <ui:FilterDataTable.DataTable>
                <InArgument x:TypeArguments="sd:DataTable">
                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_234">dt_DataTable</CSharpValue>
                </InArgument>
              </ui:FilterDataTable.DataTable>
              <ui:FilterDataTable.Filters>
                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                  <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                    <ui:FilterOperationArgument.Column>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_232">"TestCaseId"</CSharpValue>
                      </InArgument>
                    </ui:FilterOperationArgument.Column>
                    <ui:FilterOperationArgument.Operand>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_233">str_In_TestCaseID</CSharpValue>
                      </InArgument>
                    </ui:FilterOperationArgument.Operand>
                  </ui:FilterOperationArgument>
                </scg:List>
              </ui:FilterDataTable.Filters>
              <ui:FilterDataTable.OutputDataTable>
                <OutArgument x:TypeArguments="sd:DataTable">
                  <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_29">dt_TestCaseData</CSharpReference>
                </OutArgument>
              </ui:FilterDataTable.OutputDataTable>
              <ui:FilterDataTable.SelectColumns>
                <scg:List x:TypeArguments="InArgument" Capacity="4">
                  <x:Null />
                </scg:List>
              </ui:FilterDataTable.SelectColumns>
            </ui:FilterDataTable>
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="574.6666666666666,1885.3333333333333" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="540.6666666666666,1696" sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.6666666666667,1611.3333333333333" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="64">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_30">PaymentMethod</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_236">CurrentRow["PaymentMethod"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_31">TotalAmount</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_237">CurrentRow["TotalAmount"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_32">MerchantName</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_238">CurrentRow["MerchantName"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_33">Email</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_239">CurrentRow["Email"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_34">Phone</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_240">CurrentRow["Phone"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_35">PaymentType</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_241">CurrentRow["PaymentType"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_36">AccountType</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_242">CurrentRow["AccountType"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_37">AccountNickName</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_243">CurrentRow["AccountNickName"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_38">RoutingNumber</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_244">CurrentRow["RoutingNumber"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_39">AccountNumber</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_245">CurrentRow["AccountNumber"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_40">OrderNote</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_246">CurrentRow["OrderNote"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_41">DiscountRate</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_247">CurrentRow["DiscountRate"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_42">InvoiceNumber</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_248">CurrentRow["InvoiceNumber"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_43">SearchPresetSaleItem1</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_249">CurrentRow["PresetSaleItem"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_44">SearchPresetSaleItem2</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_250">CurrentRow["PresetSaleItem2"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_45">str_Frequency</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_251">CurrentRow["Str_in_Frequency"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_46">str_in_Frequency</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_252">CurrentRow["in_Frequency"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_47">TaxRateListName</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_253">CurrentRow["AdditionalFields_TaxRateList"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_48">CustomerAddress</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_254">CurrentRow["CustomerAddress"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_49">CustomerState</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_255">CurrentRow["CustomerState"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_50">CustomerCity</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_256">CurrentRow["CustomerCity"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_51">CustomerZipCode</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_257">CurrentRow["CustomerZipCode"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_52">CustomerDefaultCountry</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_258">CurrentRow["CustomerCountry"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_53">CustomerCountryCode</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_259">CurrentRow["CountryCode"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_55">Last4Digit</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_333">CurrentRow["Last4Digit"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_56">PaymentType_RealTimeGrid</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_334">CurrentRow["PaymentType_inRealTimeGrid"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_57">RecurringStatus</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_335">CurrentRow["RecurringStatus"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_28">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_58">Action_Skip</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_327">CurrentRow["Action_Skip"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_29">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_59">Merchant_MID</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_336">CurrentRow["MID"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_60">TransactionGrid_Type</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_337">CurrentRow["Type_TransactionGrid"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_31">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_61">SubmissionMethod</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_338">CurrentRow["SubmissionMethod"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_62">TransactionInformation_Cardtype</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_339">CurrentRow["CardType_TransactionDetail"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_33">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_63">ProseccingFeeIncluded</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_328">CurrentRow["ProcessingFeeIncluded"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_34">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_64">PartOfRecurringSchedule</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_340">CurrentRow["PartOfReccuringSchedule"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_35">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_65">Receipt_MerchantName</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_341">CurrentRow["Merchant_Name_Reciept"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_36">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_66">ReceiptDetail_AccountType</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_329">CurrentRow["AccountType_ReceiptDetails"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_37">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_67">FooterLine1</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_342">CurrentRow["FooterLine_1"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_38">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_68">FooterLine2</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_343">CurrentRow["FooterLine_2"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_39">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_69">FooterLine3</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_344">CurrentRow["FooterLine_3"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_40">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_70">ReceiptDetail_MercahntAddress1</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_345">CurrentRow["Merchant_address1"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_41">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_71">MerchantZipCode</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_346">CurrentRow["Merchant_ZipCode"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_42">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_72">MerchantPhone</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_347">CurrentRow["Merchant_Phone"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_43">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_73">MerchantName_TransactionReport</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_348">CurrentRow["MerchantName_TransactionReportTable"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_44">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_74">MerchantField</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_349">CurrentRow["MerchantField"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_45">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_75">TransactionType_TransactionReport</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_330">CurrentRow["TransactionType_TransactionReport"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_46">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_76">PaymentType_TransactionReport</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_331">CurrentRow["PaymentType_TransactionReport"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_47">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_77">PaymentMethod_SaleItemReport</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_332">CurrentRow["PaymentMethod_SaleItemReport"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_48">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_78">SaleItem1ItemQuantity</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_325">CurrentRow["SaleItem1ItemQuantity"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_49">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_79">SaleItem2ItemQuantity</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_326">CurrentRow["SaleItem2ItemQuantity"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:MultipleAssign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <ui:ForEachRow.DataTable>
                <InArgument x:TypeArguments="sd:DataTable">
                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_235">dt_TestCaseData</CSharpValue>
                </InArgument>
              </ui:ForEachRow.DataTable>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachRow>
          </Sequence>
          <dl:DPP_Login BreakTriggerScopeInArgument="{x:Null}" bool_in_MerchantLogin="{x:Null}" sap:VirtualizedContainerService.HintSize="636.6666666666666,93.33333333333333" sap2010:WorkflowViewState.IdRef="DPP_Login_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <dl:DPP_Login.int_in_ReportId>
              <InArgument x:TypeArguments="x:Int32">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_280">int_ReportId</CSharpValue>
              </InArgument>
            </dl:DPP_Login.int_in_ReportId>
            <dl:DPP_Login.str_in_TestId>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_281">str_TestId</CSharpValue>
              </InArgument>
            </dl:DPP_Login.str_in_TestId>
            <dl:DPP_Login.str_out_DppURL>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_54">str_Url</CSharpReference>
              </OutArgument>
            </dl:DPP_Login.str_out_DppURL>
          </dl:DPP_Login>
          <Sequence DisplayName="Pre_condition" sap:VirtualizedContainerService.HintSize="636.6666666666666,123.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="TC_11034_RecurringPayment" sap:VirtualizedContainerService.HintSize="496,1297" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dp:PaymentsCreation BreakTriggerScopeInArgument="{x:Null}" str_in_CardExpiration="{x:Null}" str_in_CardNumber="{x:Null}" str_in_ExistingCustomerName="{x:Null}" DisplayName="Payments creation (PaymentsCreation)" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="PaymentsCreation_1" bool_in_CreateValutCustomer="False">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:PaymentsCreation.int_in_reportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.int_in_reportId>
                <dp:PaymentsCreation.str_in_ACH_AccountNickName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">AccountNickName</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_ACH_AccountNickName>
                <dp:PaymentsCreation.str_in_ACH_AccountNumber>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">AccountNumber</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_ACH_AccountNumber>
                <dp:PaymentsCreation.str_in_ACH_AccountType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">AccountType</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_ACH_AccountType>
                <dp:PaymentsCreation.str_in_ACH_RoutingNumber>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">RoutingNumber</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_ACH_RoutingNumber>
                <dp:PaymentsCreation.str_in_Cash_AmountTender>
                  <InArgument x:TypeArguments="x:String" />
                </dp:PaymentsCreation.str_in_Cash_AmountTender>
                <dp:PaymentsCreation.str_in_CheckNumber>
                  <InArgument x:TypeArguments="x:String" />
                </dp:PaymentsCreation.str_in_CheckNumber>
                <dp:PaymentsCreation.str_in_CustEmail>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">Email</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_CustEmail>
                <dp:PaymentsCreation.str_in_CustPhoneNumber>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">Phone</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_CustPhoneNumber>
                <dp:PaymentsCreation.str_in_MerchantName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">MerchantName</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_MerchantName>
                <dp:PaymentsCreation.str_in_PaymentMethod>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">PaymentMethod</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_PaymentMethod>
                <dp:PaymentsCreation.str_in_PaymentType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">PaymentType</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_PaymentType>
                <dp:PaymentsCreation.str_in_TransactionAmount_Total>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">TotalAmount</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_TransactionAmount_Total>
                <dp:PaymentsCreation.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">str_Url</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_Url>
                <dp:PaymentsCreation.str_in_testId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">str_TestId</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_testId>
                <dp:PaymentsCreation.str_io_CustFirstName>
                  <InOutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">Out_CustFirstName</CSharpReference>
                  </InOutArgument>
                </dp:PaymentsCreation.str_io_CustFirstName>
                <dp:PaymentsCreation.str_io_CustLastName>
                  <InOutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">Out_CustLastName</CSharpReference>
                  </InOutArgument>
                </dp:PaymentsCreation.str_io_CustLastName>
                <dp:PaymentsCreation.str_out_MID>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">Out_MID</CSharpReference>
                  </OutArgument>
                </dp:PaymentsCreation.str_out_MID>
              </dp:PaymentsCreation>
              <dp:StartDate_DatePicker argument1="{x:Null}" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="StartDate_DatePicker_1">
                <dp:StartDate_DatePicker.Str_InputStartDate>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">DateTime.Now.ToString("MMMM d, yyyy")</CSharpValue>
                  </InArgument>
                </dp:StartDate_DatePicker.Str_InputStartDate>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:StartDate_DatePicker.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:StartDate_DatePicker.int_in_ReportId>
                <dp:StartDate_DatePicker.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">str_TestId</CSharpValue>
                  </InArgument>
                </dp:StartDate_DatePicker.str_in_TestId>
                <dp:StartDate_DatePicker.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">str_Url</CSharpValue>
                  </InArgument>
                </dp:StartDate_DatePicker.str_in_Url>
                <dp:StartDate_DatePicker.str_out_StartDate>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_23">out_StartDate</CSharpReference>
                  </OutArgument>
                </dp:StartDate_DatePicker.str_out_StartDate>
              </dp:StartDate_DatePicker>
              <dp:EndDate_DatePicker sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="EndDate_DatePicker_1">
                <dp:EndDate_DatePicker.Str_InputEndDate>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">DateTime.Now.AddMonths(3).ToString("MMMM d, yyyy")</CSharpValue>
                  </InArgument>
                </dp:EndDate_DatePicker.Str_InputEndDate>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:EndDate_DatePicker.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:EndDate_DatePicker.int_in_ReportId>
                <dp:EndDate_DatePicker.str_Out_EndDate>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">out_EndDate</CSharpReference>
                  </OutArgument>
                </dp:EndDate_DatePicker.str_Out_EndDate>
                <dp:EndDate_DatePicker.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">str_TestId</CSharpValue>
                  </InArgument>
                </dp:EndDate_DatePicker.str_in_TestId>
                <dp:EndDate_DatePicker.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">str_Url</CSharpValue>
                  </InArgument>
                </dp:EndDate_DatePicker.str_in_Url>
              </dp:EndDate_DatePicker>
              <dp:Frequency_Option str_in_AnnuallyMonth="{x:Null}" str_in_AnnuallyOptions="{x:Null}" str_in_WeeklyOptions="{x:Null}" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="Frequency_Option_1">
                <dp:Frequency_Option.Dpp_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">str_Url</CSharpValue>
                  </InArgument>
                </dp:Frequency_Option.Dpp_Url>
                <dp:Frequency_Option.Frequency>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">str_Frequency</CSharpValue>
                  </InArgument>
                </dp:Frequency_Option.Frequency>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:Frequency_Option.str_in_BiWeeklyOptions>
                  <InArgument x:TypeArguments="x:String" />
                </dp:Frequency_Option.str_in_BiWeeklyOptions>
                <dp:Frequency_Option.str_in_Frequency>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">str_in_Frequency</CSharpValue>
                  </InArgument>
                </dp:Frequency_Option.str_in_Frequency>
                <dp:Frequency_Option.str_in_MonthlyOptions>
                  <InArgument x:TypeArguments="x:String" />
                </dp:Frequency_Option.str_in_MonthlyOptions>
                <dp:Frequency_Option.str_in_reportid>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:Frequency_Option.str_in_reportid>
                <dp:Frequency_Option.str_in_testid>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">str_TestId</CSharpValue>
                  </InArgument>
                </dp:Frequency_Option.str_in_testid>
              </dp:Frequency_Option>
              <dp:AddPresetSaleItem sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="AddPresetSaleItem_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:AddPresetSaleItem.dbl_out_PresetSaleItemTaxRate>
                  <OutArgument x:TypeArguments="x:Double">
                    <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">out_PresetSaleItemTaxRate1</CSharpReference>
                  </OutArgument>
                </dp:AddPresetSaleItem.dbl_out_PresetSaleItemTaxRate>
                <dp:AddPresetSaleItem.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:AddPresetSaleItem.int_in_ReportId>
                <dp:AddPresetSaleItem.str_in_SearchSaleItem>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">SearchPresetSaleItem1</CSharpValue>
                  </InArgument>
                </dp:AddPresetSaleItem.str_in_SearchSaleItem>
                <dp:AddPresetSaleItem.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">str_TestId</CSharpValue>
                  </InArgument>
                </dp:AddPresetSaleItem.str_in_TestId>
                <dp:AddPresetSaleItem.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">str_Url</CSharpValue>
                  </InArgument>
                </dp:AddPresetSaleItem.str_in_Url>
                <dp:AddPresetSaleItem.str_out_PresetItemName>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">Out_PresetsaleItemName1</CSharpReference>
                  </OutArgument>
                </dp:AddPresetSaleItem.str_out_PresetItemName>
                <dp:AddPresetSaleItem.str_out_SKUCode>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">out_SKUCodePresetSaleItem1</CSharpReference>
                  </OutArgument>
                </dp:AddPresetSaleItem.str_out_SKUCode>
                <dp:AddPresetSaleItem.str_out_SaleItemPrice>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">out_PresetSaleItemPrice1</CSharpReference>
                  </OutArgument>
                </dp:AddPresetSaleItem.str_out_SaleItemPrice>
              </dp:AddPresetSaleItem>
              <dp:AddPresetSaleItem sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="AddPresetSaleItem_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:AddPresetSaleItem.dbl_out_PresetSaleItemTaxRate>
                  <OutArgument x:TypeArguments="x:Double">
                    <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">out_PresetSaleItemTaxRate2</CSharpReference>
                  </OutArgument>
                </dp:AddPresetSaleItem.dbl_out_PresetSaleItemTaxRate>
                <dp:AddPresetSaleItem.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:AddPresetSaleItem.int_in_ReportId>
                <dp:AddPresetSaleItem.str_in_SearchSaleItem>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">SearchPresetSaleItem2</CSharpValue>
                  </InArgument>
                </dp:AddPresetSaleItem.str_in_SearchSaleItem>
                <dp:AddPresetSaleItem.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">str_TestId</CSharpValue>
                  </InArgument>
                </dp:AddPresetSaleItem.str_in_TestId>
                <dp:AddPresetSaleItem.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">str_Url</CSharpValue>
                  </InArgument>
                </dp:AddPresetSaleItem.str_in_Url>
                <dp:AddPresetSaleItem.str_out_PresetItemName>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">Out_PresetsaleItemName2</CSharpReference>
                  </OutArgument>
                </dp:AddPresetSaleItem.str_out_PresetItemName>
                <dp:AddPresetSaleItem.str_out_SKUCode>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">out_SKUCodePresetSaleItem2</CSharpReference>
                  </OutArgument>
                </dp:AddPresetSaleItem.str_out_SKUCode>
                <dp:AddPresetSaleItem.str_out_SaleItemPrice>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">out_PresetSaleItemPrice2</CSharpReference>
                  </OutArgument>
                </dp:AddPresetSaleItem.str_out_SaleItemPrice>
              </dp:AddPresetSaleItem>
              <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Double">
                    <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">TwoPresetSaleItemPrice</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">Convert.ToDouble( out_PresetSaleItemPrice1) + Convert.ToDouble(out_PresetSaleItemPrice2)</CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <dp:CustomerInfo DisplayName="Customer info" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="CustomerInfo_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:CustomerInfo.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:CustomerInfo.int_in_ReportId>
                <dp:CustomerInfo.str_in_CustomerAddress>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">CustomerAddress</CSharpValue>
                  </InArgument>
                </dp:CustomerInfo.str_in_CustomerAddress>
                <dp:CustomerInfo.str_in_CustomerCity>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">CustomerCity</CSharpValue>
                  </InArgument>
                </dp:CustomerInfo.str_in_CustomerCity>
                <dp:CustomerInfo.str_in_CustomerDefaultCountry>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">CustomerDefaultCountry</CSharpValue>
                  </InArgument>
                </dp:CustomerInfo.str_in_CustomerDefaultCountry>
                <dp:CustomerInfo.str_in_CustomerState>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">CustomerState</CSharpValue>
                  </InArgument>
                </dp:CustomerInfo.str_in_CustomerState>
                <dp:CustomerInfo.str_in_CustomerZipCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">CustomerZipCode</CSharpValue>
                  </InArgument>
                </dp:CustomerInfo.str_in_CustomerZipCode>
                <dp:CustomerInfo.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">str_TestId</CSharpValue>
                  </InArgument>
                </dp:CustomerInfo.str_in_TestId>
                <dp:CustomerInfo.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">str_Url</CSharpValue>
                  </InArgument>
                </dp:CustomerInfo.str_in_Url>
                <dp:CustomerInfo.str_out_CustomerStateCode>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">out_CustomerStateCode</CSharpReference>
                  </OutArgument>
                </dp:CustomerInfo.str_out_CustomerStateCode>
              </dp:CustomerInfo>
              <dp:AdditionalFields str_in_CustomerTaxExempt="{x:Null}" str_out_TaxRatePercentage="{x:Null}" DisplayName="Additional fields" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="AdditionalFields_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:AdditionalFields.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:AdditionalFields.int_in_ReportId>
                <dp:AdditionalFields.str_in_DiscountRate>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">DiscountRate</CSharpValue>
                  </InArgument>
                </dp:AdditionalFields.str_in_DiscountRate>
                <dp:AdditionalFields.str_in_InvoiceNumber>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">InvoiceNumber</CSharpValue>
                  </InArgument>
                </dp:AdditionalFields.str_in_InvoiceNumber>
                <dp:AdditionalFields.str_in_OrderNote>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">OrderNote</CSharpValue>
                  </InArgument>
                </dp:AdditionalFields.str_in_OrderNote>
                <dp:AdditionalFields.str_in_TaxRateListName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">TaxRateListName</CSharpValue>
                  </InArgument>
                </dp:AdditionalFields.str_in_TaxRateListName>
                <dp:AdditionalFields.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">str_TestId</CSharpValue>
                  </InArgument>
                </dp:AdditionalFields.str_in_TestId>
                <dp:AdditionalFields.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">str_Url</CSharpValue>
                  </InArgument>
                </dp:AdditionalFields.str_in_Url>
                <dp:AdditionalFields.str_out_DiscountRateAmount>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">out_DiscountRateAmount</CSharpReference>
                  </OutArgument>
                </dp:AdditionalFields.str_out_DiscountRateAmount>
              </dp:AdditionalFields>
              <dp:OrderSummary dbl_in_ThirdSaleItemTaxRate="{x:Null}" dbl_in_ThirdSaleitemPrice="{x:Null}" str_in_AmountTendered="{x:Null}" str_in_ThirdSaleItem="{x:Null}" str_out_Surcharge="{x:Null}" str_out_TaxAmount="{x:Null}" DisplayName="Order summary" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="OrderSummary_1" bool_in_RemoveSurcharge="True">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:OrderSummary.dbl_in_DiscountRateAmount>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_69">Convert.ToDouble(out_DiscountRateAmount)</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.dbl_in_DiscountRateAmount>
                <dp:OrderSummary.dbl_in_FirstSaleItemTaxRate>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_70">out_PresetSaleItemTaxRate1</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.dbl_in_FirstSaleItemTaxRate>
                <dp:OrderSummary.dbl_in_FirstSaleitemPrice>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_72">Convert.ToDouble(out_PresetSaleItemPrice1)</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.dbl_in_FirstSaleitemPrice>
                <dp:OrderSummary.dbl_in_SaleItemTotalAmount>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">TwoPresetSaleItemPrice</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.dbl_in_SaleItemTotalAmount>
                <dp:OrderSummary.dbl_in_SecondSaleItemTaxRate>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">out_PresetSaleItemTaxRate2</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.dbl_in_SecondSaleItemTaxRate>
                <dp:OrderSummary.dbl_in_SecondSaleitemPrice>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_73">Convert.ToDouble(out_PresetSaleItemPrice2)</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.dbl_in_SecondSaleitemPrice>
                <dp:OrderSummary.dbl_out_TotalAmount>
                  <OutArgument x:TypeArguments="x:Double">
                    <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">Out_TotalAmount</CSharpReference>
                  </OutArgument>
                </dp:OrderSummary.dbl_out_TotalAmount>
                <dp:OrderSummary.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.int_in_ReportId>
                <dp:OrderSummary.str_in_CardType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_58">PaymentType</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_CardType>
                <dp:OrderSummary.str_in_CustomerAddress>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">CustomerAddress</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_CustomerAddress>
                <dp:OrderSummary.str_in_CustomerCity>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">CustomerCity</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_CustomerCity>
                <dp:OrderSummary.str_in_CustomerCountryCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">CustomerCountryCode</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_CustomerCountryCode>
                <dp:OrderSummary.str_in_CustomerSateCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63">out_CustomerStateCode</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_CustomerSateCode>
                <dp:OrderSummary.str_in_CustomerZipCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">CustomerZipCode</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_CustomerZipCode>
                <dp:OrderSummary.str_in_FirstName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">Out_CustFirstName</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_FirstName>
                <dp:OrderSummary.str_in_FirstSaleItem>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">Out_PresetsaleItemName1</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_FirstSaleItem>
                <dp:OrderSummary.str_in_Last4Digits>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75">AccountNumber</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_Last4Digits>
                <dp:OrderSummary.str_in_LastName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_60">Out_CustLastName</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_LastName>
                <dp:OrderSummary.str_in_OrderNote>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_57">OrderNote</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_OrderNote>
                <dp:OrderSummary.str_in_PaymentType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">PaymentType</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_PaymentType>
                <dp:OrderSummary.str_in_SecondSaleItem>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">Out_PresetsaleItemName2</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_SecondSaleItem>
                <dp:OrderSummary.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">str_TestId</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_TestId>
                <dp:OrderSummary.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">str_Url</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_Url>
              </dp:OrderSummary>
              <dp:VerifyChargeButtonAmount DisplayName="Verify charge button amount" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="VerifyChargeButtonAmount_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:VerifyChargeButtonAmount.dbl_in_ExpectedTotalAmount>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_78">Out_TotalAmount</CSharpValue>
                  </InArgument>
                </dp:VerifyChargeButtonAmount.dbl_in_ExpectedTotalAmount>
                <dp:VerifyChargeButtonAmount.int_in_reportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_77">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:VerifyChargeButtonAmount.int_in_reportId>
                <dp:VerifyChargeButtonAmount.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_79">str_Url</CSharpValue>
                  </InArgument>
                </dp:VerifyChargeButtonAmount.str_in_Url>
                <dp:VerifyChargeButtonAmount.str_in_testId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_76">str_TestId</CSharpValue>
                  </InArgument>
                </dp:VerifyChargeButtonAmount.str_in_testId>
              </dp:VerifyChargeButtonAmount>
              <dp:CloseOrderSummary DisplayName="Close order summary" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="CloseOrderSummary_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:CloseOrderSummary.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_81">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:CloseOrderSummary.int_in_ReportId>
                <dp:CloseOrderSummary.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_82">str_TestId</CSharpValue>
                  </InArgument>
                </dp:CloseOrderSummary.str_in_TestId>
                <dp:CloseOrderSummary.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_80">str_Url</CSharpValue>
                  </InArgument>
                </dp:CloseOrderSummary.str_in_Url>
              </dp:CloseOrderSummary>
              <dp:VerifyTransactionSuccessAndAuthorizationCode str_in_Email="{x:Null}" str_in_Phone="{x:Null}" DisplayName="ClickOnChargeButtonAndVerifySuccess" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="VerifyTransactionSuccessAndAuthorizationCode_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:VerifyTransactionSuccessAndAuthorizationCode.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_84">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:VerifyTransactionSuccessAndAuthorizationCode.int_in_ReportId>
                <dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_PaymentType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_83">PaymentType</CSharpValue>
                  </InArgument>
                </dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_PaymentType>
                <dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_85">str_TestId</CSharpValue>
                  </InArgument>
                </dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_TestId>
                <dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_86">str_Url</CSharpValue>
                  </InArgument>
                </dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_Url>
                <dp:VerifyTransactionSuccessAndAuthorizationCode.str_out_AuthorizationCode>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">out_AuthorizationCode</CSharpReference>
                  </OutArgument>
                </dp:VerifyTransactionSuccessAndAuthorizationCode.str_out_AuthorizationCode>
                <dp:VerifyTransactionSuccessAndAuthorizationCode.str_out_TransactionStatus>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_26">out_TransactionStatus</CSharpReference>
                  </OutArgument>
                </dp:VerifyTransactionSuccessAndAuthorizationCode.str_out_TransactionStatus>
              </dp:VerifyTransactionSuccessAndAuthorizationCode>
            </Sequence>
          </Sequence>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="636.6666666666666,93.33333333333333" sap2010:WorkflowViewState.IdRef="LogMessage_4">
            <ui:LogMessage.Level>
              <InArgument x:TypeArguments="ui:LogLevel">
                <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_415">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
              </InArgument>
            </ui:LogMessage.Level>
            <ui:LogMessage.Message>
              <InArgument x:TypeArguments="x:Object">
                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_416">"First name:"+Out_CustFirstName +"Last name:"+Out_CustLastName</CSharpValue>
              </InArgument>
            </ui:LogMessage.Message>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
          <Sequence DisplayName="Verify_VaultCustomer" sap:VirtualizedContainerService.HintSize="636.6666666666666,123.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <dc:SearchCustomerInCustomerVault DisplayName="Search customer in customer vault" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="SearchCustomerInCustomerVault_2" bool_in_CustomerIDValidation="False">
              <dc:SearchCustomerInCustomerVault.Int_in_Report_ID>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_87">int_ReportId</CSharpValue>
                </InArgument>
              </dc:SearchCustomerInCustomerVault.Int_in_Report_ID>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dc:SearchCustomerInCustomerVault.str_in_CustomerNameorID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_88">Out_CustFirstName</CSharpValue>
                </InArgument>
              </dc:SearchCustomerInCustomerVault.str_in_CustomerNameorID>
              <dc:SearchCustomerInCustomerVault.str_in_TestID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_89">str_TestId</CSharpValue>
                </InArgument>
              </dc:SearchCustomerInCustomerVault.str_in_TestID>
              <dc:SearchCustomerInCustomerVault.str_in_URL>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_90">str_Url</CSharpValue>
                </InArgument>
              </dc:SearchCustomerInCustomerVault.str_in_URL>
            </dc:SearchCustomerInCustomerVault>
            <Delay Duration="00:00:06" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="Delay_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Delay>
            <dc:ValidateCustomerDetails sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="ValidateCustomerDetails_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dc:ValidateCustomerDetails.int_in_Report_ID>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_91">int_ReportId</CSharpValue>
                </InArgument>
              </dc:ValidateCustomerDetails.int_in_Report_ID>
              <dc:ValidateCustomerDetails.str_in_EmailId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_92">Email</CSharpValue>
                </InArgument>
              </dc:ValidateCustomerDetails.str_in_EmailId>
              <dc:ValidateCustomerDetails.str_in_FirstName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93">Out_CustFirstName</CSharpValue>
                </InArgument>
              </dc:ValidateCustomerDetails.str_in_FirstName>
              <dc:ValidateCustomerDetails.str_in_LastName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">Out_CustLastName</CSharpValue>
                </InArgument>
              </dc:ValidateCustomerDetails.str_in_LastName>
              <dc:ValidateCustomerDetails.str_in_RecurringStatus>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_260">RecurringStatus</CSharpValue>
                </InArgument>
              </dc:ValidateCustomerDetails.str_in_RecurringStatus>
              <dc:ValidateCustomerDetails.str_in_TestID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_95">str_TestId</CSharpValue>
                </InArgument>
              </dc:ValidateCustomerDetails.str_in_TestID>
              <dc:ValidateCustomerDetails.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_96">str_Url</CSharpValue>
                </InArgument>
              </dc:ValidateCustomerDetails.str_in_Url>
              <dc:ValidateCustomerDetails.str_out_CustomerId>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">out_CustomerID</CSharpReference>
                </OutArgument>
              </dc:ValidateCustomerDetails.str_out_CustomerId>
            </dc:ValidateCustomerDetails>
            <dc:VerifyRecurringTransactionTable sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="VerifyRecurringTransactionTable_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dc:VerifyRecurringTransactionTable.bool_in_transaction>
                <InArgument x:TypeArguments="x:Boolean" />
              </dc:VerifyRecurringTransactionTable.bool_in_transaction>
              <dc:VerifyRecurringTransactionTable.int_in_Report_ID>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_97">int_ReportId</CSharpValue>
                </InArgument>
              </dc:VerifyRecurringTransactionTable.int_in_Report_ID>
              <dc:VerifyRecurringTransactionTable.str_in_Action>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_261">Action_Skip</CSharpValue>
                </InArgument>
              </dc:VerifyRecurringTransactionTable.str_in_Action>
              <dc:VerifyRecurringTransactionTable.str_in_Amount>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_98">Convert.ToDouble( Out_TotalAmount).ToString()</CSharpValue>
                </InArgument>
              </dc:VerifyRecurringTransactionTable.str_in_Amount>
              <dc:VerifyRecurringTransactionTable.str_in_Frequency>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_99">str_in_Frequency</CSharpValue>
                </InArgument>
              </dc:VerifyRecurringTransactionTable.str_in_Frequency>
              <dc:VerifyRecurringTransactionTable.str_in_Last4Digits>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_116">Last4Digit</CSharpValue>
                </InArgument>
              </dc:VerifyRecurringTransactionTable.str_in_Last4Digits>
              <dc:VerifyRecurringTransactionTable.str_in_PaymentType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_100">PaymentType</CSharpValue>
                </InArgument>
              </dc:VerifyRecurringTransactionTable.str_in_PaymentType>
              <dc:VerifyRecurringTransactionTable.str_in_TestID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_101">str_TestId</CSharpValue>
                </InArgument>
              </dc:VerifyRecurringTransactionTable.str_in_TestID>
              <dc:VerifyRecurringTransactionTable.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_102">str_Url</CSharpValue>
                </InArgument>
              </dc:VerifyRecurringTransactionTable.str_in_Url>
              <dc:VerifyRecurringTransactionTable.str_out_RecurringID>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">out_RecurringID</CSharpReference>
                </OutArgument>
              </dc:VerifyRecurringTransactionTable.str_out_RecurringID>
            </dc:VerifyRecurringTransactionTable>
            <dc:VerifyRecurringSummary sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="VerifyRecurringSummary_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dc:VerifyRecurringSummary.bool_in_transaction>
                <InArgument x:TypeArguments="x:Boolean" />
              </dc:VerifyRecurringSummary.bool_in_transaction>
              <dc:VerifyRecurringSummary.int_in_Report_ID>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_103">int_ReportId</CSharpValue>
                </InArgument>
              </dc:VerifyRecurringSummary.int_in_Report_ID>
              <dc:VerifyRecurringSummary.str_in_Amount>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_104">Convert.ToDouble( Out_TotalAmount).ToString()</CSharpValue>
                </InArgument>
              </dc:VerifyRecurringSummary.str_in_Amount>
              <dc:VerifyRecurringSummary.str_in_EndDate>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_115">out_EndDate</CSharpValue>
                </InArgument>
              </dc:VerifyRecurringSummary.str_in_EndDate>
              <dc:VerifyRecurringSummary.str_in_Frequency>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_105">str_in_Frequency</CSharpValue>
                </InArgument>
              </dc:VerifyRecurringSummary.str_in_Frequency>
              <dc:VerifyRecurringSummary.str_in_RecurringID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_106">out_RecurringID</CSharpValue>
                </InArgument>
              </dc:VerifyRecurringSummary.str_in_RecurringID>
              <dc:VerifyRecurringSummary.str_in_StartDate>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_107">out_StartDate</CSharpValue>
                </InArgument>
              </dc:VerifyRecurringSummary.str_in_StartDate>
              <dc:VerifyRecurringSummary.str_in_TestID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_108">str_TestId</CSharpValue>
                </InArgument>
              </dc:VerifyRecurringSummary.str_in_TestID>
              <dc:VerifyRecurringSummary.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_109">str_Url</CSharpValue>
                </InArgument>
              </dc:VerifyRecurringSummary.str_in_Url>
            </dc:VerifyRecurringSummary>
            <dc:Verify_TransactionHistory_CustomerVault bool_in_transaction="{x:Null}" str_in_PaymentOption="{x:Null}" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="Verify_TransactionHistory_CustomerVault_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dc:Verify_TransactionHistory_CustomerVault.int_in_Report_ID>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_110">int_ReportId</CSharpValue>
                </InArgument>
              </dc:Verify_TransactionHistory_CustomerVault.int_in_Report_ID>
              <dc:Verify_TransactionHistory_CustomerVault.str_in_Cardnumber>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_117">Last4Digit</CSharpValue>
                </InArgument>
              </dc:Verify_TransactionHistory_CustomerVault.str_in_Cardnumber>
              <dc:Verify_TransactionHistory_CustomerVault.str_in_PaymentType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_111">PaymentType</CSharpValue>
                </InArgument>
              </dc:Verify_TransactionHistory_CustomerVault.str_in_PaymentType>
              <dc:Verify_TransactionHistory_CustomerVault.str_in_Status>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_262">out_TransactionStatus</CSharpValue>
                </InArgument>
              </dc:Verify_TransactionHistory_CustomerVault.str_in_Status>
              <dc:Verify_TransactionHistory_CustomerVault.str_in_TestID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_112">str_TestId</CSharpValue>
                </InArgument>
              </dc:Verify_TransactionHistory_CustomerVault.str_in_TestID>
              <dc:Verify_TransactionHistory_CustomerVault.str_in_Total>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_113">Convert.ToDouble( Out_TotalAmount).ToString()</CSharpValue>
                </InArgument>
              </dc:Verify_TransactionHistory_CustomerVault.str_in_Total>
              <dc:Verify_TransactionHistory_CustomerVault.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_114">str_Url</CSharpValue>
                </InArgument>
              </dc:Verify_TransactionHistory_CustomerVault.str_in_Url>
            </dc:Verify_TransactionHistory_CustomerVault>
          </Sequence>
          <Sequence DisplayName="Verify in RealTime Transaction_11028" sap:VirtualizedContainerService.HintSize="636.6666666666666,2871.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <dr:TransactionSearched sap:VirtualizedContainerService.HintSize="388,93.33333333333333" sap2010:WorkflowViewState.IdRef="TransactionSearched_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dr:TransactionSearched.int_in_ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_118">int_ReportId</CSharpValue>
                </InArgument>
              </dr:TransactionSearched.int_in_ReportId>
              <dr:TransactionSearched.str_in_FirstName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_119">Out_CustFirstName</CSharpValue>
                </InArgument>
              </dr:TransactionSearched.str_in_FirstName>
              <dr:TransactionSearched.str_in_MerchantID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_263">Merchant_MID</CSharpValue>
                </InArgument>
              </dr:TransactionSearched.str_in_MerchantID>
              <dr:TransactionSearched.str_in_TestId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_120">str_TestId</CSharpValue>
                </InArgument>
              </dr:TransactionSearched.str_in_TestId>
              <dr:TransactionSearched.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_121">str_Url</CSharpValue>
                </InArgument>
              </dr:TransactionSearched.str_in_Url>
            </dr:TransactionSearched>
            <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="388,93.33333333333333" sap2010:WorkflowViewState.IdRef="Delay_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Delay>
            <dr:Verify_RealtimeTransactionGrid bool_in_transaction="{x:Null}" str_in_VaultAction="{x:Null}" str_out_ApprovalCode="{x:Null}" sap:VirtualizedContainerService.HintSize="388,93.33333333333333" sap2010:WorkflowViewState.IdRef="Verify_RealtimeTransactionGrid_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dr:Verify_RealtimeTransactionGrid.int_in_ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_122">int_ReportId</CSharpValue>
                </InArgument>
              </dr:Verify_RealtimeTransactionGrid.int_in_ReportId>
              <dr:Verify_RealtimeTransactionGrid.str_in_ApprovalCode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_264">out_AuthorizationCode</CSharpValue>
                </InArgument>
              </dr:Verify_RealtimeTransactionGrid.str_in_ApprovalCode>
              <dr:Verify_RealtimeTransactionGrid.str_in_FirstName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_123">Out_CustFirstName</CSharpValue>
                </InArgument>
              </dr:Verify_RealtimeTransactionGrid.str_in_FirstName>
              <dr:Verify_RealtimeTransactionGrid.str_in_Last4Digits>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_124">Last4Digit</CSharpValue>
                </InArgument>
              </dr:Verify_RealtimeTransactionGrid.str_in_Last4Digits>
              <dr:Verify_RealtimeTransactionGrid.str_in_LastName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_125">Out_CustLastName</CSharpValue>
                </InArgument>
              </dr:Verify_RealtimeTransactionGrid.str_in_LastName>
              <dr:Verify_RealtimeTransactionGrid.str_in_MID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_265">Merchant_MID</CSharpValue>
                </InArgument>
              </dr:Verify_RealtimeTransactionGrid.str_in_MID>
              <dr:Verify_RealtimeTransactionGrid.str_in_PaymentType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_222">PaymentType_RealTimeGrid</CSharpValue>
                </InArgument>
              </dr:Verify_RealtimeTransactionGrid.str_in_PaymentType>
              <dr:Verify_RealtimeTransactionGrid.str_in_Status>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_166">out_TransactionStatus</CSharpValue>
                </InArgument>
              </dr:Verify_RealtimeTransactionGrid.str_in_Status>
              <dr:Verify_RealtimeTransactionGrid.str_in_TestId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_127">str_TestId</CSharpValue>
                </InArgument>
              </dr:Verify_RealtimeTransactionGrid.str_in_TestId>
              <dr:Verify_RealtimeTransactionGrid.str_in_TransactionAmount>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_128">Convert.ToDouble( Out_TotalAmount).ToString()</CSharpValue>
                </InArgument>
              </dr:Verify_RealtimeTransactionGrid.str_in_TransactionAmount>
              <dr:Verify_RealtimeTransactionGrid.str_in_Type>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_266">TransactionGrid_Type</CSharpValue>
                </InArgument>
              </dr:Verify_RealtimeTransactionGrid.str_in_Type>
              <dr:Verify_RealtimeTransactionGrid.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_129">str_Url</CSharpValue>
                </InArgument>
              </dr:Verify_RealtimeTransactionGrid.str_in_Url>
            </dr:Verify_RealtimeTransactionGrid>
            <dr:Click_on_ViewIcon_button DisplayName="Click on ViewIcon_button" sap:VirtualizedContainerService.HintSize="388,93.33333333333333" sap2010:WorkflowViewState.IdRef="Click_on_ViewIcon_button_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dr:Click_on_ViewIcon_button.int_in_ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_130">int_ReportId</CSharpValue>
                </InArgument>
              </dr:Click_on_ViewIcon_button.int_in_ReportId>
              <dr:Click_on_ViewIcon_button.str_in_TestId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_131">str_TestId</CSharpValue>
                </InArgument>
              </dr:Click_on_ViewIcon_button.str_in_TestId>
              <dr:Click_on_ViewIcon_button.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_132">str_Url</CSharpValue>
                </InArgument>
              </dr:Click_on_ViewIcon_button.str_in_Url>
            </dr:Click_on_ViewIcon_button>
            <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="388,93.33333333333333" sap2010:WorkflowViewState.IdRef="Delay_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Delay>
            <dr:Verify_TransactionInformation str_in_CardExpiry="{x:Null}" str_in_SurchargeAmount="{x:Null}" str_in_TaxAmount="{x:Null}" sap:VirtualizedContainerService.HintSize="388,93.33333333333333" sap2010:WorkflowViewState.IdRef="Verify_TransactionInformation_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dr:Verify_TransactionInformation.int_in_ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_133">int_ReportId</CSharpValue>
                </InArgument>
              </dr:Verify_TransactionInformation.int_in_ReportId>
              <dr:Verify_TransactionInformation.str_in_ApprovalCode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_270">out_AuthorizationCode</CSharpValue>
                </InArgument>
              </dr:Verify_TransactionInformation.str_in_ApprovalCode>
              <dr:Verify_TransactionInformation.str_in_CardNumber>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_134">AccountNumber</CSharpValue>
                </InArgument>
              </dr:Verify_TransactionInformation.str_in_CardNumber>
              <dr:Verify_TransactionInformation.str_in_CardType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_267">TransactionInformation_Cardtype</CSharpValue>
                </InArgument>
              </dr:Verify_TransactionInformation.str_in_CardType>
              <dr:Verify_TransactionInformation.str_in_DiscountAmount>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">out_DiscountRateAmount</CSharpValue>
                </InArgument>
              </dr:Verify_TransactionInformation.str_in_DiscountAmount>
              <dr:Verify_TransactionInformation.str_in_OrderNote>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_137">OrderNote</CSharpValue>
                </InArgument>
              </dr:Verify_TransactionInformation.str_in_OrderNote>
              <dr:Verify_TransactionInformation.str_in_PaymentType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_138">PaymentType</CSharpValue>
                </InArgument>
              </dr:Verify_TransactionInformation.str_in_PaymentType>
              <dr:Verify_TransactionInformation.str_in_ProcessingFeeIncluded>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_268">ProseccingFeeIncluded</CSharpValue>
                </InArgument>
              </dr:Verify_TransactionInformation.str_in_ProcessingFeeIncluded>
              <dr:Verify_TransactionInformation.str_in_SubmissionMethod>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_269">SubmissionMethod</CSharpValue>
                </InArgument>
              </dr:Verify_TransactionInformation.str_in_SubmissionMethod>
              <dr:Verify_TransactionInformation.str_in_TestId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_139">str_TestId</CSharpValue>
                </InArgument>
              </dr:Verify_TransactionInformation.str_in_TestId>
              <dr:Verify_TransactionInformation.str_in_TotalTransactionAmount>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_140">Convert.ToDouble( Out_TotalAmount).ToString()</CSharpValue>
                </InArgument>
              </dr:Verify_TransactionInformation.str_in_TotalTransactionAmount>
              <dr:Verify_TransactionInformation.str_in_TransactionStatus>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_141">out_TransactionStatus</CSharpValue>
                </InArgument>
              </dr:Verify_TransactionInformation.str_in_TransactionStatus>
              <dr:Verify_TransactionInformation.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_142">str_Url</CSharpValue>
                </InArgument>
              </dr:Verify_TransactionInformation.str_in_Url>
              <dr:Verify_TransactionInformation.str_out_InvoiceNum>
                <InArgument x:TypeArguments="x:String" />
              </dr:Verify_TransactionInformation.str_out_InvoiceNum>
              <dr:Verify_TransactionInformation.str_out_PaymentId>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">out_PaymendID</CSharpReference>
                </OutArgument>
              </dr:Verify_TransactionInformation.str_out_PaymentId>
            </dr:Verify_TransactionInformation>
            <dr:Verify_CustomerInformation Validation_CompanyName="{x:Null}" Validation_CustomerID="{x:Null}" sap:VirtualizedContainerService.HintSize="388,93.33333333333333" sap2010:WorkflowViewState.IdRef="Verify_CustomerInformation_1">
              <dr:Verify_CustomerInformation.Validation_Fax>
                <InArgument x:TypeArguments="x:String" />
              </dr:Verify_CustomerInformation.Validation_Fax>
              <dr:Verify_CustomerInformation.Validation_IpAddress>
                <InArgument x:TypeArguments="x:String" />
              </dr:Verify_CustomerInformation.Validation_IpAddress>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dr:Verify_CustomerInformation.int_in_ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_143">int_ReportId</CSharpValue>
                </InArgument>
              </dr:Verify_CustomerInformation.int_in_ReportId>
              <dr:Verify_CustomerInformation.str_in_CustomerAddress>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_144">CustomerAddress</CSharpValue>
                </InArgument>
              </dr:Verify_CustomerInformation.str_in_CustomerAddress>
              <dr:Verify_CustomerInformation.str_in_CustomerCity>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_145">CustomerCity</CSharpValue>
                </InArgument>
              </dr:Verify_CustomerInformation.str_in_CustomerCity>
              <dr:Verify_CustomerInformation.str_in_CustomerCountryCode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_146">CustomerCountryCode</CSharpValue>
                </InArgument>
              </dr:Verify_CustomerInformation.str_in_CustomerCountryCode>
              <dr:Verify_CustomerInformation.str_in_CustomerName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_147">Out_CustFirstName</CSharpValue>
                </InArgument>
              </dr:Verify_CustomerInformation.str_in_CustomerName>
              <dr:Verify_CustomerInformation.str_in_CustomerPhone>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_167">Phone</CSharpValue>
                </InArgument>
              </dr:Verify_CustomerInformation.str_in_CustomerPhone>
              <dr:Verify_CustomerInformation.str_in_CustomerStateCode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_149">out_CustomerStateCode</CSharpValue>
                </InArgument>
              </dr:Verify_CustomerInformation.str_in_CustomerStateCode>
              <dr:Verify_CustomerInformation.str_in_CustomerZipCode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_150">CustomerZipCode</CSharpValue>
                </InArgument>
              </dr:Verify_CustomerInformation.str_in_CustomerZipCode>
              <dr:Verify_CustomerInformation.str_in_Email>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_151">Email</CSharpValue>
                </InArgument>
              </dr:Verify_CustomerInformation.str_in_Email>
              <dr:Verify_CustomerInformation.str_in_FirstName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_152">Out_CustFirstName</CSharpValue>
                </InArgument>
              </dr:Verify_CustomerInformation.str_in_FirstName>
              <dr:Verify_CustomerInformation.str_in_PartOfRecurringSchedule>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_271">PartOfRecurringSchedule</CSharpValue>
                </InArgument>
              </dr:Verify_CustomerInformation.str_in_PartOfRecurringSchedule>
              <dr:Verify_CustomerInformation.str_in_TestId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_153">str_TestId</CSharpValue>
                </InArgument>
              </dr:Verify_CustomerInformation.str_in_TestId>
              <dr:Verify_CustomerInformation.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_154">str_Url</CSharpValue>
                </InArgument>
              </dr:Verify_CustomerInformation.str_in_Url>
            </dr:Verify_CustomerInformation>
            <dr:Verify_ReceiptDetails bool_in_VerifyAgrimentStatement="{x:Null}" dbl_in_FirstSaleitemPrice="{x:Null}" dbl_in_SecondSaleitemPrice="{x:Null}" dbl_in_ThirdSaleitemPrice="{x:Null}" str_in_ApprovalCode="{x:Null}" str_in_FirstSaleItemName="{x:Null}" str_in_MerchantAddress2="{x:Null}" str_in_MerchantCity="{x:Null}" str_in_MerchantStateCode="{x:Null}" str_in_SecondSaleItemName="{x:Null}" str_in_TaxAmount="{x:Null}" str_in_ThirdSaleItemName="{x:Null}" DisplayName="Verify ReceiptDetails" sap:VirtualizedContainerService.HintSize="388,2090" sap2010:WorkflowViewState.IdRef="Verify_ReceiptDetails_1" bool_in_PrintLogoVerify="True" bool_in_VerifyQRCode="True" str_in_TransactionType="CHECKING">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dr:Verify_ReceiptDetails.bool_in_VerifyTaxableItemText>
                <InArgument x:TypeArguments="x:Boolean" />
              </dr:Verify_ReceiptDetails.bool_in_VerifyTaxableItemText>
              <dr:Verify_ReceiptDetails.int_in_ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_155">int_ReportId</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.int_in_ReportId>
              <dr:Verify_ReceiptDetails.str_in_AccountNumber>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_156">AccountNumber</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.str_in_AccountNumber>
              <dr:Verify_ReceiptDetails.str_in_AccountType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_272">ReceiptDetail_AccountType</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.str_in_AccountType>
              <dr:Verify_ReceiptDetails.str_in_CustomerEmail>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_157">Email</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.str_in_CustomerEmail>
              <dr:Verify_ReceiptDetails.str_in_CustomerName>
                <InArgument x:TypeArguments="x:String" />
              </dr:Verify_ReceiptDetails.str_in_CustomerName>
              <dr:Verify_ReceiptDetails.str_in_CustomerPhone>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_276">Phone</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.str_in_CustomerPhone>
              <dr:Verify_ReceiptDetails.str_in_DiscountAmount>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_158">out_DiscountRateAmount</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.str_in_DiscountAmount>
              <dr:Verify_ReceiptDetails.str_in_FooterLin1>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_275">FooterLine1</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.str_in_FooterLin1>
              <dr:Verify_ReceiptDetails.str_in_FooterLin2>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_277">FooterLine2</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.str_in_FooterLin2>
              <dr:Verify_ReceiptDetails.str_in_FooterLin3>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_278">FooterLine3</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.str_in_FooterLin3>
              <dr:Verify_ReceiptDetails.str_in_Invoice>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_159">InvoiceNumber</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.str_in_Invoice>
              <dr:Verify_ReceiptDetails.str_in_MerchantAddress1>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_279">ReceiptDetail_MercahntAddress1</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.str_in_MerchantAddress1>
              <dr:Verify_ReceiptDetails.str_in_MerchantName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_273">Receipt_MerchantName</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.str_in_MerchantName>
              <dr:Verify_ReceiptDetails.str_in_MerchantPhone>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_414">"+1-" +MerchantPhone</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.str_in_MerchantPhone>
              <dr:Verify_ReceiptDetails.str_in_MerchantZipCode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_285">MerchantZipCode</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.str_in_MerchantZipCode>
              <dr:Verify_ReceiptDetails.str_in_OrderNote>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_161">OrderNote</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.str_in_OrderNote>
              <dr:Verify_ReceiptDetails.str_in_PaidAmount>
                <InArgument x:TypeArguments="x:String" />
              </dr:Verify_ReceiptDetails.str_in_PaidAmount>
              <dr:Verify_ReceiptDetails.str_in_Response>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_162">out_TransactionStatus</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.str_in_Response>
              <dr:Verify_ReceiptDetails.str_in_SurChargeAmount>
                <InArgument x:TypeArguments="x:String" />
              </dr:Verify_ReceiptDetails.str_in_SurChargeAmount>
              <dr:Verify_ReceiptDetails.str_in_TestId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_163">str_TestId</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.str_in_TestId>
              <dr:Verify_ReceiptDetails.str_in_TotalAmount>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_164">Convert.ToDouble( Out_TotalAmount).ToString()</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.str_in_TotalAmount>
              <dr:Verify_ReceiptDetails.str_in_TransactionId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_224">out_PaymendID</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.str_in_TransactionId>
              <dr:Verify_ReceiptDetails.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_165">str_Url</CSharpValue>
                </InArgument>
              </dr:Verify_ReceiptDetails.str_in_Url>
            </dr:Verify_ReceiptDetails>
          </Sequence>
          <Sequence DisplayName="Verify in Report" sap:VirtualizedContainerService.HintSize="636.6666666666666,123.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <dr1:SearchTransaction DisplayName="Reports_SearchTransaction" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="SearchTransaction_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dr1:SearchTransaction.int_in_Report_ID>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_168">int_ReportId</CSharpValue>
                </InArgument>
              </dr1:SearchTransaction.int_in_Report_ID>
              <dr1:SearchTransaction.str_in_CustomerName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_169">Out_CustFirstName</CSharpValue>
                </InArgument>
              </dr1:SearchTransaction.str_in_CustomerName>
              <dr1:SearchTransaction.str_in_MerchantField>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_287">MerchantField</CSharpValue>
                </InArgument>
              </dr1:SearchTransaction.str_in_MerchantField>
              <dr1:SearchTransaction.str_in_MerchantIdValue>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_288">Merchant_MID</CSharpValue>
                </InArgument>
              </dr1:SearchTransaction.str_in_MerchantIdValue>
              <dr1:SearchTransaction.str_in_Test_ID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_170">str_TestId</CSharpValue>
                </InArgument>
              </dr1:SearchTransaction.str_in_Test_ID>
              <dr1:SearchTransaction.str_in_URL>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_171">str_Url</CSharpValue>
                </InArgument>
              </dr1:SearchTransaction.str_in_URL>
            </dr1:SearchTransaction>
            <Delay Duration="00:00:07" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="Delay_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Delay>
            <dr1:SearchTransactionGridVerification bool_in_Transaction="{x:Null}" DisplayName="Verify the report sub menu search transaction grid information" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="SearchTransactionGridVerification_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dr1:SearchTransactionGridVerification.int_in_Report_ID>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_173">int_ReportId</CSharpValue>
                </InArgument>
              </dr1:SearchTransactionGridVerification.int_in_Report_ID>
              <dr1:SearchTransactionGridVerification.str_in_Amount>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_174">Convert.ToDouble( Out_TotalAmount).ToString()</CSharpValue>
                </InArgument>
              </dr1:SearchTransactionGridVerification.str_in_Amount>
              <dr1:SearchTransactionGridVerification.str_in_AuthorizationCode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_228">out_AuthorizationCode</CSharpValue>
                </InArgument>
              </dr1:SearchTransactionGridVerification.str_in_AuthorizationCode>
              <dr1:SearchTransactionGridVerification.str_in_FirstName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_175">Out_CustFirstName</CSharpValue>
                </InArgument>
              </dr1:SearchTransactionGridVerification.str_in_FirstName>
              <dr1:SearchTransactionGridVerification.str_in_Last4digits>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_172">Last4Digit</CSharpValue>
                </InArgument>
              </dr1:SearchTransactionGridVerification.str_in_Last4digits>
              <dr1:SearchTransactionGridVerification.str_in_LastName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_176">Out_CustLastName</CSharpValue>
                </InArgument>
              </dr1:SearchTransactionGridVerification.str_in_LastName>
              <dr1:SearchTransactionGridVerification.str_in_MerchantMID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_289">Merchant_MID</CSharpValue>
                </InArgument>
              </dr1:SearchTransactionGridVerification.str_in_MerchantMID>
              <dr1:SearchTransactionGridVerification.str_in_PaymentType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_225">PaymentType_RealTimeGrid</CSharpValue>
                </InArgument>
              </dr1:SearchTransactionGridVerification.str_in_PaymentType>
              <dr1:SearchTransactionGridVerification.str_in_Test_ID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_178">str_TestId</CSharpValue>
                </InArgument>
              </dr1:SearchTransactionGridVerification.str_in_Test_ID>
              <dr1:SearchTransactionGridVerification.str_in_TransactionStatus>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_179">out_TransactionStatus</CSharpValue>
                </InArgument>
              </dr1:SearchTransactionGridVerification.str_in_TransactionStatus>
              <dr1:SearchTransactionGridVerification.str_in_TransactionType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_290">TransactionGrid_Type</CSharpValue>
                </InArgument>
              </dr1:SearchTransactionGridVerification.str_in_TransactionType>
              <dr1:SearchTransactionGridVerification.str_in_URL>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_181">str_Url</CSharpValue>
                </InArgument>
              </dr1:SearchTransactionGridVerification.str_in_URL>
            </dr1:SearchTransactionGridVerification>
            <dr1:TransactionReportAdvanceSearch sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="TransactionReportAdvanceSearch_1" str_in_ReportDetailType="ACH">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dr1:TransactionReportAdvanceSearch.int_in_Report_ID>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_182">int_ReportId</CSharpValue>
                </InArgument>
              </dr1:TransactionReportAdvanceSearch.int_in_Report_ID>
              <dr1:TransactionReportAdvanceSearch.str_in_MerchantID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_413">Merchant_MID</CSharpValue>
                </InArgument>
              </dr1:TransactionReportAdvanceSearch.str_in_MerchantID>
              <dr1:TransactionReportAdvanceSearch.str_in_TestID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_183">str_TestId</CSharpValue>
                </InArgument>
              </dr1:TransactionReportAdvanceSearch.str_in_TestID>
              <dr1:TransactionReportAdvanceSearch.str_in_URL>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_184">str_Url</CSharpValue>
                </InArgument>
              </dr1:TransactionReportAdvanceSearch.str_in_URL>
            </dr1:TransactionReportAdvanceSearch>
            <Delay Duration="00:00:07" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="Delay_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Delay>
            <dr1:TransactionReportTableVerification bool_in_Transaction="{x:Null}" str_in_ApprovalCode="{x:Null}" DisplayName="Verify the transaction report table details" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="TransactionReportTableVerification_1" str_in_RecurringTransaction="True" str_in_VaultTransaction="True">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dr1:TransactionReportTableVerification.int_in_Report_ID>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_185">int_ReportId</CSharpValue>
                </InArgument>
              </dr1:TransactionReportTableVerification.int_in_Report_ID>
              <dr1:TransactionReportTableVerification.str_in_AccountNumber>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_186">AccountNumber</CSharpValue>
                </InArgument>
              </dr1:TransactionReportTableVerification.str_in_AccountNumber>
              <dr1:TransactionReportTableVerification.str_in_Amount>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_187">Convert.ToDouble( Out_TotalAmount).ToString()</CSharpValue>
                </InArgument>
              </dr1:TransactionReportTableVerification.str_in_Amount>
              <dr1:TransactionReportTableVerification.str_in_FirstName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_188">Out_CustFirstName</CSharpValue>
                </InArgument>
              </dr1:TransactionReportTableVerification.str_in_FirstName>
              <dr1:TransactionReportTableVerification.str_in_LastName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_189">Out_CustLastName</CSharpValue>
                </InArgument>
              </dr1:TransactionReportTableVerification.str_in_LastName>
              <dr1:TransactionReportTableVerification.str_in_MerchantMID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_292">Merchant_MID</CSharpValue>
                </InArgument>
              </dr1:TransactionReportTableVerification.str_in_MerchantMID>
              <dr1:TransactionReportTableVerification.str_in_MerchantName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_291">MerchantName_TransactionReport</CSharpValue>
                </InArgument>
              </dr1:TransactionReportTableVerification.str_in_MerchantName>
              <dr1:TransactionReportTableVerification.str_in_PaymentID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_226">out_PaymendID</CSharpValue>
                </InArgument>
              </dr1:TransactionReportTableVerification.str_in_PaymentID>
              <dr1:TransactionReportTableVerification.str_in_PaymentType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_294">PaymentType_TransactionReport</CSharpValue>
                </InArgument>
              </dr1:TransactionReportTableVerification.str_in_PaymentType>
              <dr1:TransactionReportTableVerification.str_in_RecurringID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_227">out_RecurringID</CSharpValue>
                </InArgument>
              </dr1:TransactionReportTableVerification.str_in_RecurringID>
              <dr1:TransactionReportTableVerification.str_in_SubmissionMethod>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_296">SubmissionMethod</CSharpValue>
                </InArgument>
              </dr1:TransactionReportTableVerification.str_in_SubmissionMethod>
              <dr1:TransactionReportTableVerification.str_in_Test_ID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_191">str_TestId</CSharpValue>
                </InArgument>
              </dr1:TransactionReportTableVerification.str_in_Test_ID>
              <dr1:TransactionReportTableVerification.str_in_TransactionStatus>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_295">out_TransactionStatus</CSharpValue>
                </InArgument>
              </dr1:TransactionReportTableVerification.str_in_TransactionStatus>
              <dr1:TransactionReportTableVerification.str_in_TransactionType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_293">TransactionType_TransactionReport</CSharpValue>
                </InArgument>
              </dr1:TransactionReportTableVerification.str_in_TransactionType>
              <dr1:TransactionReportTableVerification.str_in_URL>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_193">str_Url</CSharpValue>
                </InArgument>
              </dr1:TransactionReportTableVerification.str_in_URL>
            </dr1:TransactionReportTableVerification>
            <dr1:SaleItemReport_AdvanceSearch DisplayName="Navigate_SaleItemReport" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="SaleItemReport_AdvanceSearch_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dr1:SaleItemReport_AdvanceSearch.int_in_Report_ID>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_194">int_ReportId</CSharpValue>
                </InArgument>
              </dr1:SaleItemReport_AdvanceSearch.int_in_Report_ID>
              <dr1:SaleItemReport_AdvanceSearch.str_in_MerchantMID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_297">Merchant_MID</CSharpValue>
                </InArgument>
              </dr1:SaleItemReport_AdvanceSearch.str_in_MerchantMID>
              <dr1:SaleItemReport_AdvanceSearch.str_in_TestID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_195">str_TestId</CSharpValue>
                </InArgument>
              </dr1:SaleItemReport_AdvanceSearch.str_in_TestID>
              <dr1:SaleItemReport_AdvanceSearch.str_in_URL>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_196">str_Url</CSharpValue>
                </InArgument>
              </dr1:SaleItemReport_AdvanceSearch.str_in_URL>
            </dr1:SaleItemReport_AdvanceSearch>
            <Delay Duration="00:00:07" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="Delay_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Delay>
            <dr1:SaleItemReportTableVerification str_in_SaleItem3="{x:Null}" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="SaleItemReportTableVerification_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dr1:SaleItemReportTableVerification.int_in_Report_ID>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_206">int_ReportId</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.int_in_Report_ID>
              <dr1:SaleItemReportTableVerification.str_in_Address>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_210">CustomerAddress</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_Address>
              <dr1:SaleItemReportTableVerification.str_in_Amount>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_209">Convert.ToDouble( Out_TotalAmount).ToString()</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_Amount>
              <dr1:SaleItemReportTableVerification.str_in_City>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_211">CustomerCity</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_City>
              <dr1:SaleItemReportTableVerification.str_in_Email>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_213">Email</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_Email>
              <dr1:SaleItemReportTableVerification.str_in_FirstName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_207">Out_CustFirstName</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_FirstName>
              <dr1:SaleItemReportTableVerification.str_in_LastName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_208">Out_CustLastName</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_LastName>
              <dr1:SaleItemReportTableVerification.str_in_MerchantMID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_298">Merchant_MID</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_MerchantMID>
              <dr1:SaleItemReportTableVerification.str_in_PaymentMehod>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_299">PaymentMethod_SaleItemReport</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_PaymentMehod>
              <dr1:SaleItemReportTableVerification.str_in_SaleItem1>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_215">Out_PresetsaleItemName1</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_SaleItem1>
              <dr1:SaleItemReportTableVerification.str_in_SaleItem1ItemPice>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_216">out_PresetSaleItemPrice1</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_SaleItem1ItemPice>
              <dr1:SaleItemReportTableVerification.str_in_SaleItem1ItemQuantity>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_300">SaleItem1ItemQuantity</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_SaleItem1ItemQuantity>
              <dr1:SaleItemReportTableVerification.str_in_SaleItem1TotalPrice>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_230">Convert.ToDouble(out_PresetSaleItemPrice1).ToString()</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_SaleItem1TotalPrice>
              <dr1:SaleItemReportTableVerification.str_in_SaleItem2>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_218">Out_PresetsaleItemName2</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_SaleItem2>
              <dr1:SaleItemReportTableVerification.str_in_SaleItem2ItemPice>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_219">out_PresetSaleItemPrice2</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_SaleItem2ItemPice>
              <dr1:SaleItemReportTableVerification.str_in_SaleItem2ItemQuantity>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_301">SaleItem2ItemQuantity</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_SaleItem2ItemQuantity>
              <dr1:SaleItemReportTableVerification.str_in_SaleItem2TotalPrice>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_231">Convert.ToDouble(out_PresetSaleItemPrice2).ToString()</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_SaleItem2TotalPrice>
              <dr1:SaleItemReportTableVerification.str_in_SaleItem3ItemPice>
                <InArgument x:TypeArguments="x:String" />
              </dr1:SaleItemReportTableVerification.str_in_SaleItem3ItemPice>
              <dr1:SaleItemReportTableVerification.str_in_SaleItem3ItemQuantity>
                <InArgument x:TypeArguments="x:String" />
              </dr1:SaleItemReportTableVerification.str_in_SaleItem3ItemQuantity>
              <dr1:SaleItemReportTableVerification.str_in_SaleItem3TotalPrice>
                <InArgument x:TypeArguments="x:String" />
              </dr1:SaleItemReportTableVerification.str_in_SaleItem3TotalPrice>
              <dr1:SaleItemReportTableVerification.str_in_StateCode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_221">CustomerState</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_StateCode>
              <dr1:SaleItemReportTableVerification.str_in_Test_ID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_205">str_TestId</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_Test_ID>
              <dr1:SaleItemReportTableVerification.str_in_TransactionID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_229">out_PaymendID</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_TransactionID>
              <dr1:SaleItemReportTableVerification.str_in_URL>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_204">str_Url</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_URL>
              <dr1:SaleItemReportTableVerification.str_in_ZipCode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_212">CustomerZipCode</CSharpValue>
                </InArgument>
              </dr1:SaleItemReportTableVerification.str_in_ZipCode>
            </dr1:SaleItemReportTableVerification>
          </Sequence>
          <dl1:DPP_Logout BreakTriggerScopeInArgument="{x:Null}" sap:VirtualizedContainerService.HintSize="636.6666666666666,76" sap2010:WorkflowViewState.IdRef="DPP_Logout_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <dl1:DPP_Logout.int_in_ReportId>
              <InArgument x:TypeArguments="x:Int32">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_282">int_ReportId</CSharpValue>
              </InArgument>
            </dl1:DPP_Logout.int_in_ReportId>
            <dl1:DPP_Logout.str_in_DppURL>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_284">str_Url</CSharpValue>
              </InArgument>
            </dl1:DPP_Logout.str_in_DppURL>
            <dl1:DPP_Logout.str_in_TestId>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_283">str_TestId</CSharpValue>
              </InArgument>
            </dl1:DPP_Logout.str_in_TestId>
          </dl1:DPP_Logout>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="703.3333333333334,22.666666666666668" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="416,80" sap2010:WorkflowViewState.IdRef="Sequence_18">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_1">
                <ui:LogMessage.Level>
                  <InArgument x:TypeArguments="ui:LogLevel">
                    <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_360">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Level>
                <ui:LogMessage.Message>
                  <InArgument x:TypeArguments="x:Object">
                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_359">exception.Message</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Message>
              </ui:LogMessage>
              <cr:failedStep str_in_expectedStep="{x:Null}" sap:VirtualizedContainerService.HintSize="388,345" sap2010:WorkflowViewState.IdRef="failedStep_1" str_in_actualStep="Exception">
                <cr:failedStep.Actual_Result>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_363">exception.Message</CSharpValue>
                  </InArgument>
                </cr:failedStep.Actual_Result>
                <cr:failedStep.Expected_Result>
                  <InArgument x:TypeArguments="x:String" />
                </cr:failedStep.Expected_Result>
                <cr:failedStep.str_in_reportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_361">int_ReportId</CSharpValue>
                  </InArgument>
                </cr:failedStep.str_in_reportId>
                <cr:failedStep.str_in_testId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_362">str_TestId</CSharpValue>
                  </InArgument>
                </cr:failedStep.str_in_testId>
              </cr:failedStep>
              <Rethrow sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
              <dl1:DPP_Logout BreakTriggerScopeInArgument="{x:Null}" sap:VirtualizedContainerService.HintSize="388,243" sap2010:WorkflowViewState.IdRef="DPP_Logout_2">
                <dl1:DPP_Logout.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_364">int_ReportId</CSharpValue>
                  </InArgument>
                </dl1:DPP_Logout.int_in_ReportId>
                <dl1:DPP_Logout.str_in_DppURL>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_366">str_Url</CSharpValue>
                  </InArgument>
                </dl1:DPP_Logout.str_in_DppURL>
                <dl1:DPP_Logout.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_365">str_TestId</CSharpValue>
                  </InArgument>
                </dl1:DPP_Logout.str_in_TestId>
              </dl1:DPP_Logout>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>