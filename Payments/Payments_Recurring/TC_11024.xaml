<Activity mc:Ignorable="sap sap2010" x:Class="TC_11024" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:ca="clr-namespace:CommonLibrary.Asset;assembly=CommonLibrary" xmlns:cr="clr-namespace:CommonLibrary.Report;assembly=CommonLibrary" xmlns:dc="clr-namespace:Deluxe_ReusableLibrary.Customer_Vault;assembly=Deluxe_ReusableLibrary" xmlns:dl="clr-namespace:Deluxe_ReusableLibrary.Login;assembly=Deluxe_ReusableLibrary" xmlns:dl1="clr-namespace:Deluxe_ReusableLibrary.Logout;assembly=Deluxe_ReusableLibrary" xmlns:dp="clr-namespace:Deluxe_ReusableLibrary.Payments;assembly=Deluxe_ReusableLibrary" xmlns:dr="clr-namespace:Deluxe_ReusableLibrary.RealTimeTransaction;assembly=Deluxe_ReusableLibrary" xmlns:dr1="clr-namespace:Deluxe_ReusableLibrary.Reports;assembly=Deluxe_ReusableLibrary" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:ra="clr-namespace:ReporterForUiPath.Activities;assembly=ReporterForUiPath.Activities" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="int_ReportId" Type="InArgument(x:Int32)" />
    <x:Property Name="str_SuiteId" Type="InArgument(x:String)" />
    <x:Property Name="str_TestId" Type="InArgument(x:String)" />
  </x:Members>
  <this:TC_11024.int_ReportId>
    <InArgument x:TypeArguments="x:Int32" />
  </this:TC_11024.int_ReportId>
  <this:TC_11024.str_SuiteId>
    <InArgument x:TypeArguments="x:String" />
  </this:TC_11024.str_SuiteId>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>913.3333333333334,17980.666666666668</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>TC_10999_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>CommonLibrary.Asset</x:String>
      <x:String>CommonLibrary.Report</x:String>
      <x:String>Deluxe_ReusableLibrary.Customer_Vault</x:String>
      <x:String>Deluxe_ReusableLibrary.Login</x:String>
      <x:String>Deluxe_ReusableLibrary.Logout</x:String>
      <x:String>Deluxe_ReusableLibrary.Payments</x:String>
      <x:String>Deluxe_ReusableLibrary.RealTimeTransaction</x:String>
      <x:String>Deluxe_ReusableLibrary.Reports</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>ReporterForUiPath.Activities</x:String>
      <x:String>ReporterForUiPath.Enums</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Numerics</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>CommonLibrary</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>ReporterForUiPath</AssemblyReference>
      <AssemblyReference>ReporterForUiPath.Activities</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Windows.Forms.Design</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Deluxe_ReusableLibrary</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.PowerShell.Commands.Diagnostics</AssemblyReference>
      <AssemblyReference>System.Diagnostics.FileVersionInfo</AssemblyReference>
      <AssemblyReference>System.Diagnostics.Process</AssemblyReference>
      <AssemblyReference>System.Diagnostics.DiagnosticSource</AssemblyReference>
      <AssemblyReference>System.Diagnostics.EventLog</AssemblyReference>
      <AssemblyReference>System.Diagnostics.PerformanceCounter</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TextWriterTraceListener</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TraceSource</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
      <AssemblyReference>System.Private.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="TC_11024" sap:VirtualizedContainerService.HintSize="923.3333333333334,17916" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="str_QuickSaleItemTaxName" />
      <Variable x:TypeArguments="x:String" Name="str_SearchPresetSaleitemName" />
      <Variable x:TypeArguments="x:String" Name="str_PresetSaleItemPrice2" />
      <Variable x:TypeArguments="x:String" Name="str_PresetSaleItemName2" />
      <Variable x:TypeArguments="x:Double" Name="dbl_PresetSaleItemPrice2" />
      <Variable x:TypeArguments="x:String" Name="str_QuickSaleName" />
      <Variable x:TypeArguments="x:String" Name="str_Frequency" />
      <Variable x:TypeArguments="x:String" Name="str_DiscountRateAmount" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerAddress" />
      <Variable x:TypeArguments="x:String" Name="str_CardExpiry" />
      <Variable x:TypeArguments="x:String" Name="str_CardNumber" />
      <Variable x:TypeArguments="x:String" Name="str_MerchantName" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerState" />
      <Variable x:TypeArguments="x:String" Name="str_PresetSaleItemName" />
      <Variable x:TypeArguments="x:String" Name="str_PaymentMethod" />
      <Variable x:TypeArguments="x:Double" Name="dbl_TotalAmount" />
      <Variable x:TypeArguments="x:Double" Name="dbl_PresetSaleItemTaxRate" />
      <Variable x:TypeArguments="x:Boolean" Name="bool_RemoveSurcharge" />
      <Variable x:TypeArguments="x:String" Name="str_PresetSaleItemPrice" />
      <Variable x:TypeArguments="x:String" Name="str_PaymentType" />
      <Variable x:TypeArguments="x:String" Name="str_QuickSaleItemTaxRate" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerCity" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerZipCode" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerCountryCode" />
      <Variable x:TypeArguments="x:Double" Name="dbl_SaleItemTaxAmount" />
      <Variable x:TypeArguments="x:Double" Name="dbl_TwoSaleItemTotal" />
      <Variable x:TypeArguments="x:String" Name="str_QuickSaleItemName" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_TestData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_TestCaseData" />
      <Variable x:TypeArguments="x:String" Name="str_OrderNote" />
      <Variable x:TypeArguments="x:Double" Name="dbl_QuickSaleItemPrice" />
      <Variable x:TypeArguments="x:String" Name="str_CardType" />
      <Variable x:TypeArguments="x:String" Name="str_RecurringId" />
      <Variable x:TypeArguments="x:String" Name="str_outStartDate" />
      <Variable x:TypeArguments="x:String" Name="str_outEndDate" />
      <Variable x:TypeArguments="x:String" Name="str_SaleItemTaxRateAmount" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerSateCode" />
      <Variable x:TypeArguments="x:String" Name="str_OS_SurCharge" />
      <Variable x:TypeArguments="x:String" Name="str_FirstSaleItemName" />
      <Variable x:TypeArguments="x:String" Name="str_TaxAmoount" />
      <Variable x:TypeArguments="x:String" Name="str_SurchargeAmount" />
      <Variable x:TypeArguments="x:String" Name="str_AuthorizationCode" />
      <Variable x:TypeArguments="x:String" Name="str_MID" />
      <Variable x:TypeArguments="x:String" Name="str_TransactionStatus" />
      <Variable x:TypeArguments="x:String" Name="str_QuickSaleItemName2" />
      <Variable x:TypeArguments="x:Double" Name="dbl_QuickSaleItemPrice2" />
      <Variable x:TypeArguments="x:Double" Name="dbl_QuickSaleItemTaxRate2" />
      <Variable x:TypeArguments="x:String" Name="str_QuickSaleItemTaxName2" />
      <Variable x:TypeArguments="x:Double" Name="dbl_QuickSaleItemTaxRate" />
      <Variable x:TypeArguments="x:String" Name="str_outSKUCode" />
      <Variable x:TypeArguments="x:Double" Name="dbl_PresetSaleItemPrice" />
      <Variable x:TypeArguments="x:String" Name="str_CustPhoneNumber" />
      <Variable x:TypeArguments="x:String" Name="str_TotalAmount" />
      <Variable x:TypeArguments="x:String" Name="str_Email" />
      <Variable x:TypeArguments="x:String" Name="str_SearchPresetSaleitemName2" />
      <Variable x:TypeArguments="x:String" Default="D:\Deluxe_Reports" Name="Report_Location" />
      <Variable x:TypeArguments="x:Double" Name="dbl_QuickSaleItemTaxAmount" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_OS_SaleItemDataTable" />
      <Variable x:TypeArguments="x:Double" Name="dbl_SaleItemTaxAmount2" />
      <Variable x:TypeArguments="x:Double" Name="dbl_TotalTaxAmount" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerCountry" />
      <Variable x:TypeArguments="x:String" Name="str_DiscountRateOption" />
      <Variable x:TypeArguments="x:String" Name="str_InvoiceNumber" />
      <Variable x:TypeArguments="x:String" Name="str_outFirstName" />
      <Variable x:TypeArguments="x:String" Name="str_outLastName" />
      <Variable x:TypeArguments="x:String" Default="Footer Line2" Name="Footerline2" />
      <Variable x:TypeArguments="x:String" Default="FT WORTH" Name="str_MerchantCity" />
      <Variable x:TypeArguments="x:String" Default="100 Throckmorton St" Name="str_MerchantAddress1" />
      <Variable x:TypeArguments="x:String" Default="Suite 1800" Name="str_MerchantAddress2" />
      <Variable x:TypeArguments="x:String" Default="TX" Name="str_MerchantStateCode" />
      <Variable x:TypeArguments="x:String" Default="76102" Name="str_MerchantZipCode" />
      <Variable x:TypeArguments="x:String" Default="+1-8888888888" Name="str_MerchantPhone" />
      <Variable x:TypeArguments="x:String" Default="Thank you for your business!" Name="FooterLine1" />
      <Variable x:TypeArguments="x:String" Name="str_outInvoiceNumber" />
      <Variable x:TypeArguments="x:String" Name="str_FrequencyOption" />
      <Variable x:TypeArguments="x:String" Name="str_SaleItemQuantity" />
      <Variable x:TypeArguments="x:String" Name="str_outSurcharge" />
      <Variable x:TypeArguments="x:String" Name="ExcelPath" />
      <Variable x:TypeArguments="x:String" Name="ReportPath" />
      <Variable x:TypeArguments="x:Double" Name="dbl_TwoQuickSaleItemPrice" />
      <Variable x:TypeArguments="x:String" Name="str_BrowserValue" />
      <Variable x:TypeArguments="x:String" Name="str_SubmissionMethod" />
      <Variable x:TypeArguments="x:String" Default="Merchant ID" Name="str_MerchantField" />
      <Variable x:TypeArguments="x:String" Default="CreditCard" Name="str_ReportDetailType" />
      <Variable x:TypeArguments="x:String" Name="str_RecurringTransaction" />
      <Variable x:TypeArguments="x:String" Name="str_VaultTransaction" />
      <Variable x:TypeArguments="x:String" Name="str_PartOfRecurring" />
      <Variable x:TypeArguments="x:String" Default="Footer Line3" Name="Footerline3" />
      <Variable x:TypeArguments="x:String" Name="str_ProcessingFee" />
      <Variable x:TypeArguments="x:String" Name="str_SaleItem1ItemQuantity" />
      <Variable x:TypeArguments="x:String" Name="str_SaleItem2ItemQuantity" />
      <Variable x:TypeArguments="x:String" Name="str_LastName" />
      <Variable x:TypeArguments="x:String" Name="str_FirstName" />
      <Variable x:TypeArguments="x:String" Name="str_RecurringStatus" />
      <Variable x:TypeArguments="x:String" Default="Skip" Name="str_Action" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="861.3333333333334,17828" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Variables>
        <Variable x:TypeArguments="x:String" Default="https://payments2.deluxe.com/gateway/*" Name="str_Url" />
      </TryCatch.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="636,17566" sap2010:WorkflowViewState.IdRef="Sequence_34">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap:VirtualizedContainerService.HintSize="574,4154" sap2010:WorkflowViewState.IdRef="Sequence_63">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Extract dynamic Report and TestData Path" sap:VirtualizedContainerService.HintSize="512,124.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_53">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="File_Path" />
                <Variable x:TypeArguments="x:String" Name="Report_Path" />
                <Variable x:TypeArguments="x:String" Name="FilePath_OP" />
                <Variable x:TypeArguments="x:String" Name="ReportPath_OP" />
                <Variable x:TypeArguments="njl:JObject" Name="ExcelFilePathJ" />
                <Variable x:TypeArguments="njl:JObject" Name="ReportFilePathJ" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="434,125.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_24">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_261">File_Path</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Config\ExcelPath.json</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,125.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_25">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_262">Report_Path</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Config\Reportpath.json</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ReadTextFile File="{x:Null}" DisplayName="Read Text File" sap:VirtualizedContainerService.HintSize="434,122" sap2010:WorkflowViewState.IdRef="ReadTextFile_3">
                <ui:ReadTextFile.Content>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_263">FilePath_OP</CSharpReference>
                  </OutArgument>
                </ui:ReadTextFile.Content>
                <ui:ReadTextFile.FileName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1118">File_Path</CSharpValue>
                  </InArgument>
                </ui:ReadTextFile.FileName>
              </ui:ReadTextFile>
              <ui:ReadTextFile File="{x:Null}" DisplayName="Read Text File" sap:VirtualizedContainerService.HintSize="434,122" sap2010:WorkflowViewState.IdRef="ReadTextFile_4">
                <ui:ReadTextFile.Content>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_264">ReportPath_OP</CSharpReference>
                  </OutArgument>
                </ui:ReadTextFile.Content>
                <ui:ReadTextFile.FileName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1119">Report_Path</CSharpValue>
                  </InArgument>
                </ui:ReadTextFile.FileName>
              </ui:ReadTextFile>
              <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="434,100" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_3">
                <ui:DeserializeJson.JsonObject>
                  <OutArgument x:TypeArguments="njl:JObject">
                    <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_265">ExcelFilePathJ</CSharpReference>
                  </OutArgument>
                </ui:DeserializeJson.JsonObject>
                <ui:DeserializeJson.JsonString>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1120">FilePath_OP</CSharpValue>
                  </InArgument>
                </ui:DeserializeJson.JsonString>
              </ui:DeserializeJson>
              <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="434,100" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_4">
                <ui:DeserializeJson.JsonObject>
                  <OutArgument x:TypeArguments="njl:JObject">
                    <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_266">ReportFilePathJ</CSharpReference>
                  </OutArgument>
                </ui:DeserializeJson.JsonObject>
                <ui:DeserializeJson.JsonString>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1121">ReportPath_OP</CSharpValue>
                  </InArgument>
                </ui:DeserializeJson.JsonString>
              </ui:DeserializeJson>
              <Assign sap:VirtualizedContainerService.HintSize="434,125.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_26">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_267">ExcelPath</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1122">Path.Combine(Environment.CurrentDirectory,ExcelFilePathJ.SelectToken("Excel_path").ToString())</CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,108" sap2010:WorkflowViewState.IdRef="Assign_27">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_268">ReportPath</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1123">System.IO.Path.Combine(Environment.CurrentDirectory, ReportFilePathJ.SelectToken("Report_path").ToString())</CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="512,184.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_11">
              <ui:LogMessage.Level>
                <InArgument x:TypeArguments="ui:LogLevel">
                  <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1125">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                </InArgument>
              </ui:LogMessage.Level>
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1124">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:Object" />
                    </CSharpValue.Result>ReportPath</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="512,184.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_12">
              <ui:LogMessage.Level>
                <InArgument x:TypeArguments="ui:LogLevel">
                  <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1127">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                </InArgument>
              </ui:LogMessage.Level>
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1126">ExcelPath</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <Sequence DisplayName="TC_11032" sap:VirtualizedContainerService.HintSize="512,3532" sap2010:WorkflowViewState.IdRef="Sequence_54">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="str_SKUCode" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If sap:VirtualizedContainerService.HintSize="450,94" sap2010:WorkflowViewState.IdRef="If_5">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1128">int_ReportId.Equals(0) == true</CSharpValue>
                  </InArgument>
                </If.Condition>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,243.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_57">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ra:CreateReport ContinueOnError="{x:Null}" DisplayName="Create Report" sap:VirtualizedContainerService.HintSize="354,158.66666666666666" sap2010:WorkflowViewState.IdRef="CreateReport_3" ReportName="TC_11024">
                      <ra:CreateReport.ReportLocation>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1283">ReportPath</CSharpValue>
                        </InArgument>
                      </ra:CreateReport.ReportLocation>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ra:CreateReport.isCreated>
                        <OutArgument x:TypeArguments="x:Int32">
                          <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_269">int_ReportId</CSharpReference>
                        </OutArgument>
                      </ra:CreateReport.isCreated>
                    </ra:CreateReport>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,101.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_58">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <ra:StartSuite ContinueOnError="{x:Null}" DisplayName="Start Suite" sap:VirtualizedContainerService.HintSize="450,126.66666666666667" sap2010:WorkflowViewState.IdRef="StartSuite_3" SuiteName="Payments_Recurring">
                <ra:StartSuite.ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1129">int_ReportId</CSharpValue>
                  </InArgument>
                </ra:StartSuite.ReportId>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ra:StartSuite.suiteId>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_270">str_SuiteId</CSharpReference>
                  </OutArgument>
                </ra:StartSuite.suiteId>
              </ra:StartSuite>
              <ra:StartTest ContinueOnError="{x:Null}" TagName="{x:Null}" TestDescription="{x:Null}" DisplayName="Start Test" sap:VirtualizedContainerService.HintSize="450,126.66666666666667" sap2010:WorkflowViewState.IdRef="StartTest_5" Priority="High" TestName="TC_11032_WeeklyMasterRecurforNewCustomer">
                <ra:StartTest.ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1130">int_ReportId</CSharpValue>
                  </InArgument>
                </ra:StartTest.ReportId>
                <ra:StartTest.SuiteId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1131">str_SuiteId</CSharpValue>
                  </InArgument>
                </ra:StartTest.SuiteId>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ra:StartTest.testId>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_271">str_TestId</CSharpReference>
                  </OutArgument>
                </ra:StartTest.testId>
              </ra:StartTest>
              <Sequence DisplayName="Read Test Data Sequence" sap:VirtualizedContainerService.HintSize="450,124.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_55">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Name="dt_TestData" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ReadRange Range="{x:Null}" AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="574.6666666666666,128" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="Payments">
                  <ui:ReadRange.DataTable>
                    <OutArgument x:TypeArguments="sd:DataTable">
                      <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_272">dt_TestData</CSharpReference>
                    </OutArgument>
                  </ui:ReadRange.DataTable>
                  <ui:ReadRange.WorkbookPath>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1320">ExcelPath</CSharpValue>
                    </InArgument>
                  </ui:ReadRange.WorkbookPath>
                </ui:ReadRange>
                <ui:FilterDataTable DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="574.6666666666666,204" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" SelectColumnsMode="Remove">
                  <ui:FilterDataTable.DataTable>
                    <InArgument x:TypeArguments="sd:DataTable">
                      <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1134">dt_TestData</CSharpValue>
                    </InArgument>
                  </ui:FilterDataTable.DataTable>
                  <ui:FilterDataTable.Filters>
                    <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                      <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                        <ui:FilterOperationArgument.Column>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1132">"TestCaseId"</CSharpValue>
                          </InArgument>
                        </ui:FilterOperationArgument.Column>
                        <ui:FilterOperationArgument.Operand>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1133">"TC_11032"</CSharpValue>
                          </InArgument>
                        </ui:FilterOperationArgument.Operand>
                      </ui:FilterOperationArgument>
                    </scg:List>
                  </ui:FilterDataTable.Filters>
                  <ui:FilterDataTable.OutputDataTable>
                    <OutArgument x:TypeArguments="sd:DataTable">
                      <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_273">dt_TestCaseData</CSharpReference>
                    </OutArgument>
                  </ui:FilterDataTable.OutputDataTable>
                  <ui:FilterDataTable.SelectColumns>
                    <scg:List x:TypeArguments="InArgument" Capacity="4">
                      <x:Null />
                    </scg:List>
                  </ui:FilterDataTable.SelectColumns>
                </ui:FilterDataTable>
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="574.6666666666666,1799.3333333333333" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="540.6666666666666,1608.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_59">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.6666666666667,862.6666666666666" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                          <ui:MultipleAssign.AssignOperations>
                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="32">
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_98">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_274">str_PaymentMethod</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1136">CurrentRow["PaymentMethod"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_99">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_275">str_MerchantName</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1137">CurrentRow["MerchantName"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_100">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_276">str_TotalAmount</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1138">CurrentRow["TotalAmount"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_101">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_277">str_Email</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1139">CurrentRow["Email"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_102">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_278">str_CustPhoneNumber</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1140">CurrentRow["Phone"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_103">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_279">str_PaymentType</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1141">CurrentRow["PaymentType"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_104">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_280">str_CardNumber</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1142">CurrentRow["CardNumber"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_105">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_281">str_CardExpiry</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1143">CurrentRow["CardExpiry"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_106">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_282">str_CardType</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1144">CurrentRow["CardType"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_107">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_283">str_QuickSaleItemName</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1145">CurrentRow["QuickSaleItemName"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_108">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:Double">
                                    <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_284">dbl_QuickSaleItemPrice</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:Double">
                                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1146">Convert.ToDouble(CurrentRow["QuickSaleItemPrice"].ToString())</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_109">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_285">str_QuickSaleItemTaxName</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1147">CurrentRow["QuickSaleItemTax"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_110">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_286">str_SearchPresetSaleitemName</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1148">CurrentRow["PresetSaleItem"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_111">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_287">str_CustomerAddress</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1149">CurrentRow["CustomerAddress"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_112">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_288">str_CustomerState</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1150">CurrentRow["CustomerState"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_113">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_289">str_CustomerCity</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1151">CurrentRow["CustomerCity"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_114">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_290">str_CustomerZipCode</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1152">CurrentRow["CustomerZipCode"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_115">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_291">str_CustomerCountry</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1153">CurrentRow["CustomerCountry"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_116">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_292">str_CustomerCountryCode</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1154">CurrentRow["CountryCode"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_117">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_293">str_OrderNote</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1155">CurrentRow["OrderNote"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_118">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_294">str_DiscountRateOption</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1156">CurrentRow["DiscountRate"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_119">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_295">str_Frequency</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1157">CurrentRow["Frequency"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_120">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_296">str_SaleItemQuantity</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1158">CurrentRow["SaleItemQuantity"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_121">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_322">str_RecurringStatus</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1293">CurrentRow["RecurringStatuse"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                            </scg:List>
                          </ui:MultipleAssign.AssignOperations>
                        </ui:MultipleAssign>
                        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.6666666666667,661.3333333333334" sap2010:WorkflowViewState.IdRef="MultipleAssign_7">
                          <ui:MultipleAssign.AssignOperations>
                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="32">
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_122">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_323">str_SubmissionMethod</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1294">CurrentRow["SubmissionMethod"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_123">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_324">str_PartOfRecurring</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1295">CurrentRow["PartOfRecurring"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_124">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_325">str_ProcessingFee</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1296">CurrentRow["ProcessingFee"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_125">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_326">str_MerchantAddress1</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1297">CurrentRow["MerchantAddress1"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_126">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_327">str_MerchantAddress2</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1298">CurrentRow["MerchanrAddress2"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_127">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_328">str_MerchantCity</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1299">CurrentRow["MerchantCity"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_128">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_329">str_MerchantField</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1300">CurrentRow["MerchantField"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_129">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_330">str_MerchantPhone</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1301">CurrentRow["MerchantPhone"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_130">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_331">str_MerchantStateCode</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1302">CurrentRow["MerchantStateCode"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_131">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_332">str_MerchantZipCode</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1303">CurrentRow["MerchantZipCode"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_132">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_333">FooterLine1</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1304">CurrentRow["FooterLine1"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_133">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_334">Footerline2</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1305">CurrentRow["FooterLine2"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_134">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_335">Footerline3</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1306">CurrentRow["FooterLine3"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_135">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_336">str_ReportDetailType</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1307">CurrentRow["ReportType"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_136">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_337">str_RecurringTransaction</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1308">CurrentRow["RecurringTransaction"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_137">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_338">str_VaultTransaction</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1309">CurrentRow["VaultTransaction"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_138">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_339">str_SaleItem1ItemQuantity</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1310">CurrentRow["SaleItem1ItemQuantity"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_139">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_340">str_SaleItem2ItemQuantity</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1311">CurrentRow["SaleItem2ItemQuantity"].ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                            </scg:List>
                          </ui:MultipleAssign.AssignOperations>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:MultipleAssign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <ui:ForEachRow.DataTable>
                    <InArgument x:TypeArguments="sd:DataTable">
                      <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1135">dt_TestCaseData</CSharpValue>
                    </InArgument>
                  </ui:ForEachRow.DataTable>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
              </Sequence>
              <dl:DPP_Login BreakTriggerScopeInArgument="{x:Null}" DisplayName="DPP Login" sap:VirtualizedContainerService.HintSize="450,342.6666666666667" sap2010:WorkflowViewState.IdRef="DPP_Login_5" bool_in_MerchantLogin="False">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dl:DPP_Login.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1160">int_ReportId</CSharpValue>
                  </InArgument>
                </dl:DPP_Login.int_in_ReportId>
                <dl:DPP_Login.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1159">str_TestId</CSharpValue>
                  </InArgument>
                </dl:DPP_Login.str_in_TestId>
                <dl:DPP_Login.str_out_DppURL>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_297">str_Url</CSharpReference>
                  </OutArgument>
                </dl:DPP_Login.str_out_DppURL>
              </dl:DPP_Login>
              <dp:PaymentsCreation BreakTriggerScopeInArgument="{x:Null}" str_in_ExistingCustomerName="{x:Null}" DisplayName="Payments creation" sap:VirtualizedContainerService.HintSize="450,94" sap2010:WorkflowViewState.IdRef="PaymentsCreation_5" bool_in_CreateValutCustomer="False">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:PaymentsCreation.int_in_reportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1170">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.int_in_reportId>
                <dp:PaymentsCreation.str_in_ACH_AccountNickName>
                  <InArgument x:TypeArguments="x:String" />
                </dp:PaymentsCreation.str_in_ACH_AccountNickName>
                <dp:PaymentsCreation.str_in_ACH_AccountNumber>
                  <InArgument x:TypeArguments="x:String" />
                </dp:PaymentsCreation.str_in_ACH_AccountNumber>
                <dp:PaymentsCreation.str_in_ACH_AccountType>
                  <InArgument x:TypeArguments="x:String" />
                </dp:PaymentsCreation.str_in_ACH_AccountType>
                <dp:PaymentsCreation.str_in_ACH_RoutingNumber>
                  <InArgument x:TypeArguments="x:String" />
                </dp:PaymentsCreation.str_in_ACH_RoutingNumber>
                <dp:PaymentsCreation.str_in_CardExpiration>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1167">str_CardExpiry</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_CardExpiration>
                <dp:PaymentsCreation.str_in_CardNumber>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1166">str_CardNumber</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_CardNumber>
                <dp:PaymentsCreation.str_in_Cash_AmountTender>
                  <InArgument x:TypeArguments="x:String" />
                </dp:PaymentsCreation.str_in_Cash_AmountTender>
                <dp:PaymentsCreation.str_in_CheckNumber>
                  <InArgument x:TypeArguments="x:String" />
                </dp:PaymentsCreation.str_in_CheckNumber>
                <dp:PaymentsCreation.str_in_CustEmail>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1163">str_Email</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_CustEmail>
                <dp:PaymentsCreation.str_in_CustPhoneNumber>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1164">str_CustPhoneNumber</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_CustPhoneNumber>
                <dp:PaymentsCreation.str_in_MerchantName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1168">str_MerchantName</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_MerchantName>
                <dp:PaymentsCreation.str_in_PaymentMethod>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1161">str_PaymentMethod</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_PaymentMethod>
                <dp:PaymentsCreation.str_in_PaymentType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1165">str_PaymentType</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_PaymentType>
                <dp:PaymentsCreation.str_in_TransactionAmount_Total>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1162">str_TotalAmount</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_TransactionAmount_Total>
                <dp:PaymentsCreation.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1171">str_Url</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_Url>
                <dp:PaymentsCreation.str_in_testId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1169">str_TestId</CSharpValue>
                  </InArgument>
                </dp:PaymentsCreation.str_in_testId>
                <dp:PaymentsCreation.str_io_CustFirstName>
                  <InOutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_299">str_FirstName</CSharpReference>
                  </InOutArgument>
                </dp:PaymentsCreation.str_io_CustFirstName>
                <dp:PaymentsCreation.str_io_CustLastName>
                  <InOutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_298">str_LastName</CSharpReference>
                  </InOutArgument>
                </dp:PaymentsCreation.str_io_CustLastName>
                <dp:PaymentsCreation.str_out_MID>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_300">str_MID</CSharpReference>
                  </OutArgument>
                </dp:PaymentsCreation.str_out_MID>
              </dp:PaymentsCreation>
              <dp:AddQuickSaleItem DisplayName="Add quick sale item 1" sap:VirtualizedContainerService.HintSize="450,94" sap2010:WorkflowViewState.IdRef="AddQuickSaleItem_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:AddQuickSaleItem.dbl_out_SaleItemTaxRate>
                  <OutArgument x:TypeArguments="x:Double">
                    <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_301">dbl_QuickSaleItemTaxRate</CSharpReference>
                  </OutArgument>
                </dp:AddQuickSaleItem.dbl_out_SaleItemTaxRate>
                <dp:AddQuickSaleItem.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1175">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:AddQuickSaleItem.int_in_ReportId>
                <dp:AddQuickSaleItem.str_in_SaleItemName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1172">str_QuickSaleItemName</CSharpValue>
                  </InArgument>
                </dp:AddQuickSaleItem.str_in_SaleItemName>
                <dp:AddQuickSaleItem.str_in_SaleItemPrice>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1173">dbl_QuickSaleItemPrice.ToString()</CSharpValue>
                  </InArgument>
                </dp:AddQuickSaleItem.str_in_SaleItemPrice>
                <dp:AddQuickSaleItem.str_in_SaleItemTaxName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1176">str_QuickSaleItemTaxName</CSharpValue>
                  </InArgument>
                </dp:AddQuickSaleItem.str_in_SaleItemTaxName>
                <dp:AddQuickSaleItem.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1174">str_TestId</CSharpValue>
                  </InArgument>
                </dp:AddQuickSaleItem.str_in_TestId>
                <dp:AddQuickSaleItem.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1177">str_Url</CSharpValue>
                  </InArgument>
                </dp:AddQuickSaleItem.str_in_Url>
              </dp:AddQuickSaleItem>
              <dp:AddPresetSaleItem DisplayName="AddPresetSaleItem 2" sap:VirtualizedContainerService.HintSize="450,94" sap2010:WorkflowViewState.IdRef="AddPresetSaleItem_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:AddPresetSaleItem.dbl_out_PresetSaleItemTaxRate>
                  <OutArgument x:TypeArguments="x:Double">
                    <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_303">dbl_PresetSaleItemTaxRate</CSharpReference>
                  </OutArgument>
                </dp:AddPresetSaleItem.dbl_out_PresetSaleItemTaxRate>
                <dp:AddPresetSaleItem.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1179">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:AddPresetSaleItem.int_in_ReportId>
                <dp:AddPresetSaleItem.str_in_SearchSaleItem>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1178">str_SearchPresetSaleitemName</CSharpValue>
                  </InArgument>
                </dp:AddPresetSaleItem.str_in_SearchSaleItem>
                <dp:AddPresetSaleItem.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1180">str_TestId</CSharpValue>
                  </InArgument>
                </dp:AddPresetSaleItem.str_in_TestId>
                <dp:AddPresetSaleItem.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1181">str_Url</CSharpValue>
                  </InArgument>
                </dp:AddPresetSaleItem.str_in_Url>
                <dp:AddPresetSaleItem.str_out_PresetItemName>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_304">str_PresetSaleItemName</CSharpReference>
                  </OutArgument>
                </dp:AddPresetSaleItem.str_out_PresetItemName>
                <dp:AddPresetSaleItem.str_out_SKUCode>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_305">str_SKUCode</CSharpReference>
                  </OutArgument>
                </dp:AddPresetSaleItem.str_out_SKUCode>
                <dp:AddPresetSaleItem.str_out_SaleItemPrice>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_302">str_PresetSaleItemPrice</CSharpReference>
                  </OutArgument>
                </dp:AddPresetSaleItem.str_out_SaleItemPrice>
              </dp:AddPresetSaleItem>
              <Assign sap:VirtualizedContainerService.HintSize="450,125.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_28">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Double">
                    <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_306">dbl_PresetSaleItemPrice</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1182">Convert.ToDouble(str_PresetSaleItemPrice)</CSharpValue>
                  </InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <dp:CustomerInfo DisplayName="Customer info (CustomerInfo)" sap:VirtualizedContainerService.HintSize="450,94" sap2010:WorkflowViewState.IdRef="CustomerInfo_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:CustomerInfo.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1189">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:CustomerInfo.int_in_ReportId>
                <dp:CustomerInfo.str_in_CustomerAddress>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1184">str_CustomerAddress</CSharpValue>
                  </InArgument>
                </dp:CustomerInfo.str_in_CustomerAddress>
                <dp:CustomerInfo.str_in_CustomerCity>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1185">str_CustomerCity</CSharpValue>
                  </InArgument>
                </dp:CustomerInfo.str_in_CustomerCity>
                <dp:CustomerInfo.str_in_CustomerDefaultCountry>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1187">str_CustomerCountry</CSharpValue>
                  </InArgument>
                </dp:CustomerInfo.str_in_CustomerDefaultCountry>
                <dp:CustomerInfo.str_in_CustomerState>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1183">str_CustomerState</CSharpValue>
                  </InArgument>
                </dp:CustomerInfo.str_in_CustomerState>
                <dp:CustomerInfo.str_in_CustomerZipCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1186">str_CustomerZipCode</CSharpValue>
                  </InArgument>
                </dp:CustomerInfo.str_in_CustomerZipCode>
                <dp:CustomerInfo.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1188">str_TestId</CSharpValue>
                  </InArgument>
                </dp:CustomerInfo.str_in_TestId>
                <dp:CustomerInfo.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1190">str_Url</CSharpValue>
                  </InArgument>
                </dp:CustomerInfo.str_in_Url>
                <dp:CustomerInfo.str_out_CustomerStateCode>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_307">str_CustomerSateCode</CSharpReference>
                  </OutArgument>
                </dp:CustomerInfo.str_out_CustomerStateCode>
              </dp:CustomerInfo>
              <dp:AdditionalFields str_in_CustomerTaxExempt="{x:Null}" str_in_InvoiceNumber="{x:Null}" str_out_TaxRatePercentage="{x:Null}" DisplayName="Additional fields (AdditionalFields)" sap:VirtualizedContainerService.HintSize="450,94" sap2010:WorkflowViewState.IdRef="AdditionalFields_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:AdditionalFields.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1194">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:AdditionalFields.int_in_ReportId>
                <dp:AdditionalFields.str_in_DiscountRate>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1192">str_DiscountRateOption</CSharpValue>
                  </InArgument>
                </dp:AdditionalFields.str_in_DiscountRate>
                <dp:AdditionalFields.str_in_OrderNote>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1191">str_OrderNote</CSharpValue>
                  </InArgument>
                </dp:AdditionalFields.str_in_OrderNote>
                <dp:AdditionalFields.str_in_TaxRateListName>
                  <InArgument x:TypeArguments="x:String" />
                </dp:AdditionalFields.str_in_TaxRateListName>
                <dp:AdditionalFields.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1193">str_TestId</CSharpValue>
                  </InArgument>
                </dp:AdditionalFields.str_in_TestId>
                <dp:AdditionalFields.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1195">str_Url</CSharpValue>
                  </InArgument>
                </dp:AdditionalFields.str_in_Url>
                <dp:AdditionalFields.str_out_DiscountRateAmount>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_308">str_DiscountRateAmount</CSharpReference>
                  </OutArgument>
                </dp:AdditionalFields.str_out_DiscountRateAmount>
              </dp:AdditionalFields>
              <dp:StartDate_DatePicker sap:VirtualizedContainerService.HintSize="450,94" sap2010:WorkflowViewState.IdRef="StartDate_DatePicker_3">
                <dp:StartDate_DatePicker.Str_InputStartDate>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1199">DateTime.Now.ToString("MMMM d, yyyy")</CSharpValue>
                  </InArgument>
                </dp:StartDate_DatePicker.Str_InputStartDate>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:StartDate_DatePicker.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1197">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:StartDate_DatePicker.int_in_ReportId>
                <dp:StartDate_DatePicker.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1198">str_TestId</CSharpValue>
                  </InArgument>
                </dp:StartDate_DatePicker.str_in_TestId>
                <dp:StartDate_DatePicker.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1196">str_Url</CSharpValue>
                  </InArgument>
                </dp:StartDate_DatePicker.str_in_Url>
                <dp:StartDate_DatePicker.str_out_StartDate>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_309">str_outStartDate</CSharpReference>
                  </OutArgument>
                </dp:StartDate_DatePicker.str_out_StartDate>
              </dp:StartDate_DatePicker>
              <dp:EndDate_DatePicker sap:VirtualizedContainerService.HintSize="450,94" sap2010:WorkflowViewState.IdRef="EndDate_DatePicker_3">
                <dp:EndDate_DatePicker.Str_InputEndDate>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1203">DateTime.Now.AddDays(7).ToString("MMMM d, yyyy")</CSharpValue>
                  </InArgument>
                </dp:EndDate_DatePicker.Str_InputEndDate>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:EndDate_DatePicker.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1201">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:EndDate_DatePicker.int_in_ReportId>
                <dp:EndDate_DatePicker.str_Out_EndDate>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_310">str_outEndDate</CSharpReference>
                  </OutArgument>
                </dp:EndDate_DatePicker.str_Out_EndDate>
                <dp:EndDate_DatePicker.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1202">str_TestId</CSharpValue>
                  </InArgument>
                </dp:EndDate_DatePicker.str_in_TestId>
                <dp:EndDate_DatePicker.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1200">str_Url</CSharpValue>
                  </InArgument>
                </dp:EndDate_DatePicker.str_in_Url>
              </dp:EndDate_DatePicker>
              <dp:Frequency_Option str_in_AnnuallyMonth="{x:Null}" str_in_AnnuallyOptions="{x:Null}" DisplayName="Frequency Option" sap:VirtualizedContainerService.HintSize="450,94" sap2010:WorkflowViewState.IdRef="Frequency_Option_5">
                <dp:Frequency_Option.Dpp_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1204">str_Url</CSharpValue>
                  </InArgument>
                </dp:Frequency_Option.Dpp_Url>
                <dp:Frequency_Option.Frequency>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1206">str_Frequency</CSharpValue>
                  </InArgument>
                </dp:Frequency_Option.Frequency>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:Frequency_Option.str_in_BiWeeklyOptions>
                  <InArgument x:TypeArguments="x:String" />
                </dp:Frequency_Option.str_in_BiWeeklyOptions>
                <dp:Frequency_Option.str_in_Frequency>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1205">str_Frequency</CSharpValue>
                  </InArgument>
                </dp:Frequency_Option.str_in_Frequency>
                <dp:Frequency_Option.str_in_MonthlyOptions>
                  <InArgument x:TypeArguments="x:String" />
                </dp:Frequency_Option.str_in_MonthlyOptions>
                <dp:Frequency_Option.str_in_WeeklyOptions>
                  <InArgument x:TypeArguments="x:String" />
                </dp:Frequency_Option.str_in_WeeklyOptions>
                <dp:Frequency_Option.str_in_reportid>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1207">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:Frequency_Option.str_in_reportid>
                <dp:Frequency_Option.str_in_testid>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1208">str_TestId</CSharpValue>
                  </InArgument>
                </dp:Frequency_Option.str_in_testid>
              </dp:Frequency_Option>
              <Sequence DisplayName="Sequence for verify empty option field" sap:VirtualizedContainerService.HintSize="450,124.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_62">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ca:ReadAssetValue sap:VirtualizedContainerService.HintSize="388,237.33333333333334" sap2010:WorkflowViewState.IdRef="ReadAssetValue_2" str_in_AssetName="BrowserValue" str_in_Orch_FolderPath="DPP_TestAutomation">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ca:ReadAssetValue.str_out_AssetValue>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_341">str_BrowserValue</CSharpReference>
                    </OutArgument>
                  </ca:ReadAssetValue.str_out_AssetValue>
                </ca:ReadAssetValue>
                <uix:NApplicationCard AttachMode="ByInstance" DisplayName="Use Browser Chrome: Payments" sap:VirtualizedContainerService.HintSize="388,76.66666666666667" sap2010:WorkflowViewState.IdRef="NApplicationCard_4" InteractionMode="DebuggerApi" ScopeGuid="f0e3c822-16b0-4cee-a5a8-c0627d236402" Version="V2">
                  <uix:NApplicationCard.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,366" sap2010:WorkflowViewState.IdRef="Sequence_56">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="str_VerifyLastDateField" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <uix:NGetText DisplayName="Get Text 'DIV'" sap:VirtualizedContainerService.HintSize="354,199.33333333333334" sap2010:WorkflowViewState.IdRef="NGetText_3" ScopeIdentifier="f0e3c822-16b0-4cee-a5a8-c0627d236402" Version="V3">
                          <uix:NGetText.Target>
                            <uix:TargetAnchorable BrowserURL="https://payments2.deluxe.com/gateway/virtual-terminal" DesignTimeRectangle="363, 790, 473, 43" DesignTimeScaleFactor="1.2000000476837158" FriendlyName="'DIV'" FullSelectorArgument="&lt;webctrl aaname='Options' class='dpp-label' parentid='collapsePaymentInfoArea' tag='LABEL' /&gt;&lt;nav up='1' /&gt;&lt;webctrl parentid='collapsePaymentInfoArea' tag='DIV' parentclass='ngx-select__selected ng-star-inserted' /&gt;" FuzzySelectorArgument="&lt;webctrl type='' parentid='collapsePaymentInfoArea' tag='DIV' class='ngx-select__toggle btn form-control' aaname='' /&gt;" Guid="279c44d9-17dd-49e9-817a-18e65723b438" ImageBase64="" InformativeScreenshot="ea008eb996a0bc769c4f25bc9019b12e.png" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Payments' /&gt;" SearchSteps="Selector" Version="V2" Visibility="Interactive" />
                          </uix:NGetText.Target>
                          <uix:NGetText.TextString>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_311">str_VerifyLastDateField</CSharpReference>
                            </OutArgument>
                          </uix:NGetText.TextString>
                        </uix:NGetText>
                        <If sap:VirtualizedContainerService.HintSize="354,79.33333333333333" sap2010:WorkflowViewState.IdRef="If_6">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1209">string.IsNullOrEmpty( str_VerifyLastDateField)</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,462.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_60">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <cr:passedStep str_in_actualStep="{x:Null}" Actual_Result="Able to view the Option field was empty" Expected_Result="Option field should be an empty." sap:VirtualizedContainerService.HintSize="354,378" sap2010:WorkflowViewState.IdRef="passedStep_3" str_in_expectedStep="Step">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <cr:passedStep.str_in_reportId>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1210">int_ReportId</CSharpValue>
                                  </InArgument>
                                </cr:passedStep.str_in_reportId>
                                <cr:passedStep.str_in_testId>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1211">str_TestId</CSharpValue>
                                  </InArgument>
                                </cr:passedStep.str_in_testId>
                              </cr:passedStep>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,462.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_61">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <cr:failedStep str_in_actualStep="{x:Null}" Actual_Result="Failed to view the Option field was empty" Expected_Result="Option field should be an empty." sap:VirtualizedContainerService.HintSize="354,378" sap2010:WorkflowViewState.IdRef="failedStep_4" str_in_expectedStep="Step">
                                <cr:failedStep.str_in_reportId>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1212">int_ReportId</CSharpValue>
                                  </InArgument>
                                </cr:failedStep.str_in_reportId>
                                <cr:failedStep.str_in_testId>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1213">str_TestId</CSharpValue>
                                  </InArgument>
                                </cr:failedStep.str_in_testId>
                              </cr:failedStep>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </uix:NApplicationCard.Body>
                  <uix:NApplicationCard.TargetApp>
                    <uix:TargetApp Area="-11, -11, 1942, 1030" BrowserType="Chrome" IconBase64="iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAA0/SURBVGhDvZcJUFRXFkDbiIa4gbgACtgsKqsgqIgoiyjgCpkklk4iMktFrcnEylbJxBh0JlZMooK4YBR3TTIaxZhMJovaScS44RZRiCINihDHSANuYLfvzr1v+fyGdksyc6tO3fvue93/vNf/N43ht4jOTm1dJ3u4Zf6jn3f2ujD/gqJhA8xlIyIsl0cOgssjB0NZ3EDLkZhQc0Fkf9M/+npnp/RwTfdybm/s3MXFZeKTUzOW5O/YueubM6UHS+oaiF2m0yVL8rcXTHjimam0Rl7mtw2Snu7tPqsgop9JiYqsqxPVWPBTYhSnOj0ZyvK3sB/O37xz6uIduBdF527cenVudk63Hu7u8tK/Lkj8FWOvrHMjwmsvJ0YxLpYQaZ9JHKGs7xGVL8xixWcbHMreiwNnLPWJyWlpUuOXxStGTxRXtwYJ0Yk2y/FefCRTJ12DdU38QD6uxvnzuSvh1AWbQ8EH4YcLNjb9+dlvtMGQSg8WdL/uGRRynE6TQ4ItshLlOQFzQqSE1kSBefZsh1K/hPRJmX+QavePSe7dp50dHm7RBFGKC2qiellJfCRUE3EDWXVcBKucOR1OVTQ5lMFT5dyrbsmx8sbbMXGjR0vFu8fLfTyylKwSU6dLciJHiIxzNM/lsVcdP1DmSCjdudehiJAU9YlKGxRX3eFQLebFGv1rFPTNJTUdx0s+Hln601Uy4mRlHYeSmC+NkMJUY4/gc8jFCaPuc9/b4CTOl10GKCq3cqimHs05fg3fGOvh7ukpde1jknu3adVcSnc7yLEQlYIyC+kI2oioh4czlc/Pe8uhAEGne6LCBucuM8j97Ar0zijiLPvXFd6jubt9AsSkqdNnSOXmoAe2JCaslguiNEmQqP5UhTTKclGRq1TNNxEBVZiJki8PM0cXJ05WWqEYT7mo/Db0QnHD2P0cr8wiOGa24hr8dHCNo9cSKzd//oXUbo5D0cFmu1MkIaqlkD7zOnYAU7Iaw4lwnk/9WOfw4nSy+g14PHMEDKmFHI+pR3iP5mjN3T6F70/X1kltES96u2dpp0joxO0FSU4HbaJF76LMp8pvtbqwEqJ8FE/afAVg7Z5aCJpxHDkB6/daeI/m9Gv170EcLbvZKNUNhvbdOxjfeyGh+TRR6iLCN6AJNdc0x7NiWBirSo2F+jV50HjsCFirLwFFcYuLKkiIKP8PwL6SRlj15VWYmVeBVMKqr65CYWkjn1PrHL2H3SdgnBG5Pm59OhwbO1g7PXtBKRw7QKLqcKh5MpVLO4rS6tYXJiH6qvyx5g7M+6gGuk8+JG6fMRKsu08+DG9trcE1+DDjWkeboB+AXL59tw7GyA9+B1HIzLeSNbELeKr20oILiphQZsl5B+40NEhdEdUWBp+daILVpkb4tqT1Q0j39ekqGxw81wSdnjzIhZ0fP2AH9bo8dZCvobWOHmbtb4FbnE9mxJY0NnBLOkRueRw+fypaCoYxnocpwrg01ZWY6/JXSGURnx5vghnrr8PgrDoYMree59e33Wh1YTrN0/gHa/+PTeD/52PQbcph6PH0ETuoR3O0htY6+gS0r9HA+YnHIzanMZKnjWS8mypkpXTlUJLGrIgJg9qcBVKbTvwOTF8nxAfNrYPByCCqkQnZrX95ChlxW5DgPrzfC0ub7KAezenXtnyf3t5GI799wjdNZOG4gYGb0yECobxseiyrHBrC8KS5MNUVclyVnszUbUPyJKmEiag3m6HxBwda/w5SPyHOXCLYXbBfq8d8dje4dnzE1dAlyj0tYlMatCR2zUQ4HRfGKqJJnDYRCpQrooPZtc92cnmKZ9deQ1GLDhRH6Uhdb/ziejiGf1XVxdVpUn4Q9K8hii/cgluHEiFjjEumodfvQ7LDN04EQRrPtIEBGyewBX8doUmbo0PAPDQEqh5PluoAu/CeJ1HHiE0oZm2+rgn8Wn4+8SpYvw+ERc/3zDH4vxZjGrBhIoRtmMD0mwjbMJ5R/9DoCODykquL35b6AOMW1cPAOZZmUNRu3IK/77zpUOhhqCleCtb9/Zl1fyBsf9trpyFoYZJ5wIYJ4Iiw9ePZlPlJzDw4iJUj5iHBcOvoYS5fWmODCJQiSE7V96YW/ph/DQ6fb/1A3o/TlfVgOfYsyvdF+b7Mtr8fnP/Y12wIXT+ODViPwkgYZzyvqU819XalDeQbKMcNqId375nbEI5CnDdkRkhUZH1P37fAyAUW2FjY6FDUEfTA3joYB9bCAGYt7MuzbX8AXPm3r8UQtm48hK5DWcx3Iyk3FcoHBbLzUf0Zt8fI23sLBqC4Qsna9RzUfLOynrS8HuYV3IBvS638rzJ93xdXNkBpeRmUn93LaoqXQH3RFCBZa6EfsxX6g60wgI95jdkQsm4sC0VJe8ZB6FoE65C1Y1kwkvOnoXA+KlDbwIo9NzU5PWH3GLecUz16LxUk2iyr8BPs96d5sO7zxU8AM9aGoGUpluC1Y1gICSNUUw5ZM5aPqR+8ZgwbkpcKJ2OD8UdaFb/QzmONEDa7FkJnX+WZRHjW1y2yWhtKPV1/D96OPKz1XIpkrfuMuBFfHPvKDWCNPZ5FzXuGgHcTzCRJBKGoJo5ZQX3itVmxcLPoEL/WJfwDRkICIeeYlnOt15ZU2/h7sroDXMqGciTYjA+jXnPfhxFlW3ubDV5/iSwIzh+Lpyxkg/PH2NVB+amM4H1cV/TxKn4xisz8eghBgRCUEvnhSV5YJ98N4M75eSjXB0XtQVmwfueN0gTWcrw7191k8JgcnC3khCzfjBwTgatTcAOUUxkxOTtNXg6g4GgTBL9+FYJRhIM1SfHefVDrCo42yncDsB2OQUEvPG0SpOxF0iTLxyJLsL/oOZccg0tM70yS5KKrU4Hgm1mtED2BGB+qPikvCTBtdQMEoYiCpIJe/1kT1c/Zr7mKr62X74K3z+VtSlTSG4V7IZS9wMZ7NMZ6n2DicOc0Q9vHnFy53KpU6L8qmW8ikNe4Kcx6qEdrkj6cBg1N1/mFq2rvwKh3LRCI0iQe+DeRm+urWo/WqN6o9yxQhc8RRUPjdTz9aJIVot968pqyTZ85veS8JzO6tzXyn9PeLw02Ba5KkaIp0P/9ZJTH8fuqJ/p8LHvzv8/jF6egTWTgaZJcK+QG9EzFtfQaFXVn8d7nUiTnwTjfeVJPN/bATXjiBkX/aH7341yewjXJZ1Z/FFP0WzmaNY+T7fp8bqXoLS3aJBVE7ChqhJHv1EI/lOyPqKyYuqoOdujueYrtJ9dArYluD01YhztK68cCGzI1xXma1DcYHnF2cg3ITrT0RTmCC0pJyv0kNEdZ36NPgm4BfZRcssHXp5sg9+sbsHT3DdzYLbsTp2hovAbz9+fBtl1BKNWTThmzu6zdUZJqRU8c9wTrNz0YQXPa7aPCbbxflpLql4eyeaNYv7zRWCPYC5DjgBWY5bivnI/f/DTbXvqlVLt/HLx0AuI3Pc3i8+NQFsUU33RHQUQb9+BIeaQbbQDWvNp5ndRuDvoU/BYm1CqxvisQyrweZTcmaW1Mc3KcsOkZmF+YxwUvNvwkdYHX1Ms9vBGi1qaL1+LrKr7GbxVNrDtmQlebqLab4/i4P2J/+iq6jvPLwhPmF/BfkcQ0cZ4VYuy/nOb5J6LV1A9YLqCeymJe3xvJXvkgEmXc8HYgMTcSFZKmrrIm3Owzzr2Z6ZwldR2H92vRx5WEQskHLE+S6OdbjvU9tT4J/JaN5PJUR+YlQMVX+DBKKS5oIkk37IlsNbky3jN1xTGCuezDLuVS8+7h5OZs9H0vzuK/LAkUdFF9JhmRE5kSoyxI5HOKlmP/ZSMhe2sgynVFWRJzZbdNLjgmXGXPhVG+vbcL7xFXPu1iMd7t1mkZnYd4ZPouTWSEuqgA66WYCRz7YW5eI+ZorPUxU61/3fD3Y6VUs5yoXaSwC1i13JlhzXNabLt0qfdg4TbGby5d3BG+uQmapNbPTWy1TmHE9fQaYusO/KlMYkrQ1AXFRRaynVC6M21KgPWcjEfnSq2HC9cxxiwuhggJkQklZlyCdS5tKpGjzcuxysTkNYO4kB6biWTte9a9HRnv7+0Eb05rd++H9n7RIbR7us+C4RYU1UR8lyRCnyXxKB/PqFY9X1xDfYLG9Br9uOILfChRjsTs6Yh0wH5HuL3nMWZFruzqYMlIccqUGr8unLo6G73ejDZzwRwUz5EZx1wS6z45cYiY09Dm49iLG0KFHBftACTJxUVP5D2PUYYjq5yPG93bPNgD+zDhktonS4n5oJQxJ56L+mRTLbKq+2SLOSJ2+VA8ffx2IVEhK3HWpK17HmVXPmlvmZPh9Mvu9wcN+jS6Tem/jkRJUo/3ohF8A97ZI/gc1ry/+p/4byAKojBJC3Y/qtVXPmlXOyejbZZrxzau8jL/+6CNdBrsken5ctRxEufCi+M0RC8Ohi0bSvLNkPju9gyB3YvbmZ57ou2s/6u4o6DN0MPumu6X3WNmmKnXG0PMtAmvhcPZR9t64wk7Wc5ucTJ/PM+pYOHMttlTU9pM+22kDYb/Amt8e8f/SRClAAAAAElFTkSuQmCC" InformativeScreenshot="02b4ff2e39dde94e0e4150b34bf51dfa.jpg" Title="Payments">
                      <uix:TargetApp.Selector>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1312">string.Format("&lt;html app='{0}' title='Payments' /&gt;", str_BrowserValue)</CSharpValue>
                        </InArgument>
                      </uix:TargetApp.Selector>
                      <uix:TargetApp.Url>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1214">str_Url</CSharpValue>
                        </InArgument>
                      </uix:TargetApp.Url>
                    </uix:TargetApp>
                  </uix:NApplicationCard.TargetApp>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </uix:NApplicationCard>
              </Sequence>
              <Assign DisplayName="Assign Add two Sale Item Prices" sap:VirtualizedContainerService.HintSize="450,125.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_29">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Double">
                    <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_312">dbl_TwoSaleItemTotal</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1215">dbl_QuickSaleItemPrice+dbl_PresetSaleItemPrice</CSharpValue>
                  </InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="450,125.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_30">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Double">
                    <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_313">dbl_TwoQuickSaleItemPrice</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1216">dbl_QuickSaleItemPrice+dbl_QuickSaleItemPrice</CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <dp:OrderSummary dbl_in_ThirdSaleItemTaxRate="{x:Null}" dbl_in_ThirdSaleitemPrice="{x:Null}" str_in_AmountTendered="{x:Null}" str_in_ThirdSaleItem="{x:Null}" str_out_Surcharge="{x:Null}" DisplayName="Order summary (OrderSummary)" sap:VirtualizedContainerService.HintSize="450,94" sap2010:WorkflowViewState.IdRef="OrderSummary_11" bool_in_RemoveSurcharge="False">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:OrderSummary.dbl_in_DiscountRateAmount>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1232">Convert.ToDouble(str_DiscountRateAmount)</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.dbl_in_DiscountRateAmount>
                <dp:OrderSummary.dbl_in_FirstSaleItemTaxRate>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1233">dbl_QuickSaleItemTaxRate</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.dbl_in_FirstSaleItemTaxRate>
                <dp:OrderSummary.dbl_in_FirstSaleitemPrice>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1235">dbl_QuickSaleItemPrice</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.dbl_in_FirstSaleitemPrice>
                <dp:OrderSummary.dbl_in_SaleItemTotalAmount>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1217">dbl_TwoSaleItemTotal</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.dbl_in_SaleItemTotalAmount>
                <dp:OrderSummary.dbl_in_SecondSaleItemTaxRate>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1234">dbl_PresetSaleItemTaxRate</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.dbl_in_SecondSaleItemTaxRate>
                <dp:OrderSummary.dbl_in_SecondSaleitemPrice>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1236">dbl_PresetSaleItemPrice</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.dbl_in_SecondSaleitemPrice>
                <dp:OrderSummary.dbl_out_TotalAmount>
                  <OutArgument x:TypeArguments="x:Double">
                    <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_314">dbl_TotalAmount</CSharpReference>
                  </OutArgument>
                </dp:OrderSummary.dbl_out_TotalAmount>
                <dp:OrderSummary.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1219">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.int_in_ReportId>
                <dp:OrderSummary.str_in_CardType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1221">str_CardType</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_CardType>
                <dp:OrderSummary.str_in_CustomerAddress>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1224">str_CustomerAddress</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_CustomerAddress>
                <dp:OrderSummary.str_in_CustomerCity>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1225">str_CustomerCity</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_CustomerCity>
                <dp:OrderSummary.str_in_CustomerCountryCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1228">str_CustomerCountryCode</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_CustomerCountryCode>
                <dp:OrderSummary.str_in_CustomerSateCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1226">str_CustomerSateCode</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_CustomerSateCode>
                <dp:OrderSummary.str_in_CustomerZipCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1227">str_CustomerZipCode</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_CustomerZipCode>
                <dp:OrderSummary.str_in_FirstName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1222">str_FirstName</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_FirstName>
                <dp:OrderSummary.str_in_FirstSaleItem>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1231">str_QuickSaleItemName</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_FirstSaleItem>
                <dp:OrderSummary.str_in_Last4Digits>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1238">str_CardNumber</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_Last4Digits>
                <dp:OrderSummary.str_in_LastName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1223">str_LastName</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_LastName>
                <dp:OrderSummary.str_in_OrderNote>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1220">str_OrderNote</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_OrderNote>
                <dp:OrderSummary.str_in_PaymentType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1237">str_CardType</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_PaymentType>
                <dp:OrderSummary.str_in_SecondSaleItem>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1230">str_PresetSaleItemName</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_SecondSaleItem>
                <dp:OrderSummary.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1218">str_TestId</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_TestId>
                <dp:OrderSummary.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1229">str_Url</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_Url>
                <dp:OrderSummary.str_out_TaxAmount>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_315">str_TaxAmoount</CSharpReference>
                  </OutArgument>
                </dp:OrderSummary.str_out_TaxAmount>
              </dp:OrderSummary>
              <dp:EditSaleitemQuantityInOrderSummary sap:VirtualizedContainerService.HintSize="450,94" sap2010:WorkflowViewState.IdRef="EditSaleitemQuantityInOrderSummary_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:EditSaleitemQuantityInOrderSummary.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1243">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:EditSaleitemQuantityInOrderSummary.int_in_ReportId>
                <dp:EditSaleitemQuantityInOrderSummary.str_in_SaleItemName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1240">str_QuickSaleItemName</CSharpValue>
                  </InArgument>
                </dp:EditSaleitemQuantityInOrderSummary.str_in_SaleItemName>
                <dp:EditSaleitemQuantityInOrderSummary.str_in_SaleItemQuantity>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1241">str_SaleItemQuantity</CSharpValue>
                  </InArgument>
                </dp:EditSaleitemQuantityInOrderSummary.str_in_SaleItemQuantity>
                <dp:EditSaleitemQuantityInOrderSummary.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1242">str_TestId</CSharpValue>
                  </InArgument>
                </dp:EditSaleitemQuantityInOrderSummary.str_in_TestId>
                <dp:EditSaleitemQuantityInOrderSummary.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1239">str_Url</CSharpValue>
                  </InArgument>
                </dp:EditSaleitemQuantityInOrderSummary.str_in_Url>
              </dp:EditSaleitemQuantityInOrderSummary>
              <Assign DisplayName="Assign Add two Sale Item Price" sap:VirtualizedContainerService.HintSize="450,125.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_31">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Double">
                    <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_316">dbl_TwoSaleItemTotal</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1244">dbl_QuickSaleItemPrice+dbl_PresetSaleItemPrice+dbl_QuickSaleItemPrice</CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <dp:OrderSummary dbl_in_ThirdSaleItemTaxRate="{x:Null}" dbl_in_ThirdSaleitemPrice="{x:Null}" str_in_AmountTendered="{x:Null}" str_in_ThirdSaleItem="{x:Null}" str_out_Surcharge="{x:Null}" DisplayName="Order summary (OrderSummary)" sap:VirtualizedContainerService.HintSize="450,94" sap2010:WorkflowViewState.IdRef="OrderSummary_12" bool_in_RemoveSurcharge="False">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:OrderSummary.dbl_in_DiscountRateAmount>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1260">Convert.ToDouble(str_DiscountRateAmount)</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.dbl_in_DiscountRateAmount>
                <dp:OrderSummary.dbl_in_FirstSaleItemTaxRate>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1261">dbl_QuickSaleItemTaxRate</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.dbl_in_FirstSaleItemTaxRate>
                <dp:OrderSummary.dbl_in_FirstSaleitemPrice>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1263">dbl_TwoQuickSaleItemPrice</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.dbl_in_FirstSaleitemPrice>
                <dp:OrderSummary.dbl_in_SaleItemTotalAmount>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1245">dbl_TwoSaleItemTotal</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.dbl_in_SaleItemTotalAmount>
                <dp:OrderSummary.dbl_in_SecondSaleItemTaxRate>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1262">dbl_PresetSaleItemTaxRate</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.dbl_in_SecondSaleItemTaxRate>
                <dp:OrderSummary.dbl_in_SecondSaleitemPrice>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1264">dbl_PresetSaleItemPrice</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.dbl_in_SecondSaleitemPrice>
                <dp:OrderSummary.dbl_out_TotalAmount>
                  <OutArgument x:TypeArguments="x:Double">
                    <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_317">dbl_TotalAmount</CSharpReference>
                  </OutArgument>
                </dp:OrderSummary.dbl_out_TotalAmount>
                <dp:OrderSummary.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1247">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.int_in_ReportId>
                <dp:OrderSummary.str_in_CardType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1249">str_CardType</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_CardType>
                <dp:OrderSummary.str_in_CustomerAddress>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1252">str_CustomerAddress</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_CustomerAddress>
                <dp:OrderSummary.str_in_CustomerCity>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1253">str_CustomerCity</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_CustomerCity>
                <dp:OrderSummary.str_in_CustomerCountryCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1256">str_CustomerCountryCode</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_CustomerCountryCode>
                <dp:OrderSummary.str_in_CustomerSateCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1254">str_CustomerSateCode</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_CustomerSateCode>
                <dp:OrderSummary.str_in_CustomerZipCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1255">str_CustomerZipCode</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_CustomerZipCode>
                <dp:OrderSummary.str_in_FirstName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1250">str_FirstName</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_FirstName>
                <dp:OrderSummary.str_in_FirstSaleItem>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1259">str_QuickSaleItemName</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_FirstSaleItem>
                <dp:OrderSummary.str_in_Last4Digits>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1266">str_CardNumber</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_Last4Digits>
                <dp:OrderSummary.str_in_LastName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1251">str_LastName</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_LastName>
                <dp:OrderSummary.str_in_OrderNote>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1248">str_OrderNote</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_OrderNote>
                <dp:OrderSummary.str_in_PaymentType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1265">str_CardType</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_PaymentType>
                <dp:OrderSummary.str_in_SecondSaleItem>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1258">str_PresetSaleItemName</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_SecondSaleItem>
                <dp:OrderSummary.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1246">str_TestId</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_TestId>
                <dp:OrderSummary.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1257">str_Url</CSharpValue>
                  </InArgument>
                </dp:OrderSummary.str_in_Url>
                <dp:OrderSummary.str_out_TaxAmount>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_318">str_TaxAmoount</CSharpReference>
                  </OutArgument>
                </dp:OrderSummary.str_out_TaxAmount>
              </dp:OrderSummary>
              <dp:CloseOrderSummary DisplayName="Close order summary (CloseOrderSummary)" sap:VirtualizedContainerService.HintSize="450,94" sap2010:WorkflowViewState.IdRef="CloseOrderSummary_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:CloseOrderSummary.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1268">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:CloseOrderSummary.int_in_ReportId>
                <dp:CloseOrderSummary.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1269">str_TestId</CSharpValue>
                  </InArgument>
                </dp:CloseOrderSummary.str_in_TestId>
                <dp:CloseOrderSummary.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1267">str_Url</CSharpValue>
                  </InArgument>
                </dp:CloseOrderSummary.str_in_Url>
              </dp:CloseOrderSummary>
              <dp:VerifyChargeButtonAmount DisplayName="Verify charge button amount (VerifyChargeButtonAmount)" sap:VirtualizedContainerService.HintSize="450,290" sap2010:WorkflowViewState.IdRef="VerifyChargeButtonAmount_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:VerifyChargeButtonAmount.dbl_in_ExpectedTotalAmount>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1272">dbl_TotalAmount</CSharpValue>
                  </InArgument>
                </dp:VerifyChargeButtonAmount.dbl_in_ExpectedTotalAmount>
                <dp:VerifyChargeButtonAmount.int_in_reportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1271">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:VerifyChargeButtonAmount.int_in_reportId>
                <dp:VerifyChargeButtonAmount.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1273">str_Url</CSharpValue>
                  </InArgument>
                </dp:VerifyChargeButtonAmount.str_in_Url>
                <dp:VerifyChargeButtonAmount.str_in_testId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1270">str_TestId</CSharpValue>
                  </InArgument>
                </dp:VerifyChargeButtonAmount.str_in_testId>
              </dp:VerifyChargeButtonAmount>
              <dp:VerifyTransactionSuccessAndAuthorizationCode DisplayName="ClickOnChargeButtonAndVerifySuccess (VerifyTransactionSuccessAndAuthorizationCode)" sap:VirtualizedContainerService.HintSize="450,395.3333333333333" sap2010:WorkflowViewState.IdRef="VerifyTransactionSuccessAndAuthorizationCode_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dp:VerifyTransactionSuccessAndAuthorizationCode.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1275">int_ReportId</CSharpValue>
                  </InArgument>
                </dp:VerifyTransactionSuccessAndAuthorizationCode.int_in_ReportId>
                <dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_PaymentType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1274">str_PaymentType</CSharpValue>
                  </InArgument>
                </dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_PaymentType>
                <dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1276">str_TestId</CSharpValue>
                  </InArgument>
                </dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_TestId>
                <dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1277">str_Url</CSharpValue>
                  </InArgument>
                </dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_Url>
                <dp:VerifyTransactionSuccessAndAuthorizationCode.str_out_AuthorizationCode>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_319">str_AuthorizationCode</CSharpReference>
                  </OutArgument>
                </dp:VerifyTransactionSuccessAndAuthorizationCode.str_out_AuthorizationCode>
                <dp:VerifyTransactionSuccessAndAuthorizationCode.str_out_TransactionStatus>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_320">str_TransactionStatus</CSharpReference>
                  </OutArgument>
                </dp:VerifyTransactionSuccessAndAuthorizationCode.str_out_TransactionStatus>
              </dp:VerifyTransactionSuccessAndAuthorizationCode>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="450,167.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_13">
                <ui:LogMessage.Message>
                  <InArgument x:TypeArguments="x:Object">
                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1278">"Tran Status "+str_TransactionStatus</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Message>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
            </Sequence>
          </Sequence>
          <Sequence DisplayName="TC_11024" sap:VirtualizedContainerService.HintSize="574,13327.333333333334" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ra:StartTest ContinueOnError="{x:Null}" TagName="{x:Null}" TestDescription="{x:Null}" DisplayName="Start Test" sap:VirtualizedContainerService.HintSize="512,126.66666666666667" sap2010:WorkflowViewState.IdRef="StartTest_2" Priority="High" TestName="TC_11024_VerifyWeeklyRecurinCustomerVault">
              <ra:StartTest.ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_276">int_ReportId</CSharpValue>
                </InArgument>
              </ra:StartTest.ReportId>
              <ra:StartTest.SuiteId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_844">str_SuiteId</CSharpValue>
                </InArgument>
              </ra:StartTest.SuiteId>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ra:StartTest.testId>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_181">str_TestId</CSharpReference>
                </OutArgument>
              </ra:StartTest.testId>
            </ra:StartTest>
            <Sequence DisplayName="TC_11024" sap:VirtualizedContainerService.HintSize="512,13090" sap2010:WorkflowViewState.IdRef="Sequence_22">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="str_outRecurringId" />
                <Variable x:TypeArguments="x:String" Name="str_outPaymentId" />
                <Variable x:TypeArguments="x:String" Name="str_outCustomerId" />
                <Variable x:TypeArguments="x:String" Name="str_CustomerName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="450,125.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_12">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_321">str_Url</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_555">"https://payments2.deluxe.com/gateway/*"</CSharpValue>
                  </InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <Sequence sap:VirtualizedContainerService.HintSize="450,2497.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_26">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ca:ReadAssetValue sap:VirtualizedContainerService.HintSize="388,237.33333333333334" sap2010:WorkflowViewState.IdRef="ReadAssetValue_1" str_in_AssetName="BrowserValue" str_in_Orch_FolderPath="DPP_TestAutomation">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ca:ReadAssetValue.str_out_AssetValue>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_226">str_BrowserValue</CSharpReference>
                    </OutArgument>
                  </ca:ReadAssetValue.str_out_AssetValue>
                </ca:ReadAssetValue>
                <uix:NApplicationCard AttachMode="ByInstance" DisplayName="Use Browser Chrome: Customer Vault" sap:VirtualizedContainerService.HintSize="388,94" sap2010:WorkflowViewState.IdRef="NApplicationCard_2" InteractionMode="DebuggerApi" ScopeGuid="14dbc44b-bde7-4d35-a291-43a16ededf25" Version="V2">
                  <uix:NApplicationCard.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,921.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_38">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click 'Customer Vault'" sap:VirtualizedContainerService.HintSize="354,199.33333333333334" sap2010:WorkflowViewState.IdRef="NClick_1" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="14dbc44b-bde7-4d35-a291-43a16ededf25" Version="V3">
                          <uix:NClick.Target>
                            <uix:TargetAnchorable BrowserURL="https://payments2.deluxe.com/gateway/customervault" CvTextArea="69, 510, 121, 16" CvTextArgument="Customer Vault" CvType="Text" DesignTimeRectangle="72, 504, 216, 30" DesignTimeScaleFactor="1.2000000476837158" ElementType="Text" FriendlyName="'Customer Vault'" FullSelectorArgument="&lt;webctrl parentid='menuCustomervault' tag='SPAN' /&gt;" FuzzySelectorArgument="&lt;webctrl parentid='menuCustomervault' tag='SPAN' type='' class='hide-menu' aaname='Customer Vault' check:innerText='Customer Vault' /&gt;" Guid="9d46eed8-6dfa-4b91-96e3-558cd7b4ae11" InformativeScreenshot="7c201485ffe148c7b383fddf1f329bf0.png" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Customer Vault' /&gt;" SearchSteps="Selector" Version="V2" Visibility="Interactive" />
                          </uix:NClick.Target>
                        </uix:NClick>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,187.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_9">
                          <ui:LogMessage.Level>
                            <InArgument x:TypeArguments="ui:LogLevel">
                              <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_954">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Level>
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_953">"Clicked on Customer vault"</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <uix:NTypeInto ActivateBefore="True" ClickBeforeMode="Single" DisplayName="Type Into 'INPUT'" EmptyFieldMode="SingleLine" sap:VirtualizedContainerService.HintSize="354,262.6666666666667" sap2010:WorkflowViewState.IdRef="NTypeInto_1" ScopeIdentifier="14dbc44b-bde7-4d35-a291-43a16ededf25" Version="V3">
                          <uix:NTypeInto.Target>
                            <uix:TargetAnchorable BrowserURL="https://payments2.deluxe.com/gateway/customervault" CvElementArea="341, 485, 1076, 46" CvType="InputBox" DesignTimeRectangle="341, 488, 1076, 42" DesignTimeScaleFactor="1.2000000476837158" ElementType="InputBox" FriendlyName="'INPUT'" FullSelectorArgument="&lt;webctrl tag='INPUT' /&gt;" FuzzySelectorArgument="&lt;webctrl tag='INPUT' type='text' class='form-control ng-untouched ng-pristine ng-valid' aaname='' /&gt;" Guid="5a8629d8-3e2d-4869-9742-868218872436" InformativeScreenshot="d05070e81f241055330e083a9b9bc562.png" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Customer Vault' /&gt;" SearchSteps="Selector" Version="V2" Visibility="Interactive" />
                          </uix:NTypeInto.Target>
                          <uix:NTypeInto.Text>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1282">str_FirstName</CSharpValue>
                            </InArgument>
                          </uix:NTypeInto.Text>
                        </uix:NTypeInto>
                        <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click 'SPAN'" sap:VirtualizedContainerService.HintSize="354,184.66666666666666" sap2010:WorkflowViewState.IdRef="NClick_2" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="14dbc44b-bde7-4d35-a291-43a16ededf25" Version="V3">
                          <uix:NClick.Target>
                            <uix:TargetAnchorable BrowserURL="https://payments2.deluxe.com/gateway/customervault" DesignTimeRectangle="1417, 488, 48, 42" DesignTimeScaleFactor="1.2000000476837158" FriendlyName="'SPAN'" FullSelectorArgument="&lt;webctrl class='input-group-text' parentid='main-wrapper' tag='SPAN' /&gt;" FuzzySelectorArgument="&lt;webctrl class='input-group-text' parentid='main-wrapper' tag='SPAN' type='' aaname='' /&gt;" Guid="a39ae673-04e7-4d75-ab73-f3aad77e018d" InformativeScreenshot="3a137cddc3124269a5e2df105c24a8aa.png" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Customer Vault' /&gt;" SearchSteps="Selector" Version="V2" Visibility="Interactive" />
                          </uix:NClick.Target>
                        </uix:NClick>
                      </Sequence>
                    </ActivityAction>
                  </uix:NApplicationCard.Body>
                  <uix:NApplicationCard.TargetApp>
                    <uix:TargetApp Area="-11, -11, 1942, 1030" BrowserType="Chrome" IconBase64="iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAA0/SURBVGhDvZcJUFRXFkDbiIa4gbgACtgsKqsgqIgoiyjgCpkklk4iMktFrcnEylbJxBh0JlZMooK4YBR3TTIaxZhMJovaScS44RZRiCINihDHSANuYLfvzr1v+fyGdksyc6tO3fvue93/vNf/N43ht4jOTm1dJ3u4Zf6jn3f2ujD/gqJhA8xlIyIsl0cOgssjB0NZ3EDLkZhQc0Fkf9M/+npnp/RwTfdybm/s3MXFZeKTUzOW5O/YueubM6UHS+oaiF2m0yVL8rcXTHjimam0Rl7mtw2Snu7tPqsgop9JiYqsqxPVWPBTYhSnOj0ZyvK3sB/O37xz6uIduBdF527cenVudk63Hu7u8tK/Lkj8FWOvrHMjwmsvJ0YxLpYQaZ9JHKGs7xGVL8xixWcbHMreiwNnLPWJyWlpUuOXxStGTxRXtwYJ0Yk2y/FefCRTJ12DdU38QD6uxvnzuSvh1AWbQ8EH4YcLNjb9+dlvtMGQSg8WdL/uGRRynE6TQ4ItshLlOQFzQqSE1kSBefZsh1K/hPRJmX+QavePSe7dp50dHm7RBFGKC2qiellJfCRUE3EDWXVcBKucOR1OVTQ5lMFT5dyrbsmx8sbbMXGjR0vFu8fLfTyylKwSU6dLciJHiIxzNM/lsVcdP1DmSCjdudehiJAU9YlKGxRX3eFQLebFGv1rFPTNJTUdx0s+Hln601Uy4mRlHYeSmC+NkMJUY4/gc8jFCaPuc9/b4CTOl10GKCq3cqimHs05fg3fGOvh7ukpde1jknu3adVcSnc7yLEQlYIyC+kI2oioh4czlc/Pe8uhAEGne6LCBucuM8j97Ar0zijiLPvXFd6jubt9AsSkqdNnSOXmoAe2JCaslguiNEmQqP5UhTTKclGRq1TNNxEBVZiJki8PM0cXJ05WWqEYT7mo/Db0QnHD2P0cr8wiOGa24hr8dHCNo9cSKzd//oXUbo5D0cFmu1MkIaqlkD7zOnYAU7Iaw4lwnk/9WOfw4nSy+g14PHMEDKmFHI+pR3iP5mjN3T6F70/X1kltES96u2dpp0joxO0FSU4HbaJF76LMp8pvtbqwEqJ8FE/afAVg7Z5aCJpxHDkB6/daeI/m9Gv170EcLbvZKNUNhvbdOxjfeyGh+TRR6iLCN6AJNdc0x7NiWBirSo2F+jV50HjsCFirLwFFcYuLKkiIKP8PwL6SRlj15VWYmVeBVMKqr65CYWkjn1PrHL2H3SdgnBG5Pm59OhwbO1g7PXtBKRw7QKLqcKh5MpVLO4rS6tYXJiH6qvyx5g7M+6gGuk8+JG6fMRKsu08+DG9trcE1+DDjWkeboB+AXL59tw7GyA9+B1HIzLeSNbELeKr20oILiphQZsl5B+40NEhdEdUWBp+daILVpkb4tqT1Q0j39ekqGxw81wSdnjzIhZ0fP2AH9bo8dZCvobWOHmbtb4FbnE9mxJY0NnBLOkRueRw+fypaCoYxnocpwrg01ZWY6/JXSGURnx5vghnrr8PgrDoYMree59e33Wh1YTrN0/gHa/+PTeD/52PQbcph6PH0ETuoR3O0htY6+gS0r9HA+YnHIzanMZKnjWS8mypkpXTlUJLGrIgJg9qcBVKbTvwOTF8nxAfNrYPByCCqkQnZrX95ChlxW5DgPrzfC0ub7KAezenXtnyf3t5GI799wjdNZOG4gYGb0yECobxseiyrHBrC8KS5MNUVclyVnszUbUPyJKmEiag3m6HxBwda/w5SPyHOXCLYXbBfq8d8dje4dnzE1dAlyj0tYlMatCR2zUQ4HRfGKqJJnDYRCpQrooPZtc92cnmKZ9deQ1GLDhRH6Uhdb/ziejiGf1XVxdVpUn4Q9K8hii/cgluHEiFjjEumodfvQ7LDN04EQRrPtIEBGyewBX8doUmbo0PAPDQEqh5PluoAu/CeJ1HHiE0oZm2+rgn8Wn4+8SpYvw+ERc/3zDH4vxZjGrBhIoRtmMD0mwjbMJ5R/9DoCODykquL35b6AOMW1cPAOZZmUNRu3IK/77zpUOhhqCleCtb9/Zl1fyBsf9trpyFoYZJ5wIYJ4Iiw9ePZlPlJzDw4iJUj5iHBcOvoYS5fWmODCJQiSE7V96YW/ph/DQ6fb/1A3o/TlfVgOfYsyvdF+b7Mtr8fnP/Y12wIXT+ODViPwkgYZzyvqU819XalDeQbKMcNqId375nbEI5CnDdkRkhUZH1P37fAyAUW2FjY6FDUEfTA3joYB9bCAGYt7MuzbX8AXPm3r8UQtm48hK5DWcx3Iyk3FcoHBbLzUf0Zt8fI23sLBqC4Qsna9RzUfLOynrS8HuYV3IBvS638rzJ93xdXNkBpeRmUn93LaoqXQH3RFCBZa6EfsxX6g60wgI95jdkQsm4sC0VJe8ZB6FoE65C1Y1kwkvOnoXA+KlDbwIo9NzU5PWH3GLecUz16LxUk2iyr8BPs96d5sO7zxU8AM9aGoGUpluC1Y1gICSNUUw5ZM5aPqR+8ZgwbkpcKJ2OD8UdaFb/QzmONEDa7FkJnX+WZRHjW1y2yWhtKPV1/D96OPKz1XIpkrfuMuBFfHPvKDWCNPZ5FzXuGgHcTzCRJBKGoJo5ZQX3itVmxcLPoEL/WJfwDRkICIeeYlnOt15ZU2/h7sroDXMqGciTYjA+jXnPfhxFlW3ubDV5/iSwIzh+Lpyxkg/PH2NVB+amM4H1cV/TxKn4xisz8eghBgRCUEvnhSV5YJ98N4M75eSjXB0XtQVmwfueN0gTWcrw7191k8JgcnC3khCzfjBwTgatTcAOUUxkxOTtNXg6g4GgTBL9+FYJRhIM1SfHefVDrCo42yncDsB2OQUEvPG0SpOxF0iTLxyJLsL/oOZccg0tM70yS5KKrU4Hgm1mtED2BGB+qPikvCTBtdQMEoYiCpIJe/1kT1c/Zr7mKr62X74K3z+VtSlTSG4V7IZS9wMZ7NMZ6n2DicOc0Q9vHnFy53KpU6L8qmW8ikNe4Kcx6qEdrkj6cBg1N1/mFq2rvwKh3LRCI0iQe+DeRm+urWo/WqN6o9yxQhc8RRUPjdTz9aJIVot968pqyTZ85veS8JzO6tzXyn9PeLw02Ba5KkaIp0P/9ZJTH8fuqJ/p8LHvzv8/jF6egTWTgaZJcK+QG9EzFtfQaFXVn8d7nUiTnwTjfeVJPN/bATXjiBkX/aH7341yewjXJZ1Z/FFP0WzmaNY+T7fp8bqXoLS3aJBVE7ChqhJHv1EI/lOyPqKyYuqoOdujueYrtJ9dArYluD01YhztK68cCGzI1xXma1DcYHnF2cg3ITrT0RTmCC0pJyv0kNEdZ36NPgm4BfZRcssHXp5sg9+sbsHT3DdzYLbsTp2hovAbz9+fBtl1BKNWTThmzu6zdUZJqRU8c9wTrNz0YQXPa7aPCbbxflpLql4eyeaNYv7zRWCPYC5DjgBWY5bivnI/f/DTbXvqlVLt/HLx0AuI3Pc3i8+NQFsUU33RHQUQb9+BIeaQbbQDWvNp5ndRuDvoU/BYm1CqxvisQyrweZTcmaW1Mc3KcsOkZmF+YxwUvNvwkdYHX1Ms9vBGi1qaL1+LrKr7GbxVNrDtmQlebqLab4/i4P2J/+iq6jvPLwhPmF/BfkcQ0cZ4VYuy/nOb5J6LV1A9YLqCeymJe3xvJXvkgEmXc8HYgMTcSFZKmrrIm3Owzzr2Z6ZwldR2H92vRx5WEQskHLE+S6OdbjvU9tT4J/JaN5PJUR+YlQMVX+DBKKS5oIkk37IlsNbky3jN1xTGCuezDLuVS8+7h5OZs9H0vzuK/LAkUdFF9JhmRE5kSoyxI5HOKlmP/ZSMhe2sgynVFWRJzZbdNLjgmXGXPhVG+vbcL7xFXPu1iMd7t1mkZnYd4ZPouTWSEuqgA66WYCRz7YW5eI+ZorPUxU61/3fD3Y6VUs5yoXaSwC1i13JlhzXNabLt0qfdg4TbGby5d3BG+uQmapNbPTWy1TmHE9fQaYusO/KlMYkrQ1AXFRRaynVC6M21KgPWcjEfnSq2HC9cxxiwuhggJkQklZlyCdS5tKpGjzcuxysTkNYO4kB6biWTte9a9HRnv7+0Eb05rd++H9n7RIbR7us+C4RYU1UR8lyRCnyXxKB/PqFY9X1xDfYLG9Br9uOILfChRjsTs6Yh0wH5HuL3nMWZFruzqYMlIccqUGr8unLo6G73ejDZzwRwUz5EZx1wS6z45cYiY09Dm49iLG0KFHBftACTJxUVP5D2PUYYjq5yPG93bPNgD+zDhktonS4n5oJQxJ56L+mRTLbKq+2SLOSJ2+VA8ffx2IVEhK3HWpK17HmVXPmlvmZPh9Mvu9wcN+jS6Tem/jkRJUo/3ohF8A97ZI/gc1ry/+p/4byAKojBJC3Y/qtVXPmlXOyejbZZrxzau8jL/+6CNdBrsken5ctRxEufCi+M0RC8Ohi0bSvLNkPju9gyB3YvbmZ57ou2s/6u4o6DN0MPumu6X3WNmmKnXG0PMtAmvhcPZR9t64wk7Wc5ucTJ/PM+pYOHMttlTU9pM+22kDYb/Amt8e8f/SRClAAAAAElFTkSuQmCC" InformativeScreenshot="1bdb040eb2a4747363c23d59aa58b219.jpg" Title="Customer Vault">
                      <uix:TargetApp.Selector>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_956">string.Format("&lt;html app='{0}' title='Customer Vault' /&gt;", str_BrowserValue)</CSharpValue>
                        </InArgument>
                      </uix:TargetApp.Selector>
                      <uix:TargetApp.Url>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_957">str_Url</CSharpValue>
                        </InArgument>
                      </uix:TargetApp.Url>
                    </uix:TargetApp>
                  </uix:NApplicationCard.TargetApp>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </uix:NApplicationCard>
                <dc:ValidateCustomerDetails sap:VirtualizedContainerService.HintSize="388,500.6666666666667" sap2010:WorkflowViewState.IdRef="ValidateCustomerDetails_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <dc:ValidateCustomerDetails.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_852">int_ReportId</CSharpValue>
                    </InArgument>
                  </dc:ValidateCustomerDetails.int_in_Report_ID>
                  <dc:ValidateCustomerDetails.str_in_EmailId>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_847">str_Email</CSharpValue>
                    </InArgument>
                  </dc:ValidateCustomerDetails.str_in_EmailId>
                  <dc:ValidateCustomerDetails.str_in_FirstName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1105">str_FirstName</CSharpValue>
                    </InArgument>
                  </dc:ValidateCustomerDetails.str_in_FirstName>
                  <dc:ValidateCustomerDetails.str_in_LastName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1106">str_LastName</CSharpValue>
                    </InArgument>
                  </dc:ValidateCustomerDetails.str_in_LastName>
                  <dc:ValidateCustomerDetails.str_in_RecurringStatus>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1313">str_RecurringStatus</CSharpValue>
                    </InArgument>
                  </dc:ValidateCustomerDetails.str_in_RecurringStatus>
                  <dc:ValidateCustomerDetails.str_in_TestID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_851">str_TestId</CSharpValue>
                    </InArgument>
                  </dc:ValidateCustomerDetails.str_in_TestID>
                  <dc:ValidateCustomerDetails.str_in_Url>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_850">str_Url</CSharpValue>
                    </InArgument>
                  </dc:ValidateCustomerDetails.str_in_Url>
                  <dc:ValidateCustomerDetails.str_out_CustomerId>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_186">str_outCustomerId</CSharpReference>
                    </OutArgument>
                  </dc:ValidateCustomerDetails.str_out_CustomerId>
                </dc:ValidateCustomerDetails>
                <dc:Verify_TransactionHistory_CustomerVault str_in_PaymentOption="{x:Null}" sap:VirtualizedContainerService.HintSize="388,500.6666666666667" sap2010:WorkflowViewState.IdRef="Verify_TransactionHistory_CustomerVault_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <dc:Verify_TransactionHistory_CustomerVault.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_583">int_ReportId</CSharpValue>
                    </InArgument>
                  </dc:Verify_TransactionHistory_CustomerVault.int_in_Report_ID>
                  <dc:Verify_TransactionHistory_CustomerVault.str_in_Cardnumber>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_585">str_CardNumber</CSharpValue>
                    </InArgument>
                  </dc:Verify_TransactionHistory_CustomerVault.str_in_Cardnumber>
                  <dc:Verify_TransactionHistory_CustomerVault.str_in_PaymentType>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1314">str_CardType</CSharpValue>
                    </InArgument>
                  </dc:Verify_TransactionHistory_CustomerVault.str_in_PaymentType>
                  <dc:Verify_TransactionHistory_CustomerVault.str_in_Status>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_579">str_TransactionStatus</CSharpValue>
                    </InArgument>
                  </dc:Verify_TransactionHistory_CustomerVault.str_in_Status>
                  <dc:Verify_TransactionHistory_CustomerVault.str_in_TestID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_582">str_TestId</CSharpValue>
                    </InArgument>
                  </dc:Verify_TransactionHistory_CustomerVault.str_in_TestID>
                  <dc:Verify_TransactionHistory_CustomerVault.str_in_Total>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_854">dbl_TotalAmount.ToString()</CSharpValue>
                    </InArgument>
                  </dc:Verify_TransactionHistory_CustomerVault.str_in_Total>
                  <dc:Verify_TransactionHistory_CustomerVault.str_in_Url>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_581">str_Url</CSharpValue>
                    </InArgument>
                  </dc:Verify_TransactionHistory_CustomerVault.str_in_Url>
                </dc:Verify_TransactionHistory_CustomerVault>
                <dc:VerifyRecurringTransactionTable sap:VirtualizedContainerService.HintSize="388,553.3333333333334" sap2010:WorkflowViewState.IdRef="VerifyRecurringTransactionTable_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <dc:VerifyRecurringTransactionTable.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_562">int_ReportId</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringTransactionTable.int_in_Report_ID>
                  <dc:VerifyRecurringTransactionTable.str_in_Action>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1315">str_Action</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringTransactionTable.str_in_Action>
                  <dc:VerifyRecurringTransactionTable.str_in_Amount>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_823">dbl_TotalAmount.ToString()</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringTransactionTable.str_in_Amount>
                  <dc:VerifyRecurringTransactionTable.str_in_Frequency>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_894">str_Frequency</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringTransactionTable.str_in_Frequency>
                  <dc:VerifyRecurringTransactionTable.str_in_Last4Digits>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_565">str_CardNumber</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringTransactionTable.str_in_Last4Digits>
                  <dc:VerifyRecurringTransactionTable.str_in_PaymentType>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_796">str_CardType</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringTransactionTable.str_in_PaymentType>
                  <dc:VerifyRecurringTransactionTable.str_in_TestID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_561">str_TestId</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringTransactionTable.str_in_TestID>
                  <dc:VerifyRecurringTransactionTable.str_in_Url>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_560">str_Url</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringTransactionTable.str_in_Url>
                  <dc:VerifyRecurringTransactionTable.str_out_RecurringID>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_138">str_RecurringId</CSharpReference>
                    </OutArgument>
                  </dc:VerifyRecurringTransactionTable.str_out_RecurringID>
                </dc:VerifyRecurringTransactionTable>
                <dc:VerifyRecurringSummary sap:VirtualizedContainerService.HintSize="388,483.3333333333333" sap2010:WorkflowViewState.IdRef="VerifyRecurringSummary_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <dc:VerifyRecurringSummary.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_567">int_ReportId</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringSummary.int_in_Report_ID>
                  <dc:VerifyRecurringSummary.str_in_Amount>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_572">dbl_TotalAmount.ToString()</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringSummary.str_in_Amount>
                  <dc:VerifyRecurringSummary.str_in_EndDate>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_715">str_outEndDate</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringSummary.str_in_EndDate>
                  <dc:VerifyRecurringSummary.str_in_Frequency>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_895">str_Frequency</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringSummary.str_in_Frequency>
                  <dc:VerifyRecurringSummary.str_in_RecurringID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_570">str_RecurringId</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringSummary.str_in_RecurringID>
                  <dc:VerifyRecurringSummary.str_in_StartDate>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_714">str_outStartDate</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringSummary.str_in_StartDate>
                  <dc:VerifyRecurringSummary.str_in_TestID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_569">str_TestId</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringSummary.str_in_TestID>
                  <dc:VerifyRecurringSummary.str_in_Url>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_568">str_Url</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringSummary.str_in_Url>
                </dc:VerifyRecurringSummary>
              </Sequence>
              <Delay Duration="00:00:15" sap:VirtualizedContainerService.HintSize="450,94" sap2010:WorkflowViewState.IdRef="Delay_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Delay>
              <dr:TransactionSearched str_in_MerchantID="{x:Null}" sap:VirtualizedContainerService.HintSize="450,342.6666666666667" sap2010:WorkflowViewState.IdRef="TransactionSearched_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dr:TransactionSearched.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_590">int_ReportId</CSharpValue>
                  </InArgument>
                </dr:TransactionSearched.int_in_ReportId>
                <dr:TransactionSearched.str_in_FirstName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1107">str_FirstName</CSharpValue>
                  </InArgument>
                </dr:TransactionSearched.str_in_FirstName>
                <dr:TransactionSearched.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_589">str_TestId</CSharpValue>
                  </InArgument>
                </dr:TransactionSearched.str_in_TestId>
                <dr:TransactionSearched.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_588">str_Url</CSharpValue>
                  </InArgument>
                </dr:TransactionSearched.str_in_Url>
              </dr:TransactionSearched>
              <dr:Verify_RealtimeTransactionGrid sap:VirtualizedContainerService.HintSize="450,711.3333333333334" sap2010:WorkflowViewState.IdRef="Verify_RealtimeTransactionGrid_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dr:Verify_RealtimeTransactionGrid.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_592">int_ReportId</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.int_in_ReportId>
                <dr:Verify_RealtimeTransactionGrid.str_in_ApprovalCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_599">str_AuthorizationCode</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_ApprovalCode>
                <dr:Verify_RealtimeTransactionGrid.str_in_FirstName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1108">str_FirstName</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_FirstName>
                <dr:Verify_RealtimeTransactionGrid.str_in_Last4Digits>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_597">str_CardNumber</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_Last4Digits>
                <dr:Verify_RealtimeTransactionGrid.str_in_LastName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1109">str_LastName</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_LastName>
                <dr:Verify_RealtimeTransactionGrid.str_in_MID>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_593">str_MID</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_MID>
                <dr:Verify_RealtimeTransactionGrid.str_in_PaymentType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1316">str_CardType</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_PaymentType>
                <dr:Verify_RealtimeTransactionGrid.str_in_Status>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_602">str_TransactionStatus</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_Status>
                <dr:Verify_RealtimeTransactionGrid.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_591">str_TestId</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_TestId>
                <dr:Verify_RealtimeTransactionGrid.str_in_TransactionAmount>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_598">dbl_TotalAmount.ToString()</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_TransactionAmount>
                <dr:Verify_RealtimeTransactionGrid.str_in_Type>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_600">str_PaymentMethod</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_Type>
                <dr:Verify_RealtimeTransactionGrid.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_601">str_Url</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_Url>
              </dr:Verify_RealtimeTransactionGrid>
              <dr:Click_on_ViewIcon_button DisplayName="Click on ViewIcon_button" sap:VirtualizedContainerService.HintSize="450,237.33333333333334" sap2010:WorkflowViewState.IdRef="Click_on_ViewIcon_button_2">
                <dr:Click_on_ViewIcon_button.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_604">int_ReportId</CSharpValue>
                  </InArgument>
                </dr:Click_on_ViewIcon_button.int_in_ReportId>
                <dr:Click_on_ViewIcon_button.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_603">str_TestId</CSharpValue>
                  </InArgument>
                </dr:Click_on_ViewIcon_button.str_in_TestId>
                <dr:Click_on_ViewIcon_button.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_605">str_Url</CSharpValue>
                  </InArgument>
                </dr:Click_on_ViewIcon_button.str_in_Url>
              </dr:Click_on_ViewIcon_button>
              <dr:Verify_TransactionInformation sap:VirtualizedContainerService.HintSize="450,1027.3333333333333" sap2010:WorkflowViewState.IdRef="Verify_TransactionInformation_2">
                <dr:Verify_TransactionInformation.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_606">int_ReportId</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.int_in_ReportId>
                <dr:Verify_TransactionInformation.str_in_ApprovalCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_617">str_AuthorizationCode</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_ApprovalCode>
                <dr:Verify_TransactionInformation.str_in_CardExpiry>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_612">str_CardExpiry</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_CardExpiry>
                <dr:Verify_TransactionInformation.str_in_CardNumber>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_611">str_CardNumber</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_CardNumber>
                <dr:Verify_TransactionInformation.str_in_CardType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_610">str_CardType</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_CardType>
                <dr:Verify_TransactionInformation.str_in_DiscountAmount>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_613">str_DiscountRateAmount</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_DiscountAmount>
                <dr:Verify_TransactionInformation.str_in_OrderNote>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_618">str_OrderNote</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_OrderNote>
                <dr:Verify_TransactionInformation.str_in_PaymentType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1317">str_PaymentType</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_PaymentType>
                <dr:Verify_TransactionInformation.str_in_ProcessingFeeIncluded>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_960">str_ProcessingFee</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_ProcessingFeeIncluded>
                <dr:Verify_TransactionInformation.str_in_SubmissionMethod>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_958">str_SubmissionMethod</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_SubmissionMethod>
                <dr:Verify_TransactionInformation.str_in_SurchargeAmount>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_959">str_outSurcharge</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_SurchargeAmount>
                <dr:Verify_TransactionInformation.str_in_TaxAmount>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_614">str_TaxAmoount</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_TaxAmount>
                <dr:Verify_TransactionInformation.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_607">str_TestId</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_TestId>
                <dr:Verify_TransactionInformation.str_in_TotalTransactionAmount>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_615">dbl_TotalAmount.ToString()</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_TotalTransactionAmount>
                <dr:Verify_TransactionInformation.str_in_TransactionStatus>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_616">str_TransactionStatus</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_TransactionStatus>
                <dr:Verify_TransactionInformation.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_608">str_Url</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_Url>
                <dr:Verify_TransactionInformation.str_out_InvoiceNum>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_824">str_outInvoiceNumber</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_out_InvoiceNum>
                <dr:Verify_TransactionInformation.str_out_PaymentId>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_140">str_outPaymentId</CSharpReference>
                  </OutArgument>
                </dr:Verify_TransactionInformation.str_out_PaymentId>
              </dr:Verify_TransactionInformation>
              <dr:Verify_CustomerInformation sap:VirtualizedContainerService.HintSize="450,974.6666666666666" sap2010:WorkflowViewState.IdRef="Verify_CustomerInformation_2">
                <dr:Verify_CustomerInformation.Validation_CompanyName>
                  <InArgument x:TypeArguments="x:String" />
                </dr:Verify_CustomerInformation.Validation_CompanyName>
                <dr:Verify_CustomerInformation.Validation_CustomerID>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_619">str_outCustomerId</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.Validation_CustomerID>
                <dr:Verify_CustomerInformation.Validation_Fax>
                  <InArgument x:TypeArguments="x:String" />
                </dr:Verify_CustomerInformation.Validation_Fax>
                <dr:Verify_CustomerInformation.Validation_IpAddress>
                  <InArgument x:TypeArguments="x:String" />
                </dr:Verify_CustomerInformation.Validation_IpAddress>
                <dr:Verify_CustomerInformation.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_631">int_ReportId</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.int_in_ReportId>
                <dr:Verify_CustomerInformation.str_in_CustomerAddress>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_623">str_CustomerAddress</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_CustomerAddress>
                <dr:Verify_CustomerInformation.str_in_CustomerCity>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_624">str_CustomerCity</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_CustomerCity>
                <dr:Verify_CustomerInformation.str_in_CustomerCountryCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_630">str_CustomerCountryCode</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_CustomerCountryCode>
                <dr:Verify_CustomerInformation.str_in_CustomerName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_622">str_CustomerName</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_CustomerName>
                <dr:Verify_CustomerInformation.str_in_CustomerPhone>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_626">str_CustPhoneNumber</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_CustomerPhone>
                <dr:Verify_CustomerInformation.str_in_CustomerStateCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_629">str_CustomerSateCode</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_CustomerStateCode>
                <dr:Verify_CustomerInformation.str_in_CustomerZipCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_625">str_CustomerZipCode</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_CustomerZipCode>
                <dr:Verify_CustomerInformation.str_in_Email>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_627">str_Email</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_Email>
                <dr:Verify_CustomerInformation.str_in_FirstName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1110">str_FirstName</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_FirstName>
                <dr:Verify_CustomerInformation.str_in_PartOfRecurringSchedule>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_961">str_PartOfRecurring</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_PartOfRecurringSchedule>
                <dr:Verify_CustomerInformation.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_628">str_TestId</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_TestId>
                <dr:Verify_CustomerInformation.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_620">str_Url</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_Url>
              </dr:Verify_CustomerInformation>
              <dr:Verify_SaleItemsInRealTimeTransaction dbl_in_ThirdSaleitemPrice="{x:Null}" str_in_ThirdSaleItemName="{x:Null}" str_in_ThirdSaleItemSKUCode="{x:Null}" sap:VirtualizedContainerService.HintSize="450,764" sap2010:WorkflowViewState.IdRef="Verify_SaleItemsInRealTimeTransaction_2">
                <dr:Verify_SaleItemsInRealTimeTransaction.dbl_in_FirstSaleitemPrice>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_972">dbl_QuickSaleItemPrice</CSharpValue>
                  </InArgument>
                </dr:Verify_SaleItemsInRealTimeTransaction.dbl_in_FirstSaleitemPrice>
                <dr:Verify_SaleItemsInRealTimeTransaction.dbl_in_SaleItemTotalAmount>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_638">dbl_TwoSaleItemTotal</CSharpValue>
                  </InArgument>
                </dr:Verify_SaleItemsInRealTimeTransaction.dbl_in_SaleItemTotalAmount>
                <dr:Verify_SaleItemsInRealTimeTransaction.dbl_in_SecondSaleitemPrice>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_773">dbl_PresetSaleItemPrice</CSharpValue>
                  </InArgument>
                </dr:Verify_SaleItemsInRealTimeTransaction.dbl_in_SecondSaleitemPrice>
                <dr:Verify_SaleItemsInRealTimeTransaction.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_636">int_ReportId</CSharpValue>
                  </InArgument>
                </dr:Verify_SaleItemsInRealTimeTransaction.int_in_ReportId>
                <dr:Verify_SaleItemsInRealTimeTransaction.str_in_FirstSaleItemName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_766">str_QuickSaleItemName</CSharpValue>
                  </InArgument>
                </dr:Verify_SaleItemsInRealTimeTransaction.str_in_FirstSaleItemName>
                <dr:Verify_SaleItemsInRealTimeTransaction.str_in_FirstSaleItemSKUCode>
                  <InArgument x:TypeArguments="x:String" />
                </dr:Verify_SaleItemsInRealTimeTransaction.str_in_FirstSaleItemSKUCode>
                <dr:Verify_SaleItemsInRealTimeTransaction.str_in_SecondSaleItemName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_632">str_PresetSaleItemName</CSharpValue>
                  </InArgument>
                </dr:Verify_SaleItemsInRealTimeTransaction.str_in_SecondSaleItemName>
                <dr:Verify_SaleItemsInRealTimeTransaction.str_in_SecondSaleItemSKUCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_716">str_outSKUCode</CSharpValue>
                  </InArgument>
                </dr:Verify_SaleItemsInRealTimeTransaction.str_in_SecondSaleItemSKUCode>
                <dr:Verify_SaleItemsInRealTimeTransaction.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_635">str_TestId</CSharpValue>
                  </InArgument>
                </dr:Verify_SaleItemsInRealTimeTransaction.str_in_TestId>
                <dr:Verify_SaleItemsInRealTimeTransaction.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_639">str_Url</CSharpValue>
                  </InArgument>
                </dr:Verify_SaleItemsInRealTimeTransaction.str_in_Url>
              </dr:Verify_SaleItemsInRealTimeTransaction>
              <dr:Verify_ReceiptDetails str_in_Invoice="{x:Null}" sap:VirtualizedContainerService.HintSize="450,1554" sap2010:WorkflowViewState.IdRef="Verify_ReceiptDetails_2" bool_in_PrintLogoVerify="True">
                <dr:Verify_ReceiptDetails.bool_in_VerifyQRCode>
                  <InArgument x:TypeArguments="x:Boolean" />
                </dr:Verify_ReceiptDetails.bool_in_VerifyQRCode>
                <dr:Verify_ReceiptDetails.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_640">int_ReportId</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.int_in_ReportId>
                <dr:Verify_ReceiptDetails.str_in_AccountNumber>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_645">str_CardNumber</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_AccountNumber>
                <dr:Verify_ReceiptDetails.str_in_AccountType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_644">str_CardType</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_AccountType>
                <dr:Verify_ReceiptDetails.str_in_ApprovalCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_649">str_AuthorizationCode</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_ApprovalCode>
                <dr:Verify_ReceiptDetails.str_in_CustomerEmail>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_654">str_Email</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_CustomerEmail>
                <dr:Verify_ReceiptDetails.str_in_CustomerPhone>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_653">str_CustPhoneNumber</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_CustomerPhone>
                <dr:Verify_ReceiptDetails.str_in_DiscountAmount>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_646">str_DiscountRateAmount</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_DiscountAmount>
                <dr:Verify_ReceiptDetails.str_in_FooterLin1>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_827">FooterLine1</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_FooterLin1>
                <dr:Verify_ReceiptDetails.str_in_FooterLin2>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_828">Footerline2</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_FooterLin2>
                <dr:Verify_ReceiptDetails.str_in_FooterLin3>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_829">Footerline3</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_FooterLin3>
                <dr:Verify_ReceiptDetails.str_in_MerchantAddress1>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_830">str_MerchantAddress1</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_MerchantAddress1>
                <dr:Verify_ReceiptDetails.str_in_MerchantAddress2>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_831">str_MerchantAddress2</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_MerchantAddress2>
                <dr:Verify_ReceiptDetails.str_in_MerchantCity>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_834">str_MerchantCity</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_MerchantCity>
                <dr:Verify_ReceiptDetails.str_in_MerchantName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_642">str_MerchantName</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_MerchantName>
                <dr:Verify_ReceiptDetails.str_in_MerchantPhone>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_833">str_MerchantPhone</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_MerchantPhone>
                <dr:Verify_ReceiptDetails.str_in_MerchantStateCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_835">str_MerchantStateCode</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_MerchantStateCode>
                <dr:Verify_ReceiptDetails.str_in_MerchantZipCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_832">str_MerchantZipCode</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_MerchantZipCode>
                <dr:Verify_ReceiptDetails.str_in_OrderNote>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_650">str_OrderNote</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_OrderNote>
                <dr:Verify_ReceiptDetails.str_in_Response>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_648">str_TransactionStatus</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_Response>
                <dr:Verify_ReceiptDetails.str_in_SurChargeAmount>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_963">str_outSurcharge</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_SurChargeAmount>
                <dr:Verify_ReceiptDetails.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_641">str_TestId</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_TestId>
                <dr:Verify_ReceiptDetails.str_in_TotalAmount>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_647">dbl_TotalAmount.ToString()</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_TotalAmount>
                <dr:Verify_ReceiptDetails.str_in_TransactionId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_651">str_outPaymentId</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_TransactionId>
                <dr:Verify_ReceiptDetails.str_in_TransactionType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_825">str_PaymentMethod</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_TransactionType>
                <dr:Verify_ReceiptDetails.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_652">str_Url</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_Url>
              </dr:Verify_ReceiptDetails>
              <Sequence sap:VirtualizedContainerService.HintSize="450,4651.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_25">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dr1:SearchTransaction DisplayName="Reports_SearchTransaction" sap:VirtualizedContainerService.HintSize="388,395.3333333333333" sap2010:WorkflowViewState.IdRef="SearchTransaction_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <dr1:SearchTransaction.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_656">int_ReportId</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransaction.int_in_Report_ID>
                  <dr1:SearchTransaction.str_in_CustomerName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1111">str_FirstName</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransaction.str_in_CustomerName>
                  <dr1:SearchTransaction.str_in_MerchantField>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_964">str_MerchantField</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransaction.str_in_MerchantField>
                  <dr1:SearchTransaction.str_in_MerchantIdValue>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_657">str_MID</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransaction.str_in_MerchantIdValue>
                  <dr1:SearchTransaction.str_in_Test_ID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_655">str_TestId</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransaction.str_in_Test_ID>
                  <dr1:SearchTransaction.str_in_URL>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_659">str_Url</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransaction.str_in_URL>
                </dr1:SearchTransaction>
                <dr1:SearchTransactionGridVerification DisplayName="Verify the report sub menu search transaction grid information" sap:VirtualizedContainerService.HintSize="388,711.3333333333334" sap2010:WorkflowViewState.IdRef="SearchTransactionGridVerification_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <dr1:SearchTransactionGridVerification.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_661">int_ReportId</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.int_in_Report_ID>
                  <dr1:SearchTransactionGridVerification.str_in_Amount>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_670">dbl_TotalAmount.ToString()</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_Amount>
                  <dr1:SearchTransactionGridVerification.str_in_AuthorizationCode>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_663">str_AuthorizationCode</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_AuthorizationCode>
                  <dr1:SearchTransactionGridVerification.str_in_FirstName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1112">str_FirstName</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_FirstName>
                  <dr1:SearchTransactionGridVerification.str_in_Last4digits>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_668">str_CardNumber</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_Last4digits>
                  <dr1:SearchTransactionGridVerification.str_in_LastName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1113">str_LastName</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_LastName>
                  <dr1:SearchTransactionGridVerification.str_in_MerchantMID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_664">str_MID</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_MerchantMID>
                  <dr1:SearchTransactionGridVerification.str_in_PaymentType>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_836">str_CardType</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_PaymentType>
                  <dr1:SearchTransactionGridVerification.str_in_Test_ID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_660">str_TestId</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_Test_ID>
                  <dr1:SearchTransactionGridVerification.str_in_TransactionStatus>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_671">str_TransactionStatus</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_TransactionStatus>
                  <dr1:SearchTransactionGridVerification.str_in_TransactionType>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_669">str_PaymentMethod</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_TransactionType>
                  <dr1:SearchTransactionGridVerification.str_in_URL>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_662">str_Url</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_URL>
                </dr1:SearchTransactionGridVerification>
                <dr1:TransactionReportAdvanceSearch sap:VirtualizedContainerService.HintSize="388,395.3333333333333" sap2010:WorkflowViewState.IdRef="TransactionReportAdvanceSearch_2">
                  <dr1:TransactionReportAdvanceSearch.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_673">int_ReportId</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportAdvanceSearch.int_in_Report_ID>
                  <dr1:TransactionReportAdvanceSearch.str_in_MerchantID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_672">str_MID</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportAdvanceSearch.str_in_MerchantID>
                  <dr1:TransactionReportAdvanceSearch.str_in_ReportDetailType>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_965">str_ReportDetailType</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportAdvanceSearch.str_in_ReportDetailType>
                  <dr1:TransactionReportAdvanceSearch.str_in_TestID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_674">str_TestId</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportAdvanceSearch.str_in_TestID>
                  <dr1:TransactionReportAdvanceSearch.str_in_URL>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_675">str_Url</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportAdvanceSearch.str_in_URL>
                </dr1:TransactionReportAdvanceSearch>
                <dr1:TransactionReportTableVerification DisplayName="Verify the transaction report table details" sap:VirtualizedContainerService.HintSize="388,1027.3333333333333" sap2010:WorkflowViewState.IdRef="TransactionReportTableVerification_1">
                  <dr1:TransactionReportTableVerification.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_810">int_ReportId</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.int_in_Report_ID>
                  <dr1:TransactionReportTableVerification.str_in_AccountNumber>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_818">str_CardNumber</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_AccountNumber>
                  <dr1:TransactionReportTableVerification.str_in_Amount>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_816">dbl_TotalAmount.ToString()</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_Amount>
                  <dr1:TransactionReportTableVerification.str_in_ApprovalCode>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_820">str_AuthorizationCode</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_ApprovalCode>
                  <dr1:TransactionReportTableVerification.str_in_FirstName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1114">str_FirstName</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_FirstName>
                  <dr1:TransactionReportTableVerification.str_in_LastName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1115">str_LastName</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_LastName>
                  <dr1:TransactionReportTableVerification.str_in_MerchantMID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_812">str_MID</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_MerchantMID>
                  <dr1:TransactionReportTableVerification.str_in_MerchantName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_811">str_MerchantName</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_MerchantName>
                  <dr1:TransactionReportTableVerification.str_in_PaymentID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_821">str_outPaymentId</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_PaymentID>
                  <dr1:TransactionReportTableVerification.str_in_PaymentType>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_817">str_CardType</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_PaymentType>
                  <dr1:TransactionReportTableVerification.str_in_RecurringID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_846">str_RecurringId</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_RecurringID>
                  <dr1:TransactionReportTableVerification.str_in_RecurringTransaction>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_966">str_RecurringTransaction</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_RecurringTransaction>
                  <dr1:TransactionReportTableVerification.str_in_SubmissionMethod>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1318">str_SubmissionMethod</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_SubmissionMethod>
                  <dr1:TransactionReportTableVerification.str_in_Test_ID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_809">str_TestId</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_Test_ID>
                  <dr1:TransactionReportTableVerification.str_in_TransactionStatus>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_819">str_TransactionStatus</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_TransactionStatus>
                  <dr1:TransactionReportTableVerification.str_in_TransactionType>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_815">str_PaymentMethod</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_TransactionType>
                  <dr1:TransactionReportTableVerification.str_in_URL>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_808">str_Url</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_URL>
                  <dr1:TransactionReportTableVerification.str_in_VaultTransaction>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_967">str_VaultTransaction</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_VaultTransaction>
                </dr1:TransactionReportTableVerification>
                <dr1:SaleItemReport_AdvanceSearch DisplayName="Navigate_SaleItemReport" sap:VirtualizedContainerService.HintSize="388,290" sap2010:WorkflowViewState.IdRef="SaleItemReport_AdvanceSearch_2">
                  <dr1:SaleItemReport_AdvanceSearch.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_693">int_ReportId</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReport_AdvanceSearch.int_in_Report_ID>
                  <dr1:SaleItemReport_AdvanceSearch.str_in_MerchantMID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_690">str_MID</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReport_AdvanceSearch.str_in_MerchantMID>
                  <dr1:SaleItemReport_AdvanceSearch.str_in_TestID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_692">str_TestId</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReport_AdvanceSearch.str_in_TestID>
                  <dr1:SaleItemReport_AdvanceSearch.str_in_URL>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_691">str_Url</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReport_AdvanceSearch.str_in_URL>
                </dr1:SaleItemReport_AdvanceSearch>
                <dr1:SaleItemReportTableVerification sap:VirtualizedContainerService.HintSize="388,1448.6666666666667" sap2010:WorkflowViewState.IdRef="SaleItemReportTableVerification_2">
                  <dr1:SaleItemReportTableVerification.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_696">int_ReportId</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.int_in_Report_ID>
                  <dr1:SaleItemReportTableVerification.str_in_Address>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_702">str_CustomerAddress</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_Address>
                  <dr1:SaleItemReportTableVerification.str_in_Amount>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_700">dbl_TotalAmount.ToString()</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_Amount>
                  <dr1:SaleItemReportTableVerification.str_in_City>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_703">str_CustomerCity</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_City>
                  <dr1:SaleItemReportTableVerification.str_in_Email>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_705">str_Email</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_Email>
                  <dr1:SaleItemReportTableVerification.str_in_FirstName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1116">str_FirstName</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_FirstName>
                  <dr1:SaleItemReportTableVerification.str_in_LastName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1117">str_LastName</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_LastName>
                  <dr1:SaleItemReportTableVerification.str_in_MerchantMID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_697">str_MID</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_MerchantMID>
                  <dr1:SaleItemReportTableVerification.str_in_PaymentMehod>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_706">str_CardType</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_PaymentMehod>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem1>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_769">str_QuickSaleItemName</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem1>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem1ItemPice>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_973">dbl_QuickSaleItemPrice.ToString()</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem1ItemPice>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem1ItemQuantity>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_969">str_SaleItem1ItemQuantity</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem1ItemQuantity>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem1TotalPrice>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1319">dbl_TwoQuickSaleItemPrice.ToString()</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem1TotalPrice>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem2>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_710">str_PresetSaleItemName</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem2>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem2ItemPice>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_711">dbl_PresetSaleItemPrice.ToString()</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem2ItemPice>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem2ItemQuantity>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_971">str_SaleItem2ItemQuantity</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem2ItemQuantity>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem2TotalPrice>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_712">dbl_PresetSaleItemPrice.ToString()</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem2TotalPrice>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem3>
                    <InArgument x:TypeArguments="x:String" />
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem3>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem3ItemPice>
                    <InArgument x:TypeArguments="x:String" />
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem3ItemPice>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem3ItemQuantity>
                    <InArgument x:TypeArguments="x:String" />
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem3ItemQuantity>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem3TotalPrice>
                    <InArgument x:TypeArguments="x:String" />
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem3TotalPrice>
                  <dr1:SaleItemReportTableVerification.str_in_StateCode>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_713">str_CustomerSateCode</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_StateCode>
                  <dr1:SaleItemReportTableVerification.str_in_Test_ID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_695">str_TestId</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_Test_ID>
                  <dr1:SaleItemReportTableVerification.str_in_TransactionID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_701">str_outPaymentId</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_TransactionID>
                  <dr1:SaleItemReportTableVerification.str_in_URL>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_694">str_Url</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_URL>
                  <dr1:SaleItemReportTableVerification.str_in_ZipCode>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_704">str_CustomerZipCode</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_ZipCode>
                </dr1:SaleItemReportTableVerification>
                <dl1:DPP_Logout BreakTriggerScopeInArgument="{x:Null}" DisplayName="DPP Logout" sap:VirtualizedContainerService.HintSize="388,272.6666666666667" sap2010:WorkflowViewState.IdRef="DPP_Logout_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <dl1:DPP_Logout.int_in_ReportId>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_909">int_ReportId</CSharpValue>
                    </InArgument>
                  </dl1:DPP_Logout.int_in_ReportId>
                  <dl1:DPP_Logout.str_in_DppURL>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_911">str_Url</CSharpValue>
                    </InArgument>
                  </dl1:DPP_Logout.str_in_DppURL>
                  <dl1:DPP_Logout.str_in_TestId>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_910">str_TestId</CSharpValue>
                    </InArgument>
                  </dl1:DPP_Logout.str_in_TestId>
                </dl1:DPP_Logout>
              </Sequence>
            </Sequence>
          </Sequence>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="827.3333333333334,23.333333333333332" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="512,180" sap2010:WorkflowViewState.IdRef="Sequence_35">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence sap:VirtualizedContainerService.HintSize="450,107.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_66">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,184.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_14">
                  <ui:LogMessage.Level>
                    <InArgument x:TypeArguments="ui:LogLevel">
                      <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1286">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Level>
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1285">exception.Message</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <cr:failedStep str_in_actualStep="{x:Null}" sap:VirtualizedContainerService.HintSize="354,94" sap2010:WorkflowViewState.IdRef="failedStep_5" str_in_expectedStep="step ">
                  <cr:failedStep.Actual_Result>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1289">exception.Message</CSharpValue>
                    </InArgument>
                  </cr:failedStep.Actual_Result>
                  <cr:failedStep.Expected_Result>
                    <InArgument x:TypeArguments="x:String" />
                  </cr:failedStep.Expected_Result>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <cr:failedStep.str_in_reportId>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1287">int_ReportId</CSharpValue>
                    </InArgument>
                  </cr:failedStep.str_in_reportId>
                  <cr:failedStep.str_in_testId>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1288">str_TestId</CSharpValue>
                    </InArgument>
                  </cr:failedStep.str_in_testId>
                </cr:failedStep>
                <Rethrow sap:VirtualizedContainerService.HintSize="354,65.33333333333333" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
                <dl1:DPP_Logout BreakTriggerScopeInArgument="{x:Null}" sap:VirtualizedContainerService.HintSize="354,272.6666666666667" sap2010:WorkflowViewState.IdRef="DPP_Logout_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <dl1:DPP_Logout.int_in_ReportId>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1290">int_ReportId</CSharpValue>
                    </InArgument>
                  </dl1:DPP_Logout.int_in_ReportId>
                  <dl1:DPP_Logout.str_in_DppURL>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1292">str_Url</CSharpValue>
                    </InArgument>
                  </dl1:DPP_Logout.str_in_DppURL>
                  <dl1:DPP_Logout.str_in_TestId>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1291">str_TestId</CSharpValue>
                    </InArgument>
                  </dl1:DPP_Logout.str_in_TestId>
                </dl1:DPP_Logout>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>