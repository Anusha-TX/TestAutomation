<Activity mc:Ignorable="sap sap2010" x:Class="TC_11024" this:TC_11024.str_in_Dpp_Environment="DPP_Val" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:ca="clr-namespace:CommonLibrary.Asset;assembly=CommonLibrary" xmlns:cr="clr-namespace:CommonLibrary.Report;assembly=CommonLibrary" xmlns:dc="clr-namespace:Deluxe_ReusableLibrary.Customer_Vault;assembly=Deluxe_ReusableLibrary" xmlns:dl="clr-namespace:Deluxe_ReusableLibrary.Login;assembly=Deluxe_ReusableLibrary" xmlns:dl1="clr-namespace:Deluxe_ReusableLibrary.Logout;assembly=Deluxe_ReusableLibrary" xmlns:dp="clr-namespace:Deluxe_ReusableLibrary.Payments;assembly=Deluxe_ReusableLibrary" xmlns:dr="clr-namespace:Deluxe_ReusableLibrary.RealTimeTransaction;assembly=Deluxe_ReusableLibrary" xmlns:dr1="clr-namespace:Deluxe_ReusableLibrary.Reports;assembly=Deluxe_ReusableLibrary" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:ra="clr-namespace:ReporterForUiPath.Activities;assembly=ReporterForUiPath.Activities" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="str_SuiteId" Type="InArgument(x:String)" />
    <x:Property Name="int_ReportId" Type="InArgument(x:Int32)" />
    <x:Property Name="str_TestId" Type="InArgument(x:String)" />
    <x:Property Name="str_in_Dpp_Environment" Type="InArgument(x:String)" />
  </x:Members>
  <this:TC_11024.str_SuiteId>
    <InArgument x:TypeArguments="x:String" />
  </this:TC_11024.str_SuiteId>
  <this:TC_11024.int_ReportId>
    <InArgument x:TypeArguments="x:Int32" />
  </this:TC_11024.int_ReportId>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>814,20819.333333333332</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>TC_10999_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>CommonLibrary.Asset</x:String>
      <x:String>CommonLibrary.Report</x:String>
      <x:String>Deluxe_ReusableLibrary.Customer_Vault</x:String>
      <x:String>Deluxe_ReusableLibrary.Login</x:String>
      <x:String>Deluxe_ReusableLibrary.Logout</x:String>
      <x:String>Deluxe_ReusableLibrary.Payments</x:String>
      <x:String>Deluxe_ReusableLibrary.RealTimeTransaction</x:String>
      <x:String>Deluxe_ReusableLibrary.Reports</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>ReporterForUiPath.Activities</x:String>
      <x:String>ReporterForUiPath.Enums</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Testing</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Core.Activities.DateModifications</x:String>
      <x:String>UiPath.Activities.System.Workflow.Business</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>CommonLibrary</AssemblyReference>
      <AssemblyReference>Deluxe_ReusableLibrary</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.PowerShell.Commands.Diagnostics</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>ReporterForUiPath</AssemblyReference>
      <AssemblyReference>ReporterForUiPath.Activities</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Diagnostics.DiagnosticSource</AssemblyReference>
      <AssemblyReference>System.Diagnostics.EventLog</AssemblyReference>
      <AssemblyReference>System.Diagnostics.FileVersionInfo</AssemblyReference>
      <AssemblyReference>System.Diagnostics.PerformanceCounter</AssemblyReference>
      <AssemblyReference>System.Diagnostics.Process</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TextWriterTraceListener</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TraceSource</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Private.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Windows.Forms.Design</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="TC_11024" sap:VirtualizedContainerService.HintSize="736.6666666666666,20754.666666666668" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="str_QuickSaleItemTaxName" />
      <Variable x:TypeArguments="x:String" Name="str_SearchPresetSaleitemName" />
      <Variable x:TypeArguments="x:String" Name="str_PresetSaleItemPrice2" />
      <Variable x:TypeArguments="x:String" Name="str_PresetSaleItemName2" />
      <Variable x:TypeArguments="x:Double" Name="dbl_PresetSaleItemPrice2" />
      <Variable x:TypeArguments="x:String" Name="str_QuickSaleName" />
      <Variable x:TypeArguments="x:String" Name="str_Frequency" />
      <Variable x:TypeArguments="x:String" Name="str_DiscountRateAmount" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerAddress" />
      <Variable x:TypeArguments="x:String" Name="str_CardExpiry" />
      <Variable x:TypeArguments="x:String" Name="str_CardNumber" />
      <Variable x:TypeArguments="x:String" Name="str_MerchantName" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerState" />
      <Variable x:TypeArguments="x:String" Name="str_PresetSaleItemName" />
      <Variable x:TypeArguments="x:String" Name="str_PaymentMethod" />
      <Variable x:TypeArguments="x:Double" Name="dbl_TotalAmount" />
      <Variable x:TypeArguments="x:Double" Name="dbl_PresetSaleItemTaxRate" />
      <Variable x:TypeArguments="x:Boolean" Name="bool_RemoveSurcharge" />
      <Variable x:TypeArguments="x:String" Name="str_PresetSaleItemPrice" />
      <Variable x:TypeArguments="x:String" Name="str_PaymentType" />
      <Variable x:TypeArguments="x:String" Name="str_QuickSaleItemTaxRate" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerCity" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerZipCode" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerCountryCode" />
      <Variable x:TypeArguments="x:Double" Name="dbl_SaleItemTaxAmount" />
      <Variable x:TypeArguments="x:Double" Name="dbl_TwoSaleItemTotal" />
      <Variable x:TypeArguments="x:String" Name="str_QuickSaleItemName" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_TestData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_TestCaseData" />
      <Variable x:TypeArguments="x:String" Name="str_OrderNote" />
      <Variable x:TypeArguments="x:Double" Name="dbl_QuickSaleItemPrice" />
      <Variable x:TypeArguments="x:String" Name="str_CardType" />
      <Variable x:TypeArguments="x:String" Name="str_RecurringId" />
      <Variable x:TypeArguments="x:String" Name="str_outStartDate" />
      <Variable x:TypeArguments="x:String" Name="str_outEndDate" />
      <Variable x:TypeArguments="x:String" Name="str_SaleItemTaxRateAmount" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerSateCode" />
      <Variable x:TypeArguments="x:String" Name="str_OS_SurCharge" />
      <Variable x:TypeArguments="x:String" Name="str_FirstSaleItemName" />
      <Variable x:TypeArguments="x:String" Name="str_TaxAmoount" />
      <Variable x:TypeArguments="x:String" Name="str_SurchargeAmount" />
      <Variable x:TypeArguments="x:String" Name="str_AuthorizationCode" />
      <Variable x:TypeArguments="x:String" Name="str_MID" />
      <Variable x:TypeArguments="x:String" Name="str_TransactionStatus" />
      <Variable x:TypeArguments="x:String" Name="str_QuickSaleItemName2" />
      <Variable x:TypeArguments="x:Double" Name="dbl_QuickSaleItemPrice2" />
      <Variable x:TypeArguments="x:Double" Name="dbl_QuickSaleItemTaxRate2" />
      <Variable x:TypeArguments="x:String" Name="str_QuickSaleItemTaxName2" />
      <Variable x:TypeArguments="x:Double" Name="dbl_QuickSaleItemTaxRate" />
      <Variable x:TypeArguments="x:String" Name="str_outSKUCode" />
      <Variable x:TypeArguments="x:Double" Name="dbl_PresetSaleItemPrice" />
      <Variable x:TypeArguments="x:String" Name="str_CustPhoneNumber" />
      <Variable x:TypeArguments="x:String" Name="str_TotalAmount" />
      <Variable x:TypeArguments="x:String" Name="str_Email" />
      <Variable x:TypeArguments="x:String" Name="str_SearchPresetSaleitemName2" />
      <Variable x:TypeArguments="x:String" Default="D:\Deluxe_Reports" Name="Report_Location" />
      <Variable x:TypeArguments="x:Double" Name="dbl_QuickSaleItemTaxAmount" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_OS_SaleItemDataTable" />
      <Variable x:TypeArguments="x:Double" Name="dbl_SaleItemTaxAmount2" />
      <Variable x:TypeArguments="x:Double" Name="dbl_TotalTaxAmount" />
      <Variable x:TypeArguments="x:String" Name="str_CustomerCountry" />
      <Variable x:TypeArguments="x:String" Name="str_DiscountRateOption" />
      <Variable x:TypeArguments="x:String" Name="str_InvoiceNumber" />
      <Variable x:TypeArguments="x:String" Name="str_outFirstName" />
      <Variable x:TypeArguments="x:String" Name="str_outLastName" />
      <Variable x:TypeArguments="x:String" Default="Footer Line2" Name="Footerline2" />
      <Variable x:TypeArguments="x:String" Default="FT WORTH" Name="str_MerchantCity" />
      <Variable x:TypeArguments="x:String" Default="100 Throckmorton St" Name="str_MerchantAddress1" />
      <Variable x:TypeArguments="x:String" Default="Suite 1800" Name="str_MerchantAddress2" />
      <Variable x:TypeArguments="x:String" Default="76102" Name="str_MerchantStateCode" />
      <Variable x:TypeArguments="x:String" Default="76102" Name="str_MerchantZipCode" />
      <Variable x:TypeArguments="x:String" Default="+1-8888888888" Name="str_MerchantPhone" />
      <Variable x:TypeArguments="x:String" Default="Thank you for your business!" Name="FooterLine1" />
      <Variable x:TypeArguments="x:String" Name="str_outInvoiceNumber" />
      <Variable x:TypeArguments="x:String" Name="str_FrequencyOption" />
      <Variable x:TypeArguments="x:String" Name="ExcelPath" />
      <Variable x:TypeArguments="x:String" Name="ReportPath" />
      <Variable x:TypeArguments="x:String" Name="str_BrowserValue" />
      <Variable x:TypeArguments="x:String" Name="str_ProcessingFee" />
      <Variable x:TypeArguments="x:String" Name="str_SubmissionMethod" />
      <Variable x:TypeArguments="x:String" Name="str_MerchantField" />
      <Variable x:TypeArguments="x:String" Name="str_ReportDetailType" />
      <Variable x:TypeArguments="x:String" Name="str_RecurringTransaction" />
      <Variable x:TypeArguments="x:String" Name="str_VaultTransaction" />
      <Variable x:TypeArguments="x:String" Default="Footer Line3" Name="Footerline3" />
      <Variable x:TypeArguments="x:String" Name="str_PartOfRecurring" />
      <Variable x:TypeArguments="x:String" Name="str_RecurringStatus" />
      <Variable x:TypeArguments="x:String" Default="Skip" Name="str_Action" />
      <Variable x:TypeArguments="x:String" Name="str_SaleItem1ItemQuantity" />
      <Variable x:TypeArguments="x:String" Name="str_SaleItem2ItemQuantity" />
      <Variable x:TypeArguments="x:Double" Name="dbl_TwoQuickSaleItemPrice" />
      <Variable x:TypeArguments="x:String" Name="str_SaleItemQuantity" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="674.6666666666666,20644" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Variables>
        <Variable x:TypeArguments="x:String" Default="https://payments2.deluxe.com/gateway/*" Name="str_Url" />
      </TryCatch.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="636,20406.666666666668" sap2010:WorkflowViewState.IdRef="Sequence_35">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Extract dynamic Report and TestData Path" sap:VirtualizedContainerService.HintSize="574,83.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_37">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="File_Path" />
              <Variable x:TypeArguments="x:String" Name="Report_Path" />
              <Variable x:TypeArguments="x:String" Name="FilePath_OP" />
              <Variable x:TypeArguments="x:String" Name="ReportPath_OP" />
              <Variable x:TypeArguments="njl:JObject" Name="ExcelFilePathJ" />
              <Variable x:TypeArguments="njl:JObject" Name="ReportFilePathJ" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="434,125.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_13">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_187">File_Path</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Config\ExcelPath.json</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,125.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_14">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_188">Report_Path</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Config\Reportpath.json</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ReadTextFile File="{x:Null}" DisplayName="Read Text File" sap:VirtualizedContainerService.HintSize="434,122" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
              <ui:ReadTextFile.Content>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_189">FilePath_OP</CSharpReference>
                </OutArgument>
              </ui:ReadTextFile.Content>
              <ui:ReadTextFile.FileName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_858">File_Path</CSharpValue>
                </InArgument>
              </ui:ReadTextFile.FileName>
            </ui:ReadTextFile>
            <ui:ReadTextFile File="{x:Null}" DisplayName="Read Text File" sap:VirtualizedContainerService.HintSize="434,122" sap2010:WorkflowViewState.IdRef="ReadTextFile_2">
              <ui:ReadTextFile.Content>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_190">ReportPath_OP</CSharpReference>
                </OutArgument>
              </ui:ReadTextFile.Content>
              <ui:ReadTextFile.FileName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_859">Report_Path</CSharpValue>
                </InArgument>
              </ui:ReadTextFile.FileName>
            </ui:ReadTextFile>
            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="434,100" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1">
              <ui:DeserializeJson.JsonObject>
                <OutArgument x:TypeArguments="njl:JObject">
                  <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_191">ExcelFilePathJ</CSharpReference>
                </OutArgument>
              </ui:DeserializeJson.JsonObject>
              <ui:DeserializeJson.JsonString>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_860">FilePath_OP</CSharpValue>
                </InArgument>
              </ui:DeserializeJson.JsonString>
            </ui:DeserializeJson>
            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="434,100" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2">
              <ui:DeserializeJson.JsonObject>
                <OutArgument x:TypeArguments="njl:JObject">
                  <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_192">ReportFilePathJ</CSharpReference>
                </OutArgument>
              </ui:DeserializeJson.JsonObject>
              <ui:DeserializeJson.JsonString>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_861">ReportPath_OP</CSharpValue>
                </InArgument>
              </ui:DeserializeJson.JsonString>
            </ui:DeserializeJson>
            <Assign sap:VirtualizedContainerService.HintSize="434,125.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_15">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_193">ExcelPath</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_862">Path.Combine(Environment.CurrentDirectory,ExcelFilePathJ.SelectToken("Excel_path").ToString())</CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,108" sap2010:WorkflowViewState.IdRef="Assign_16">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_194">ReportPath</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_863">System.IO.Path.Combine(Environment.CurrentDirectory, ReportFilePathJ.SelectToken("Report_path").ToString())</CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <If sap:VirtualizedContainerService.HintSize="574,405.3333333333333" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_912">int_ReportId.Equals(0) == true</CSharpValue>
              </InArgument>
            </If.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="376,222" sap2010:WorkflowViewState.IdRef="Sequence_40">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ra:CreateReport ContinueOnError="{x:Null}" DisplayName="Create Report" sap:VirtualizedContainerService.HintSize="334,134.66666666666666" sap2010:WorkflowViewState.IdRef="CreateReport_2" ReportName="TC_11024">
                  <ra:CreateReport.ReportLocation>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_910">ReportPath</CSharpValue>
                    </InArgument>
                  </ra:CreateReport.ReportLocation>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ra:CreateReport.isCreated>
                    <OutArgument x:TypeArguments="x:Int32">
                      <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_84">int_ReportId</CSharpReference>
                    </OutArgument>
                  </ra:CreateReport.isCreated>
                </ra:CreateReport>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,100.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_41">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <ra:StartSuite ContinueOnError="{x:Null}" DisplayName="Start Suite" sap:VirtualizedContainerService.HintSize="574,86" sap2010:WorkflowViewState.IdRef="StartSuite_2" SuiteName="Payments_Recurring">
            <ra:StartSuite.ReportId>
              <InArgument x:TypeArguments="x:Int32">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_404">int_ReportId</CSharpValue>
              </InArgument>
            </ra:StartSuite.ReportId>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ra:StartSuite.suiteId>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_185">str_SuiteId</CSharpReference>
              </OutArgument>
            </ra:StartSuite.suiteId>
          </ra:StartSuite>
          <ra:StartTest ContinueOnError="{x:Null}" TagName="{x:Null}" TestDescription="{x:Null}" DisplayName="Start Test" sap:VirtualizedContainerService.HintSize="574,86" sap2010:WorkflowViewState.IdRef="StartTest_4" Priority="High" TestName="TC_11032_WeeklyMasterRecurforNewCustomer">
            <ra:StartTest.ReportId>
              <InArgument x:TypeArguments="x:Int32">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_405">int_ReportId</CSharpValue>
              </InArgument>
            </ra:StartTest.ReportId>
            <ra:StartTest.SuiteId>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_838">str_SuiteId</CSharpValue>
              </InArgument>
            </ra:StartTest.SuiteId>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ra:StartTest.testId>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_183">str_TestId</CSharpReference>
              </OutArgument>
            </ra:StartTest.testId>
          </ra:StartTest>
          <Sequence DisplayName="Read Test Data Sequence" sap:VirtualizedContainerService.HintSize="574,83.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_18">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadRange Range="{x:Null}" AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="388,128" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="Payments">
              <ui:ReadRange.DataTable>
                <OutArgument x:TypeArguments="sd:DataTable">
                  <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_87">dt_TestData</CSharpReference>
                </OutArgument>
              </ui:ReadRange.DataTable>
              <ui:ReadRange.WorkbookPath>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_911">ExcelPath</CSharpValue>
                </InArgument>
              </ui:ReadRange.WorkbookPath>
            </ui:ReadRange>
            <ui:FilterDataTable DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="388,202.66666666666666" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" SelectColumnsMode="Remove">
              <ui:FilterDataTable.DataTable>
                <InArgument x:TypeArguments="sd:DataTable">
                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_409">dt_TestData</CSharpValue>
                </InArgument>
              </ui:FilterDataTable.DataTable>
              <ui:FilterDataTable.Filters>
                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                  <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                    <ui:FilterOperationArgument.Column>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_407">"TestCaseId"</CSharpValue>
                      </InArgument>
                    </ui:FilterOperationArgument.Column>
                    <ui:FilterOperationArgument.Operand>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_970">"TC_11032"</CSharpValue>
                      </InArgument>
                    </ui:FilterOperationArgument.Operand>
                  </ui:FilterOperationArgument>
                </scg:List>
              </ui:FilterDataTable.Filters>
              <ui:FilterDataTable.OutputDataTable>
                <OutArgument x:TypeArguments="sd:DataTable">
                  <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_88">dt_TestCaseData</CSharpReference>
                </OutArgument>
              </ui:FilterDataTable.OutputDataTable>
              <ui:FilterDataTable.SelectColumns>
                <scg:List x:TypeArguments="InArgument" Capacity="4">
                  <x:Null />
                </scg:List>
              </ui:FilterDataTable.SelectColumns>
            </ui:FilterDataTable>
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="388,76" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,161.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_21">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="434,76.66666666666667" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="64">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_55">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_152">str_PaymentMethod</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_718">CurrentRow["PaymentMethod"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_56">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_153">str_MerchantName</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_719">CurrentRow["MerchantName"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_57">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_154">str_TotalAmount</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_720">CurrentRow["TotalAmount"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_58">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_155">str_Email</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_721">CurrentRow["Email"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_59">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_156">str_CustPhoneNumber</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_722">CurrentRow["Phone"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_60">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_157">str_PaymentType</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_723">CurrentRow["PaymentType"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_61">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_158">str_CardNumber</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_724">CurrentRow["CardNumber"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_62">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_159">str_CardExpiry</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_725">CurrentRow["CardExpiry"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_63">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_160">str_CardType</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_726">CurrentRow["CardType"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_64">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_184">str_QuickSaleItemName</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_727">CurrentRow["QuickSaleItemName"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_65">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Double">
                                <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_162">dbl_QuickSaleItemPrice</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Double">
                                <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_728">Convert.ToDouble(CurrentRow["QuickSaleItemPrice"].ToString())</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_66">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_163">str_QuickSaleItemTaxName</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_729">CurrentRow["QuickSaleItemTax"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_67">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_164">str_SearchPresetSaleitemName</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_730">CurrentRow["PresetSaleItem"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_68">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_165">str_CustomerAddress</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_731">CurrentRow["CustomerAddress"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_69">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_166">str_CustomerState</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_732">CurrentRow["CustomerState"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_70">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_167">str_CustomerCity</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_733">CurrentRow["CustomerCity"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_71">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_168">str_CustomerZipCode</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_734">CurrentRow["CustomerZipCode"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_72">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_169">str_CustomerCountry</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_735">CurrentRow["CustomerCountry"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_73">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_170">str_CustomerCountryCode</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_736">CurrentRow["CountryCode"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_74">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_171">str_OrderNote</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_737">CurrentRow["OrderNote"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_75">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_172">str_DiscountRateOption</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_738">CurrentRow["DiscountRate"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_77">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_178">str_InvoiceNumber</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_740">CurrentRow["InvoiceNumber"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_78">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_196">str_Frequency</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_871">CurrentRow["Frequency"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_79">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_199">str_SubmissionMethod</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_884">CurrentRow["SubmissionMethod"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_80">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_200">str_ProcessingFee</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_885">CurrentRow["ProcessingFee"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_81">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_201">str_MerchantAddress1</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_886">CurrentRow["MerchantAddress1"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_82">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_202">str_MerchantAddress2</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_887">CurrentRow["MerchanrAddress2"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_83">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_203">str_MerchantZipCode</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_888">CurrentRow["MerchantZipCode"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_84">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_204">str_MerchantPhone</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_889">CurrentRow["MerchantPhone"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_85">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_205">str_MerchantCity</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_890">CurrentRow["MerchantCity"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_86">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_206">str_MerchantStateCode</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_891">CurrentRow["MerchantStateCode"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_87">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_207">FooterLine1</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_892">CurrentRow["FooterLine1"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_88">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_208">Footerline2</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_893">CurrentRow["FooterLine2"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_89">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_209">str_MerchantField</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_894">CurrentRow["MerchantField"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_90">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_210">str_ReportDetailType</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_895">CurrentRow["ReportType"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_91">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_211">str_RecurringTransaction</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_896">CurrentRow["RecurringTransaction"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_92">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_212">str_VaultTransaction</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_897">CurrentRow["VaultTransaction"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_93">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_213">str_PartOfRecurring</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_898">CurrentRow["PartOfRecurring"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_94">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_214">Footerline3</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_899">CurrentRow["FooterLine3"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_95">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_216">str_RecurringStatus</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_921">CurrentRow["RecurringStatuse"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_96">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_217">str_SaleItem1ItemQuantity</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_922">CurrentRow["SaleItem1ItemQuantity"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_97">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_218">str_SaleItem2ItemQuantity</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_923">CurrentRow["SaleItem2ItemQuantity"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_98">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_225">str_SaleItemQuantity</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_971">CurrentRow["SaleItemQuantity"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:MultipleAssign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <ui:ForEachRow.DataTable>
                <InArgument x:TypeArguments="sd:DataTable">
                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_410">dt_TestCaseData</CSharpValue>
                </InArgument>
              </ui:ForEachRow.DataTable>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachRow>
          </Sequence>
          <Sequence DisplayName="Pre condition" sap:VirtualizedContainerService.HintSize="574,6104.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_19">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <dl:DPP_Login BreakTriggerScopeInArgument="{x:Null}" sap:VirtualizedContainerService.HintSize="450,403.3333333333333" sap2010:WorkflowViewState.IdRef="DPP_Login_3" bool_in_MerchantLogin="False">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dl:DPP_Login.int_in_ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_867">int_ReportId</CSharpValue>
                </InArgument>
              </dl:DPP_Login.int_in_ReportId>
              <dl:DPP_Login.str_in_Dpp_Environment>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_987">str_in_Dpp_Environment</CSharpValue>
                </InArgument>
              </dl:DPP_Login.str_in_Dpp_Environment>
              <dl:DPP_Login.str_in_ExcelPath>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_988">ExcelPath</CSharpValue>
                </InArgument>
              </dl:DPP_Login.str_in_ExcelPath>
              <dl:DPP_Login.str_in_TestId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_866">str_TestId</CSharpValue>
                </InArgument>
              </dl:DPP_Login.str_in_TestId>
              <dl:DPP_Login.str_out_DppURL>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_195">str_Url</CSharpReference>
                </OutArgument>
              </dl:DPP_Login.str_out_DppURL>
            </dl:DPP_Login>
            <dp:PaymentsCreation BreakTriggerScopeInArgument="{x:Null}" str_in_ExistingCustomerName="{x:Null}" DisplayName="Payments creation (PaymentsCreation)" sap:VirtualizedContainerService.HintSize="450,1235.3333333333333" sap2010:WorkflowViewState.IdRef="PaymentsCreation_3" bool_in_CreateValutCustomer="False">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dp:PaymentsCreation.int_in_reportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_445">int_ReportId</CSharpValue>
                </InArgument>
              </dp:PaymentsCreation.int_in_reportId>
              <dp:PaymentsCreation.str_in_ACH_AccountNickName>
                <InArgument x:TypeArguments="x:String" />
              </dp:PaymentsCreation.str_in_ACH_AccountNickName>
              <dp:PaymentsCreation.str_in_ACH_AccountNumber>
                <InArgument x:TypeArguments="x:String" />
              </dp:PaymentsCreation.str_in_ACH_AccountNumber>
              <dp:PaymentsCreation.str_in_ACH_AccountType>
                <InArgument x:TypeArguments="x:String" />
              </dp:PaymentsCreation.str_in_ACH_AccountType>
              <dp:PaymentsCreation.str_in_ACH_RoutingNumber>
                <InArgument x:TypeArguments="x:String" />
              </dp:PaymentsCreation.str_in_ACH_RoutingNumber>
              <dp:PaymentsCreation.str_in_CardExpiration>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_442">str_CardExpiry</CSharpValue>
                </InArgument>
              </dp:PaymentsCreation.str_in_CardExpiration>
              <dp:PaymentsCreation.str_in_CardNumber>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_441">str_CardNumber</CSharpValue>
                </InArgument>
              </dp:PaymentsCreation.str_in_CardNumber>
              <dp:PaymentsCreation.str_in_Cash_AmountTender>
                <InArgument x:TypeArguments="x:String" />
              </dp:PaymentsCreation.str_in_Cash_AmountTender>
              <dp:PaymentsCreation.str_in_CheckNumber>
                <InArgument x:TypeArguments="x:String" />
              </dp:PaymentsCreation.str_in_CheckNumber>
              <dp:PaymentsCreation.str_in_CustEmail>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_438">str_Email</CSharpValue>
                </InArgument>
              </dp:PaymentsCreation.str_in_CustEmail>
              <dp:PaymentsCreation.str_in_CustPhoneNumber>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_439">str_CustPhoneNumber</CSharpValue>
                </InArgument>
              </dp:PaymentsCreation.str_in_CustPhoneNumber>
              <dp:PaymentsCreation.str_in_MerchantName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_443">str_MerchantName</CSharpValue>
                </InArgument>
              </dp:PaymentsCreation.str_in_MerchantName>
              <dp:PaymentsCreation.str_in_PaymentMethod>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_436">str_PaymentMethod</CSharpValue>
                </InArgument>
              </dp:PaymentsCreation.str_in_PaymentMethod>
              <dp:PaymentsCreation.str_in_PaymentType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_440">str_PaymentType</CSharpValue>
                </InArgument>
              </dp:PaymentsCreation.str_in_PaymentType>
              <dp:PaymentsCreation.str_in_TransactionAmount_Total>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_437">str_TotalAmount</CSharpValue>
                </InArgument>
              </dp:PaymentsCreation.str_in_TransactionAmount_Total>
              <dp:PaymentsCreation.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_446">str_Url</CSharpValue>
                </InArgument>
              </dp:PaymentsCreation.str_in_Url>
              <dp:PaymentsCreation.str_in_testId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_799">str_TestId</CSharpValue>
                </InArgument>
              </dp:PaymentsCreation.str_in_testId>
              <dp:PaymentsCreation.str_io_CustFirstName>
                <InOutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_182">str_outFirstName</CSharpReference>
                </InOutArgument>
              </dp:PaymentsCreation.str_io_CustFirstName>
              <dp:PaymentsCreation.str_io_CustLastName>
                <InOutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_179">str_outLastName</CSharpReference>
                </InOutArgument>
              </dp:PaymentsCreation.str_io_CustLastName>
              <dp:PaymentsCreation.str_out_MID>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_116">str_MID</CSharpReference>
                </OutArgument>
              </dp:PaymentsCreation.str_out_MID>
            </dp:PaymentsCreation>
            <dp:AddQuickSaleItem DisplayName="Add quick sale item 1" sap:VirtualizedContainerService.HintSize="450,403.3333333333333" sap2010:WorkflowViewState.IdRef="AddQuickSaleItem_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dp:AddQuickSaleItem.dbl_out_SaleItemTaxRate>
                <OutArgument x:TypeArguments="x:Double">
                  <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_117">dbl_QuickSaleItemTaxRate</CSharpReference>
                </OutArgument>
              </dp:AddQuickSaleItem.dbl_out_SaleItemTaxRate>
              <dp:AddQuickSaleItem.int_in_ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_450">int_ReportId</CSharpValue>
                </InArgument>
              </dp:AddQuickSaleItem.int_in_ReportId>
              <dp:AddQuickSaleItem.str_in_SaleItemName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_800">str_QuickSaleItemName</CSharpValue>
                </InArgument>
              </dp:AddQuickSaleItem.str_in_SaleItemName>
              <dp:AddQuickSaleItem.str_in_SaleItemPrice>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_448">dbl_QuickSaleItemPrice.ToString()</CSharpValue>
                </InArgument>
              </dp:AddQuickSaleItem.str_in_SaleItemPrice>
              <dp:AddQuickSaleItem.str_in_SaleItemTaxName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_451">str_QuickSaleItemTaxName</CSharpValue>
                </InArgument>
              </dp:AddQuickSaleItem.str_in_SaleItemTaxName>
              <dp:AddQuickSaleItem.str_in_TestId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_449">str_TestId</CSharpValue>
                </InArgument>
              </dp:AddQuickSaleItem.str_in_TestId>
              <dp:AddQuickSaleItem.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_452">str_Url</CSharpValue>
                </InArgument>
              </dp:AddQuickSaleItem.str_in_Url>
            </dp:AddQuickSaleItem>
            <dp:AddPresetSaleItem DisplayName="AddPresetSaleItem 2" sap:VirtualizedContainerService.HintSize="450,455.3333333333333" sap2010:WorkflowViewState.IdRef="AddPresetSaleItem_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dp:AddPresetSaleItem.dbl_out_PresetSaleItemTaxRate>
                <OutArgument x:TypeArguments="x:Double">
                  <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_120">dbl_PresetSaleItemTaxRate</CSharpReference>
                </OutArgument>
              </dp:AddPresetSaleItem.dbl_out_PresetSaleItemTaxRate>
              <dp:AddPresetSaleItem.int_in_ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_460">int_ReportId</CSharpValue>
                </InArgument>
              </dp:AddPresetSaleItem.int_in_ReportId>
              <dp:AddPresetSaleItem.str_in_SearchSaleItem>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_459">str_SearchPresetSaleitemName</CSharpValue>
                </InArgument>
              </dp:AddPresetSaleItem.str_in_SearchSaleItem>
              <dp:AddPresetSaleItem.str_in_TestId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_461">str_TestId</CSharpValue>
                </InArgument>
              </dp:AddPresetSaleItem.str_in_TestId>
              <dp:AddPresetSaleItem.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_462">str_Url</CSharpValue>
                </InArgument>
              </dp:AddPresetSaleItem.str_in_Url>
              <dp:AddPresetSaleItem.str_out_PresetItemName>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_121">str_PresetSaleItemName</CSharpReference>
                </OutArgument>
              </dp:AddPresetSaleItem.str_out_PresetItemName>
              <dp:AddPresetSaleItem.str_out_SKUCode>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_141">str_outSKUCode</CSharpReference>
                </OutArgument>
              </dp:AddPresetSaleItem.str_out_SKUCode>
              <dp:AddPresetSaleItem.str_out_SaleItemPrice>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_119">str_PresetSaleItemPrice</CSharpReference>
                </OutArgument>
              </dp:AddPresetSaleItem.str_out_SaleItemPrice>
            </dp:AddPresetSaleItem>
            <Assign sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">
                  <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_150">dbl_PresetSaleItemPrice</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">
                  <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_463">Convert.ToDouble(str_PresetSaleItemPrice)</CSharpValue>
                </InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <dp:CustomerInfo DisplayName="Customer info (CustomerInfo)" sap:VirtualizedContainerService.HintSize="450,53.333333333333336" sap2010:WorkflowViewState.IdRef="CustomerInfo_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dp:CustomerInfo.int_in_ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_470">int_ReportId</CSharpValue>
                </InArgument>
              </dp:CustomerInfo.int_in_ReportId>
              <dp:CustomerInfo.str_in_CustomerAddress>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_465">str_CustomerAddress</CSharpValue>
                </InArgument>
              </dp:CustomerInfo.str_in_CustomerAddress>
              <dp:CustomerInfo.str_in_CustomerCity>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_466">str_CustomerCity</CSharpValue>
                </InArgument>
              </dp:CustomerInfo.str_in_CustomerCity>
              <dp:CustomerInfo.str_in_CustomerDefaultCountry>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_468">str_CustomerCountry</CSharpValue>
                </InArgument>
              </dp:CustomerInfo.str_in_CustomerDefaultCountry>
              <dp:CustomerInfo.str_in_CustomerState>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_464">str_CustomerState</CSharpValue>
                </InArgument>
              </dp:CustomerInfo.str_in_CustomerState>
              <dp:CustomerInfo.str_in_CustomerZipCode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_467">str_CustomerZipCode</CSharpValue>
                </InArgument>
              </dp:CustomerInfo.str_in_CustomerZipCode>
              <dp:CustomerInfo.str_in_TestId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_801">str_TestId</CSharpValue>
                </InArgument>
              </dp:CustomerInfo.str_in_TestId>
              <dp:CustomerInfo.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_471">str_Url</CSharpValue>
                </InArgument>
              </dp:CustomerInfo.str_in_Url>
              <dp:CustomerInfo.str_out_CustomerStateCode>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_123">str_CustomerSateCode</CSharpReference>
                </OutArgument>
              </dp:CustomerInfo.str_out_CustomerStateCode>
            </dp:CustomerInfo>
            <dp:AdditionalFields str_in_CustomerTaxExempt="{x:Null}" str_out_TaxRatePercentage="{x:Null}" DisplayName="Additional fields (AdditionalFields)" sap:VirtualizedContainerService.HintSize="450,53.333333333333336" sap2010:WorkflowViewState.IdRef="AdditionalFields_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dp:AdditionalFields.int_in_ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_475">int_ReportId</CSharpValue>
                </InArgument>
              </dp:AdditionalFields.int_in_ReportId>
              <dp:AdditionalFields.str_in_DiscountRate>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_473">str_DiscountRateOption</CSharpValue>
                </InArgument>
              </dp:AdditionalFields.str_in_DiscountRate>
              <dp:AdditionalFields.str_in_InvoiceNumber>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_741">str_InvoiceNumber</CSharpValue>
                </InArgument>
              </dp:AdditionalFields.str_in_InvoiceNumber>
              <dp:AdditionalFields.str_in_OrderNote>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_472">str_OrderNote</CSharpValue>
                </InArgument>
              </dp:AdditionalFields.str_in_OrderNote>
              <dp:AdditionalFields.str_in_TaxRateListName>
                <InArgument x:TypeArguments="x:String" />
              </dp:AdditionalFields.str_in_TaxRateListName>
              <dp:AdditionalFields.str_in_TestId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_802">str_TestId</CSharpValue>
                </InArgument>
              </dp:AdditionalFields.str_in_TestId>
              <dp:AdditionalFields.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_476">str_Url</CSharpValue>
                </InArgument>
              </dp:AdditionalFields.str_in_Url>
              <dp:AdditionalFields.str_out_DiscountRateAmount>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_124">str_DiscountRateAmount</CSharpReference>
                </OutArgument>
              </dp:AdditionalFields.str_out_DiscountRateAmount>
            </dp:AdditionalFields>
            <Assign DisplayName="Assign Add two Sale Item Prices" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_10">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">
                  <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_125">dbl_TwoSaleItemTotal</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">
                  <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_742">dbl_QuickSaleItemPrice+dbl_PresetSaleItemPrice</CSharpValue>
                </InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <dp:StartDate_DatePicker argument1="{x:Null}" DisplayName="StartDate DatePicker" sap:VirtualizedContainerService.HintSize="450,351.3333333333333" sap2010:WorkflowViewState.IdRef="StartDate_DatePicker_1">
              <dp:StartDate_DatePicker.Str_InputStartDate>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_984">DateTime.Now.ToString("MMMM d, yyyy")</CSharpValue>
                </InArgument>
              </dp:StartDate_DatePicker.Str_InputStartDate>
              <dp:StartDate_DatePicker.int_in_ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_982">int_ReportId</CSharpValue>
                </InArgument>
              </dp:StartDate_DatePicker.int_in_ReportId>
              <dp:StartDate_DatePicker.str_in_TestId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_983">str_TestId</CSharpValue>
                </InArgument>
              </dp:StartDate_DatePicker.str_in_TestId>
              <dp:StartDate_DatePicker.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_981">str_Url</CSharpValue>
                </InArgument>
              </dp:StartDate_DatePicker.str_in_Url>
              <dp:StartDate_DatePicker.str_out_StartDate>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_227">str_outStartDate</CSharpReference>
                </OutArgument>
              </dp:StartDate_DatePicker.str_out_StartDate>
            </dp:StartDate_DatePicker>
            <dp:EndDate_DatePicker sap:VirtualizedContainerService.HintSize="450,299.3333333333333" sap2010:WorkflowViewState.IdRef="EndDate_DatePicker_1">
              <dp:EndDate_DatePicker.Str_InputEndDate>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_931">DateTime.Now.AddDays(7).ToString("MMMM d, yyyy")</CSharpValue>
                </InArgument>
              </dp:EndDate_DatePicker.Str_InputEndDate>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dp:EndDate_DatePicker.int_in_ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_483">int_ReportId</CSharpValue>
                </InArgument>
              </dp:EndDate_DatePicker.int_in_ReportId>
              <dp:EndDate_DatePicker.str_Out_EndDate>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_127">str_outEndDate</CSharpReference>
                </OutArgument>
              </dp:EndDate_DatePicker.str_Out_EndDate>
              <dp:EndDate_DatePicker.str_in_TestId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_484">str_TestId</CSharpValue>
                </InArgument>
              </dp:EndDate_DatePicker.str_in_TestId>
              <dp:EndDate_DatePicker.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_482">str_Url</CSharpValue>
                </InArgument>
              </dp:EndDate_DatePicker.str_in_Url>
            </dp:EndDate_DatePicker>
            <dp:Frequency_Option str_in_AnnuallyMonth="{x:Null}" str_in_AnnuallyOptions="{x:Null}" DisplayName="Frequency Option" sap:VirtualizedContainerService.HintSize="450,53.333333333333336" sap2010:WorkflowViewState.IdRef="Frequency_Option_2">
              <dp:Frequency_Option.Dpp_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_839">str_Url</CSharpValue>
                </InArgument>
              </dp:Frequency_Option.Dpp_Url>
              <dp:Frequency_Option.Frequency>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_932">str_Frequency</CSharpValue>
                </InArgument>
              </dp:Frequency_Option.Frequency>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dp:Frequency_Option.str_in_BiWeeklyOptions>
                <InArgument x:TypeArguments="x:String" />
              </dp:Frequency_Option.str_in_BiWeeklyOptions>
              <dp:Frequency_Option.str_in_Frequency>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_840">str_Frequency</CSharpValue>
                </InArgument>
              </dp:Frequency_Option.str_in_Frequency>
              <dp:Frequency_Option.str_in_MonthlyOptions>
                <InArgument x:TypeArguments="x:String" />
              </dp:Frequency_Option.str_in_MonthlyOptions>
              <dp:Frequency_Option.str_in_WeeklyOptions>
                <InArgument x:TypeArguments="x:String" />
              </dp:Frequency_Option.str_in_WeeklyOptions>
              <dp:Frequency_Option.str_in_reportid>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_842">int_ReportId</CSharpValue>
                </InArgument>
              </dp:Frequency_Option.str_in_reportid>
              <dp:Frequency_Option.str_in_testid>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_843">str_TestId</CSharpValue>
                </InArgument>
              </dp:Frequency_Option.str_in_testid>
            </dp:Frequency_Option>
            <Sequence DisplayName="Sequence for verify empty option field" sap:VirtualizedContainerService.HintSize="450,83.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_46">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ca:ReadAssetValue sap:VirtualizedContainerService.HintSize="450,235.33333333333334" sap2010:WorkflowViewState.IdRef="ReadAssetValue_2" str_in_AssetName="BrowserValue" str_in_Orch_FolderPath="DPP_TestAutomation">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ca:ReadAssetValue.str_out_AssetValue>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_219">str_BrowserValue</CSharpReference>
                  </OutArgument>
                </ca:ReadAssetValue.str_out_AssetValue>
              </ca:ReadAssetValue>
              <uix:NApplicationCard AttachMode="ByInstance" DisplayName="Use Browser Chrome: Payments" sap:VirtualizedContainerService.HintSize="450,554.6666666666666" sap2010:WorkflowViewState.IdRef="NApplicationCard_2" InteractionMode="DebuggerApi" ScopeGuid="f0e3c822-16b0-4cee-a5a8-c0627d236402" Version="V2">
                <uix:NApplicationCard.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,364.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_43">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="str_VerifyLastDateField" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <uix:NGetText DisplayName="Get Text 'DIV'" sap:VirtualizedContainerService.HintSize="354,198.66666666666666" sap2010:WorkflowViewState.IdRef="NGetText_1" ScopeIdentifier="f0e3c822-16b0-4cee-a5a8-c0627d236402" Version="V3">
                        <uix:NGetText.Target>
                          <uix:TargetAnchorable BrowserURL="https://payments2.deluxe.com/gateway/virtual-terminal" DesignTimeRectangle="363, 570, 473, 43" DesignTimeScaleFactor="1.2000000476837158" FullSelectorArgument="&lt;webctrl aaname='Options' class='dpp-label' parentid='collapsePaymentInfoArea' tag='LABEL' /&gt;&lt;nav up='1' /&gt;&lt;webctrl parentid='collapsePaymentInfoArea' tag='DIV' parentclass='ngx-select__selected ng-star-inserted' /&gt;" FuzzySelectorArgument="&lt;webctrl type='' parentid='collapsePaymentInfoArea' tag='DIV' class='ngx-select__toggle btn form-control' aaname='' /&gt;" Guid="435cefa1-605f-402f-a0db-1fa6003a10d0" ImageBase64="" InformativeScreenshot="bae5bac20cc6ce14ad57aba801d381e3.png" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Payments' /&gt;" SearchSteps="Selector" Version="V2" Visibility="Interactive" />
                        </uix:NGetText.Target>
                        <uix:NGetText.TextString>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_220">str_VerifyLastDateField</CSharpReference>
                          </OutArgument>
                        </uix:NGetText.TextString>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </uix:NGetText>
                      <If sap:VirtualizedContainerService.HintSize="354,78.66666666666667" sap2010:WorkflowViewState.IdRef="If_2">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_933">string.IsNullOrEmpty( str_VerifyLastDateField)</CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,462.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_44">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <cr:passedStep str_in_actualStep="{x:Null}" Actual_Result="Able to view the Option field was empty" Expected_Result="Option field should be an empty." sap:VirtualizedContainerService.HintSize="354,378" sap2010:WorkflowViewState.IdRef="passedStep_1" str_in_expectedStep="Step">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <cr:passedStep.str_in_reportId>
                                <InArgument x:TypeArguments="x:Int32">
                                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_934">int_ReportId</CSharpValue>
                                </InArgument>
                              </cr:passedStep.str_in_reportId>
                              <cr:passedStep.str_in_testId>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_935">str_TestId</CSharpValue>
                                </InArgument>
                              </cr:passedStep.str_in_testId>
                            </cr:passedStep>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,462.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_45">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <cr:failedStep str_in_actualStep="{x:Null}" Actual_Result="Failed to view the Option field was empty" Expected_Result="Option field should be an empty." sap:VirtualizedContainerService.HintSize="354,378" sap2010:WorkflowViewState.IdRef="failedStep_3" str_in_expectedStep="Step">
                              <cr:failedStep.str_in_reportId>
                                <InArgument x:TypeArguments="x:Int32">
                                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_936">int_ReportId</CSharpValue>
                                </InArgument>
                              </cr:failedStep.str_in_reportId>
                              <cr:failedStep.str_in_testId>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_937">str_TestId</CSharpValue>
                                </InArgument>
                              </cr:failedStep.str_in_testId>
                            </cr:failedStep>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </uix:NApplicationCard.Body>
                <uix:NApplicationCard.TargetApp>
                  <uix:TargetApp Area="-11, -11, 1942, 1030" BrowserType="Chrome" IconBase64="iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAA0/SURBVGhDvZcJUFRXFkDbiIa4gbgACtgsKqsgqIgoiyjgCpkklk4iMktFrcnEylbJxBh0JlZMooK4YBR3TTIaxZhMJovaScS44RZRiCINihDHSANuYLfvzr1v+fyGdksyc6tO3fvue93/vNf/N43ht4jOTm1dJ3u4Zf6jn3f2ujD/gqJhA8xlIyIsl0cOgssjB0NZ3EDLkZhQc0Fkf9M/+npnp/RwTfdybm/s3MXFZeKTUzOW5O/YueubM6UHS+oaiF2m0yVL8rcXTHjimam0Rl7mtw2Snu7tPqsgop9JiYqsqxPVWPBTYhSnOj0ZyvK3sB/O37xz6uIduBdF527cenVudk63Hu7u8tK/Lkj8FWOvrHMjwmsvJ0YxLpYQaZ9JHKGs7xGVL8xixWcbHMreiwNnLPWJyWlpUuOXxStGTxRXtwYJ0Yk2y/FefCRTJ12DdU38QD6uxvnzuSvh1AWbQ8EH4YcLNjb9+dlvtMGQSg8WdL/uGRRynE6TQ4ItshLlOQFzQqSE1kSBefZsh1K/hPRJmX+QavePSe7dp50dHm7RBFGKC2qiellJfCRUE3EDWXVcBKucOR1OVTQ5lMFT5dyrbsmx8sbbMXGjR0vFu8fLfTyylKwSU6dLciJHiIxzNM/lsVcdP1DmSCjdudehiJAU9YlKGxRX3eFQLebFGv1rFPTNJTUdx0s+Hln601Uy4mRlHYeSmC+NkMJUY4/gc8jFCaPuc9/b4CTOl10GKCq3cqimHs05fg3fGOvh7ukpde1jknu3adVcSnc7yLEQlYIyC+kI2oioh4czlc/Pe8uhAEGne6LCBucuM8j97Ar0zijiLPvXFd6jubt9AsSkqdNnSOXmoAe2JCaslguiNEmQqP5UhTTKclGRq1TNNxEBVZiJki8PM0cXJ05WWqEYT7mo/Db0QnHD2P0cr8wiOGa24hr8dHCNo9cSKzd//oXUbo5D0cFmu1MkIaqlkD7zOnYAU7Iaw4lwnk/9WOfw4nSy+g14PHMEDKmFHI+pR3iP5mjN3T6F70/X1kltES96u2dpp0joxO0FSU4HbaJF76LMp8pvtbqwEqJ8FE/afAVg7Z5aCJpxHDkB6/daeI/m9Gv170EcLbvZKNUNhvbdOxjfeyGh+TRR6iLCN6AJNdc0x7NiWBirSo2F+jV50HjsCFirLwFFcYuLKkiIKP8PwL6SRlj15VWYmVeBVMKqr65CYWkjn1PrHL2H3SdgnBG5Pm59OhwbO1g7PXtBKRw7QKLqcKh5MpVLO4rS6tYXJiH6qvyx5g7M+6gGuk8+JG6fMRKsu08+DG9trcE1+DDjWkeboB+AXL59tw7GyA9+B1HIzLeSNbELeKr20oILiphQZsl5B+40NEhdEdUWBp+daILVpkb4tqT1Q0j39ekqGxw81wSdnjzIhZ0fP2AH9bo8dZCvobWOHmbtb4FbnE9mxJY0NnBLOkRueRw+fypaCoYxnocpwrg01ZWY6/JXSGURnx5vghnrr8PgrDoYMree59e33Wh1YTrN0/gHa/+PTeD/52PQbcph6PH0ETuoR3O0htY6+gS0r9HA+YnHIzanMZKnjWS8mypkpXTlUJLGrIgJg9qcBVKbTvwOTF8nxAfNrYPByCCqkQnZrX95ChlxW5DgPrzfC0ub7KAezenXtnyf3t5GI799wjdNZOG4gYGb0yECobxseiyrHBrC8KS5MNUVclyVnszUbUPyJKmEiag3m6HxBwda/w5SPyHOXCLYXbBfq8d8dje4dnzE1dAlyj0tYlMatCR2zUQ4HRfGKqJJnDYRCpQrooPZtc92cnmKZ9deQ1GLDhRH6Uhdb/ziejiGf1XVxdVpUn4Q9K8hii/cgluHEiFjjEumodfvQ7LDN04EQRrPtIEBGyewBX8doUmbo0PAPDQEqh5PluoAu/CeJ1HHiE0oZm2+rgn8Wn4+8SpYvw+ERc/3zDH4vxZjGrBhIoRtmMD0mwjbMJ5R/9DoCODykquL35b6AOMW1cPAOZZmUNRu3IK/77zpUOhhqCleCtb9/Zl1fyBsf9trpyFoYZJ5wIYJ4Iiw9ePZlPlJzDw4iJUj5iHBcOvoYS5fWmODCJQiSE7V96YW/ph/DQ6fb/1A3o/TlfVgOfYsyvdF+b7Mtr8fnP/Y12wIXT+ODViPwkgYZzyvqU819XalDeQbKMcNqId375nbEI5CnDdkRkhUZH1P37fAyAUW2FjY6FDUEfTA3joYB9bCAGYt7MuzbX8AXPm3r8UQtm48hK5DWcx3Iyk3FcoHBbLzUf0Zt8fI23sLBqC4Qsna9RzUfLOynrS8HuYV3IBvS638rzJ93xdXNkBpeRmUn93LaoqXQH3RFCBZa6EfsxX6g60wgI95jdkQsm4sC0VJe8ZB6FoE65C1Y1kwkvOnoXA+KlDbwIo9NzU5PWH3GLecUz16LxUk2iyr8BPs96d5sO7zxU8AM9aGoGUpluC1Y1gICSNUUw5ZM5aPqR+8ZgwbkpcKJ2OD8UdaFb/QzmONEDa7FkJnX+WZRHjW1y2yWhtKPV1/D96OPKz1XIpkrfuMuBFfHPvKDWCNPZ5FzXuGgHcTzCRJBKGoJo5ZQX3itVmxcLPoEL/WJfwDRkICIeeYlnOt15ZU2/h7sroDXMqGciTYjA+jXnPfhxFlW3ubDV5/iSwIzh+Lpyxkg/PH2NVB+amM4H1cV/TxKn4xisz8eghBgRCUEvnhSV5YJ98N4M75eSjXB0XtQVmwfueN0gTWcrw7191k8JgcnC3khCzfjBwTgatTcAOUUxkxOTtNXg6g4GgTBL9+FYJRhIM1SfHefVDrCo42yncDsB2OQUEvPG0SpOxF0iTLxyJLsL/oOZccg0tM70yS5KKrU4Hgm1mtED2BGB+qPikvCTBtdQMEoYiCpIJe/1kT1c/Zr7mKr62X74K3z+VtSlTSG4V7IZS9wMZ7NMZ6n2DicOc0Q9vHnFy53KpU6L8qmW8ikNe4Kcx6qEdrkj6cBg1N1/mFq2rvwKh3LRCI0iQe+DeRm+urWo/WqN6o9yxQhc8RRUPjdTz9aJIVot968pqyTZ85veS8JzO6tzXyn9PeLw02Ba5KkaIp0P/9ZJTH8fuqJ/p8LHvzv8/jF6egTWTgaZJcK+QG9EzFtfQaFXVn8d7nUiTnwTjfeVJPN/bATXjiBkX/aH7341yewjXJZ1Z/FFP0WzmaNY+T7fp8bqXoLS3aJBVE7ChqhJHv1EI/lOyPqKyYuqoOdujueYrtJ9dArYluD01YhztK68cCGzI1xXma1DcYHnF2cg3ITrT0RTmCC0pJyv0kNEdZ36NPgm4BfZRcssHXp5sg9+sbsHT3DdzYLbsTp2hovAbz9+fBtl1BKNWTThmzu6zdUZJqRU8c9wTrNz0YQXPa7aPCbbxflpLql4eyeaNYv7zRWCPYC5DjgBWY5bivnI/f/DTbXvqlVLt/HLx0AuI3Pc3i8+NQFsUU33RHQUQb9+BIeaQbbQDWvNp5ndRuDvoU/BYm1CqxvisQyrweZTcmaW1Mc3KcsOkZmF+YxwUvNvwkdYHX1Ms9vBGi1qaL1+LrKr7GbxVNrDtmQlebqLab4/i4P2J/+iq6jvPLwhPmF/BfkcQ0cZ4VYuy/nOb5J6LV1A9YLqCeymJe3xvJXvkgEmXc8HYgMTcSFZKmrrIm3Owzzr2Z6ZwldR2H92vRx5WEQskHLE+S6OdbjvU9tT4J/JaN5PJUR+YlQMVX+DBKKS5oIkk37IlsNbky3jN1xTGCuezDLuVS8+7h5OZs9H0vzuK/LAkUdFF9JhmRE5kSoyxI5HOKlmP/ZSMhe2sgynVFWRJzZbdNLjgmXGXPhVG+vbcL7xFXPu1iMd7t1mkZnYd4ZPouTWSEuqgA66WYCRz7YW5eI+ZorPUxU61/3fD3Y6VUs5yoXaSwC1i13JlhzXNabLt0qfdg4TbGby5d3BG+uQmapNbPTWy1TmHE9fQaYusO/KlMYkrQ1AXFRRaynVC6M21KgPWcjEfnSq2HC9cxxiwuhggJkQklZlyCdS5tKpGjzcuxysTkNYO4kB6biWTte9a9HRnv7+0Eb05rd++H9n7RIbR7us+C4RYU1UR8lyRCnyXxKB/PqFY9X1xDfYLG9Br9uOILfChRjsTs6Yh0wH5HuL3nMWZFruzqYMlIccqUGr8unLo6G73ejDZzwRwUz5EZx1wS6z45cYiY09Dm49iLG0KFHBftACTJxUVP5D2PUYYjq5yPG93bPNgD+zDhktonS4n5oJQxJ56L+mRTLbKq+2SLOSJ2+VA8ffx2IVEhK3HWpK17HmVXPmlvmZPh9Mvu9wcN+jS6Tem/jkRJUo/3ohF8A97ZI/gc1ry/+p/4byAKojBJC3Y/qtVXPmlXOyejbZZrxzau8jL/+6CNdBrsken5ctRxEufCi+M0RC8Ohi0bSvLNkPju9gyB3YvbmZ57ou2s/6u4o6DN0MPumu6X3WNmmKnXG0PMtAmvhcPZR9t64wk7Wc5ucTJ/PM+pYOHMttlTU9pM+22kDYb/Amt8e8f/SRClAAAAAElFTkSuQmCC" InformativeScreenshot="02b4ff2e39dde94e0e4150b34bf51dfa.jpg" Title="Payments">
                    <uix:TargetApp.Selector>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_938">string.Format("&lt;html app='{0}' title='Payments' /&gt;", str_BrowserValue)</CSharpValue>
                      </InArgument>
                    </uix:TargetApp.Selector>
                    <uix:TargetApp.Url>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_939">str_Url</CSharpValue>
                      </InArgument>
                    </uix:TargetApp.Url>
                  </uix:TargetApp>
                </uix:NApplicationCard.TargetApp>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </uix:NApplicationCard>
            </Sequence>
            <dp:OrderSummary bool_in_TaxAmountIncluded="{x:Null}" dbl_in_ThirdSaleItemTaxRate="{x:Null}" dbl_in_ThirdSaleitemPrice="{x:Null}" str_in_AmountTendered="{x:Null}" str_in_ThirdSaleItem="{x:Null}" str_out_Surcharge="{x:Null}" DisplayName="Order summary (OrderSummary)" sap:VirtualizedContainerService.HintSize="450,53.333333333333336" sap2010:WorkflowViewState.IdRef="OrderSummary_6" bool_in_RemoveSurcharge="False">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dp:OrderSummary.dbl_in_DiscountRateAmount>
                <InArgument x:TypeArguments="x:Double">
                  <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_759">Convert.ToDouble(str_DiscountRateAmount)</CSharpValue>
                </InArgument>
              </dp:OrderSummary.dbl_in_DiscountRateAmount>
              <dp:OrderSummary.dbl_in_FirstSaleItemTaxRate>
                <InArgument x:TypeArguments="x:Double">
                  <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_760">dbl_QuickSaleItemTaxRate</CSharpValue>
                </InArgument>
              </dp:OrderSummary.dbl_in_FirstSaleItemTaxRate>
              <dp:OrderSummary.dbl_in_FirstSaleitemPrice>
                <InArgument x:TypeArguments="x:Double">
                  <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_795">dbl_QuickSaleItemPrice</CSharpValue>
                </InArgument>
              </dp:OrderSummary.dbl_in_FirstSaleitemPrice>
              <dp:OrderSummary.dbl_in_SaleItemTotalAmount>
                <InArgument x:TypeArguments="x:Double">
                  <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_744">dbl_TwoSaleItemTotal</CSharpValue>
                </InArgument>
              </dp:OrderSummary.dbl_in_SaleItemTotalAmount>
              <dp:OrderSummary.dbl_in_SecondSaleItemTaxRate>
                <InArgument x:TypeArguments="x:Double">
                  <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_761">dbl_PresetSaleItemTaxRate</CSharpValue>
                </InArgument>
              </dp:OrderSummary.dbl_in_SecondSaleItemTaxRate>
              <dp:OrderSummary.dbl_in_SecondSaleitemPrice>
                <InArgument x:TypeArguments="x:Double">
                  <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_763">dbl_PresetSaleItemPrice</CSharpValue>
                </InArgument>
              </dp:OrderSummary.dbl_in_SecondSaleitemPrice>
              <dp:OrderSummary.dbl_out_TotalAmount>
                <OutArgument x:TypeArguments="x:Double">
                  <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_175">dbl_TotalAmount</CSharpReference>
                </OutArgument>
              </dp:OrderSummary.dbl_out_TotalAmount>
              <dp:OrderSummary.int_in_ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_746">int_ReportId</CSharpValue>
                </InArgument>
              </dp:OrderSummary.int_in_ReportId>
              <dp:OrderSummary.str_in_CardType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_748">str_CardType</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_CardType>
              <dp:OrderSummary.str_in_CustomerAddress>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_751">str_CustomerAddress</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_CustomerAddress>
              <dp:OrderSummary.str_in_CustomerCity>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_752">str_CustomerCity</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_CustomerCity>
              <dp:OrderSummary.str_in_CustomerCountryCode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_755">str_CustomerCountryCode</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_CustomerCountryCode>
              <dp:OrderSummary.str_in_CustomerSateCode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_753">str_CustomerSateCode</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_CustomerSateCode>
              <dp:OrderSummary.str_in_CustomerZipCode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_754">str_CustomerZipCode</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_CustomerZipCode>
              <dp:OrderSummary.str_in_FirstName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_793">str_outFirstName</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_FirstName>
              <dp:OrderSummary.str_in_FirstSaleItem>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_804">str_QuickSaleItemName</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_FirstSaleItem>
              <dp:OrderSummary.str_in_Last4Digits>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_765">str_CardNumber</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_Last4Digits>
              <dp:OrderSummary.str_in_LastName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_797">str_outLastName</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_LastName>
              <dp:OrderSummary.str_in_OrderNote>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_747">str_OrderNote</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_OrderNote>
              <dp:OrderSummary.str_in_PaymentType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_764">str_PaymentType</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_PaymentType>
              <dp:OrderSummary.str_in_SecondSaleItem>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_757">str_PresetSaleItemName</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_SecondSaleItem>
              <dp:OrderSummary.str_in_TestId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_803">str_TestId</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_TestId>
              <dp:OrderSummary.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_756">str_Url</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_Url>
              <dp:OrderSummary.str_out_TaxAmount>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_176">str_TaxAmoount</CSharpReference>
                </OutArgument>
              </dp:OrderSummary.str_out_TaxAmount>
            </dp:OrderSummary>
            <dp:EditSaleitemQuantityInOrderSummary sap:VirtualizedContainerService.HintSize="450,53.333333333333336" sap2010:WorkflowViewState.IdRef="EditSaleitemQuantityInOrderSummary_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dp:EditSaleitemQuantityInOrderSummary.int_in_ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_945">int_ReportId</CSharpValue>
                </InArgument>
              </dp:EditSaleitemQuantityInOrderSummary.int_in_ReportId>
              <dp:EditSaleitemQuantityInOrderSummary.str_in_SaleItemName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_942">str_QuickSaleItemName</CSharpValue>
                </InArgument>
              </dp:EditSaleitemQuantityInOrderSummary.str_in_SaleItemName>
              <dp:EditSaleitemQuantityInOrderSummary.str_in_SaleItemQuantity>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_943">str_SaleItemQuantity</CSharpValue>
                </InArgument>
              </dp:EditSaleitemQuantityInOrderSummary.str_in_SaleItemQuantity>
              <dp:EditSaleitemQuantityInOrderSummary.str_in_TestId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_944">str_TestId</CSharpValue>
                </InArgument>
              </dp:EditSaleitemQuantityInOrderSummary.str_in_TestId>
              <dp:EditSaleitemQuantityInOrderSummary.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_941">str_Url</CSharpValue>
                </InArgument>
              </dp:EditSaleitemQuantityInOrderSummary.str_in_Url>
            </dp:EditSaleitemQuantityInOrderSummary>
            <Assign DisplayName="Assign Add two Sale Item Price" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_18">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">
                  <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_222">dbl_TwoSaleItemTotal</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">
                  <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_946">dbl_QuickSaleItemPrice+dbl_PresetSaleItemPrice+dbl_QuickSaleItemPrice</CSharpValue>
                </InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_19">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">
                  <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_226">dbl_TwoQuickSaleItemPrice</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">
                  <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_972">dbl_QuickSaleItemPrice+dbl_QuickSaleItemPrice</CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="450,91.33333333333333" sap2010:WorkflowViewState.IdRef="Delay_7" />
            <dp:OrderSummary bool_in_TaxAmountIncluded="{x:Null}" dbl_in_ThirdSaleItemTaxRate="{x:Null}" dbl_in_ThirdSaleitemPrice="{x:Null}" str_in_AmountTendered="{x:Null}" str_in_ThirdSaleItem="{x:Null}" str_out_Surcharge="{x:Null}" DisplayName="Order summary (OrderSummary)" sap:VirtualizedContainerService.HintSize="450,53.333333333333336" sap2010:WorkflowViewState.IdRef="OrderSummary_7" bool_in_RemoveSurcharge="False">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dp:OrderSummary.dbl_in_DiscountRateAmount>
                <InArgument x:TypeArguments="x:Double">
                  <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_962">Convert.ToDouble(str_DiscountRateAmount)</CSharpValue>
                </InArgument>
              </dp:OrderSummary.dbl_in_DiscountRateAmount>
              <dp:OrderSummary.dbl_in_FirstSaleItemTaxRate>
                <InArgument x:TypeArguments="x:Double">
                  <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_963">dbl_QuickSaleItemTaxRate</CSharpValue>
                </InArgument>
              </dp:OrderSummary.dbl_in_FirstSaleItemTaxRate>
              <dp:OrderSummary.dbl_in_FirstSaleitemPrice>
                <InArgument x:TypeArguments="x:Double">
                  <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_974">dbl_TwoQuickSaleItemPrice</CSharpValue>
                </InArgument>
              </dp:OrderSummary.dbl_in_FirstSaleitemPrice>
              <dp:OrderSummary.dbl_in_SaleItemTotalAmount>
                <InArgument x:TypeArguments="x:Double">
                  <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_947">dbl_TwoSaleItemTotal</CSharpValue>
                </InArgument>
              </dp:OrderSummary.dbl_in_SaleItemTotalAmount>
              <dp:OrderSummary.dbl_in_SecondSaleItemTaxRate>
                <InArgument x:TypeArguments="x:Double">
                  <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_964">dbl_PresetSaleItemTaxRate</CSharpValue>
                </InArgument>
              </dp:OrderSummary.dbl_in_SecondSaleItemTaxRate>
              <dp:OrderSummary.dbl_in_SecondSaleitemPrice>
                <InArgument x:TypeArguments="x:Double">
                  <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_966">dbl_PresetSaleItemPrice</CSharpValue>
                </InArgument>
              </dp:OrderSummary.dbl_in_SecondSaleitemPrice>
              <dp:OrderSummary.dbl_out_TotalAmount>
                <OutArgument x:TypeArguments="x:Double">
                  <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_223">dbl_TotalAmount</CSharpReference>
                </OutArgument>
              </dp:OrderSummary.dbl_out_TotalAmount>
              <dp:OrderSummary.int_in_ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_949">int_ReportId</CSharpValue>
                </InArgument>
              </dp:OrderSummary.int_in_ReportId>
              <dp:OrderSummary.str_in_CardType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_951">str_CardType</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_CardType>
              <dp:OrderSummary.str_in_CustomerAddress>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_954">str_CustomerAddress</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_CustomerAddress>
              <dp:OrderSummary.str_in_CustomerCity>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_955">str_CustomerCity</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_CustomerCity>
              <dp:OrderSummary.str_in_CustomerCountryCode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_958">str_CustomerCountryCode</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_CustomerCountryCode>
              <dp:OrderSummary.str_in_CustomerSateCode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_956">str_CustomerSateCode</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_CustomerSateCode>
              <dp:OrderSummary.str_in_CustomerZipCode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_957">str_CustomerZipCode</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_CustomerZipCode>
              <dp:OrderSummary.str_in_FirstName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_952">str_outFirstName</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_FirstName>
              <dp:OrderSummary.str_in_FirstSaleItem>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_961">str_QuickSaleItemName</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_FirstSaleItem>
              <dp:OrderSummary.str_in_Last4Digits>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_968">str_CardNumber</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_Last4Digits>
              <dp:OrderSummary.str_in_LastName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_953">str_outLastName</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_LastName>
              <dp:OrderSummary.str_in_OrderNote>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_950">str_OrderNote</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_OrderNote>
              <dp:OrderSummary.str_in_PaymentType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_967">str_CardType</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_PaymentType>
              <dp:OrderSummary.str_in_SecondSaleItem>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_960">str_PresetSaleItemName</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_SecondSaleItem>
              <dp:OrderSummary.str_in_TestId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_948">str_TestId</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_TestId>
              <dp:OrderSummary.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_959">str_Url</CSharpValue>
                </InArgument>
              </dp:OrderSummary.str_in_Url>
              <dp:OrderSummary.str_out_TaxAmount>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_224">str_TaxAmoount</CSharpReference>
                </OutArgument>
              </dp:OrderSummary.str_out_TaxAmount>
            </dp:OrderSummary>
            <dp:CloseOrderSummary DisplayName="Close order summary (CloseOrderSummary)" sap:VirtualizedContainerService.HintSize="450,195.33333333333334" sap2010:WorkflowViewState.IdRef="CloseOrderSummary_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dp:CloseOrderSummary.int_in_ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_544">int_ReportId</CSharpValue>
                </InArgument>
              </dp:CloseOrderSummary.int_in_ReportId>
              <dp:CloseOrderSummary.str_in_TestId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_805">str_TestId</CSharpValue>
                </InArgument>
              </dp:CloseOrderSummary.str_in_TestId>
              <dp:CloseOrderSummary.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_543">str_Url</CSharpValue>
                </InArgument>
              </dp:CloseOrderSummary.str_in_Url>
            </dp:CloseOrderSummary>
            <dp:VerifyChargeButtonAmount DisplayName="Verify charge button amount (VerifyChargeButtonAmount)" sap:VirtualizedContainerService.HintSize="450,247.33333333333334" sap2010:WorkflowViewState.IdRef="VerifyChargeButtonAmount_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dp:VerifyChargeButtonAmount.dbl_in_ExpectedTotalAmount>
                <InArgument x:TypeArguments="x:Double">
                  <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_548">dbl_TotalAmount</CSharpValue>
                </InArgument>
              </dp:VerifyChargeButtonAmount.dbl_in_ExpectedTotalAmount>
              <dp:VerifyChargeButtonAmount.int_in_reportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_547">int_ReportId</CSharpValue>
                </InArgument>
              </dp:VerifyChargeButtonAmount.int_in_reportId>
              <dp:VerifyChargeButtonAmount.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_549">str_Url</CSharpValue>
                </InArgument>
              </dp:VerifyChargeButtonAmount.str_in_Url>
              <dp:VerifyChargeButtonAmount.str_in_testId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_806">str_TestId</CSharpValue>
                </InArgument>
              </dp:VerifyChargeButtonAmount.str_in_testId>
            </dp:VerifyChargeButtonAmount>
            <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="450,91.33333333333333" sap2010:WorkflowViewState.IdRef="Delay_8" />
            <dp:VerifyTransactionSuccessAndAuthorizationCode str_in_Email="{x:Null}" str_in_Phone="{x:Null}" DisplayName="ClickOnChargeButtonAndVerifySuccess (VerifyTransactionSuccessAndAuthorizationCode)" sap:VirtualizedContainerService.HintSize="450,455.3333333333333" sap2010:WorkflowViewState.IdRef="VerifyTransactionSuccessAndAuthorizationCode_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dp:VerifyTransactionSuccessAndAuthorizationCode.int_in_ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_551">int_ReportId</CSharpValue>
                </InArgument>
              </dp:VerifyTransactionSuccessAndAuthorizationCode.int_in_ReportId>
              <dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_PaymentType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_550">str_PaymentType</CSharpValue>
                </InArgument>
              </dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_PaymentType>
              <dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_TestId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_807">str_TestId</CSharpValue>
                </InArgument>
              </dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_TestId>
              <dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_553">str_Url</CSharpValue>
                </InArgument>
              </dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_Url>
              <dp:VerifyTransactionSuccessAndAuthorizationCode.str_out_AuthorizationCode>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_135">str_AuthorizationCode</CSharpReference>
                </OutArgument>
              </dp:VerifyTransactionSuccessAndAuthorizationCode.str_out_AuthorizationCode>
              <dp:VerifyTransactionSuccessAndAuthorizationCode.str_out_TransactionStatus>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_136">str_TransactionStatus</CSharpReference>
                </OutArgument>
              </dp:VerifyTransactionSuccessAndAuthorizationCode.str_out_TransactionStatus>
            </dp:VerifyTransactionSuccessAndAuthorizationCode>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="450,143.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_8">
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_554">"Tran Status "+str_TransactionStatus</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
          </Sequence>
          <Sequence DisplayName="TC_11024" sap:VirtualizedContainerService.HintSize="574,12897.333333333334" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ra:StartTest ContinueOnError="{x:Null}" TagName="{x:Null}" TestDescription="{x:Null}" DisplayName="Start Test" sap:VirtualizedContainerService.HintSize="512,86" sap2010:WorkflowViewState.IdRef="StartTest_2" Priority="High" TestName="TC_11024_VerifyWeeklyRecurinCustomerVault">
              <ra:StartTest.ReportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_276">int_ReportId</CSharpValue>
                </InArgument>
              </ra:StartTest.ReportId>
              <ra:StartTest.SuiteId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_844">str_SuiteId</CSharpValue>
                </InArgument>
              </ra:StartTest.SuiteId>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ra:StartTest.testId>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_181">str_TestId</CSharpReference>
                </OutArgument>
              </ra:StartTest.testId>
            </ra:StartTest>
            <Sequence DisplayName="TC_11023" sap:VirtualizedContainerService.HintSize="512,12660.666666666666" sap2010:WorkflowViewState.IdRef="Sequence_22">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="str_outRecurringId" />
                <Variable x:TypeArguments="x:String" Name="str_outPaymentId" />
                <Variable x:TypeArguments="x:String" Name="str_outCustomerId" />
                <Variable x:TypeArguments="x:String" Name="str_CustomerName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence sap:VirtualizedContainerService.HintSize="450,2917.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_26">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ca:ReadAssetValue sap:VirtualizedContainerService.HintSize="388,53.333333333333336" sap2010:WorkflowViewState.IdRef="ReadAssetValue_1" str_in_AssetName="BrowserValue" str_in_Orch_FolderPath="DPP_TestAutomation">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ca:ReadAssetValue.str_out_AssetValue>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_198">str_BrowserValue</CSharpReference>
                    </OutArgument>
                  </ca:ReadAssetValue.str_out_AssetValue>
                </ca:ReadAssetValue>
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="388,53.333333333333336" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,161.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_47">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <uix:NApplicationCard AttachMode="ByInstance" DisplayName="Use Browser Chrome: Customer Vault" sap:VirtualizedContainerService.HintSize="354,76.66666666666667" sap2010:WorkflowViewState.IdRef="NApplicationCard_1" InteractionMode="DebuggerApi" ScopeGuid="14dbc44b-bde7-4d35-a291-43a16ededf25" Version="V2">
                        <uix:NApplicationCard.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,921.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_39">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click 'Customer Vault'" sap:VirtualizedContainerService.HintSize="354,199.33333333333334" sap2010:WorkflowViewState.IdRef="NClick_1" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="14dbc44b-bde7-4d35-a291-43a16ededf25" Version="V3">
                                <uix:NClick.Target>
                                  <uix:TargetAnchorable BrowserURL="https://payments2.deluxe.com/gateway/customervault" CvTextArea="69, 510, 121, 16" CvTextArgument="Customer Vault" CvType="Text" DesignTimeRectangle="72, 504, 216, 30" DesignTimeScaleFactor="1.2000000476837158" ElementType="Text" FullSelectorArgument="&lt;webctrl parentid='menuCustomervault' tag='SPAN' /&gt;" FuzzySelectorArgument="&lt;webctrl parentid='menuCustomervault' tag='SPAN' type='' class='hide-menu' aaname='Customer Vault' check:innerText='Customer Vault' /&gt;" Guid="9d46eed8-6dfa-4b91-96e3-558cd7b4ae11" InformativeScreenshot="7c201485ffe148c7b383fddf1f329bf0.png" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Customer Vault' /&gt;" SearchSteps="Selector" Version="V2" Visibility="Interactive" />
                                </uix:NClick.Target>
                              </uix:NClick>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,187.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_9">
                                <ui:LogMessage.Level>
                                  <InArgument x:TypeArguments="ui:LogLevel">
                                    <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_873">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Level>
                                <ui:LogMessage.Message>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_872">"Clicked on Customer vault"</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Message>
                              </ui:LogMessage>
                              <uix:NTypeInto ActivateBefore="True" ClickBeforeMode="Single" DisplayName="Type Into 'INPUT'" EmptyFieldMode="SingleLine" sap:VirtualizedContainerService.HintSize="354,262.6666666666667" sap2010:WorkflowViewState.IdRef="NTypeInto_1" ScopeIdentifier="14dbc44b-bde7-4d35-a291-43a16ededf25" Version="V3">
                                <uix:NTypeInto.Target>
                                  <uix:TargetAnchorable BrowserURL="https://payments2.deluxe.com/gateway/customervault" CvElementArea="341, 485, 1076, 46" CvType="InputBox" DesignTimeRectangle="341, 488, 1076, 42" DesignTimeScaleFactor="1.2000000476837158" ElementType="InputBox" FullSelectorArgument="&lt;webctrl tag='INPUT' /&gt;" FuzzySelectorArgument="&lt;webctrl tag='INPUT' type='text' class='form-control ng-untouched ng-pristine ng-valid' aaname='' /&gt;" Guid="5a8629d8-3e2d-4869-9742-868218872436" InformativeScreenshot="d05070e81f241055330e083a9b9bc562.png" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Customer Vault' /&gt;" SearchSteps="Selector" Version="V2" Visibility="Interactive" />
                                </uix:NTypeInto.Target>
                                <uix:NTypeInto.Text>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_882">str_outFirstName</CSharpValue>
                                  </InArgument>
                                </uix:NTypeInto.Text>
                              </uix:NTypeInto>
                              <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click 'SPAN'" sap:VirtualizedContainerService.HintSize="354,184.66666666666666" sap2010:WorkflowViewState.IdRef="NClick_2" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="14dbc44b-bde7-4d35-a291-43a16ededf25" Version="V3">
                                <uix:NClick.Target>
                                  <uix:TargetAnchorable BrowserURL="https://payments2.deluxe.com/gateway/customervault" DesignTimeRectangle="1417, 488, 48, 42" DesignTimeScaleFactor="1.2000000476837158" FullSelectorArgument="&lt;webctrl class='input-group-text' parentid='main-wrapper' tag='SPAN' /&gt;" FuzzySelectorArgument="&lt;webctrl class='input-group-text' parentid='main-wrapper' tag='SPAN' type='' aaname='' /&gt;" Guid="a39ae673-04e7-4d75-ab73-f3aad77e018d" InformativeScreenshot="3a137cddc3124269a5e2df105c24a8aa.png" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Customer Vault' /&gt;" SearchSteps="Selector" Version="V2" Visibility="Interactive" />
                                </uix:NClick.Target>
                              </uix:NClick>
                            </Sequence>
                          </ActivityAction>
                        </uix:NApplicationCard.Body>
                        <uix:NApplicationCard.TargetApp>
                          <uix:TargetApp Area="-11, -11, 1942, 1030" BrowserType="Chrome" IconBase64="iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAA0/SURBVGhDvZcJUFRXFkDbiIa4gbgACtgsKqsgqIgoiyjgCpkklk4iMktFrcnEylbJxBh0JlZMooK4YBR3TTIaxZhMJovaScS44RZRiCINihDHSANuYLfvzr1v+fyGdksyc6tO3fvue93/vNf/N43ht4jOTm1dJ3u4Zf6jn3f2ujD/gqJhA8xlIyIsl0cOgssjB0NZ3EDLkZhQc0Fkf9M/+npnp/RwTfdybm/s3MXFZeKTUzOW5O/YueubM6UHS+oaiF2m0yVL8rcXTHjimam0Rl7mtw2Snu7tPqsgop9JiYqsqxPVWPBTYhSnOj0ZyvK3sB/O37xz6uIduBdF527cenVudk63Hu7u8tK/Lkj8FWOvrHMjwmsvJ0YxLpYQaZ9JHKGs7xGVL8xixWcbHMreiwNnLPWJyWlpUuOXxStGTxRXtwYJ0Yk2y/FefCRTJ12DdU38QD6uxvnzuSvh1AWbQ8EH4YcLNjb9+dlvtMGQSg8WdL/uGRRynE6TQ4ItshLlOQFzQqSE1kSBefZsh1K/hPRJmX+QavePSe7dp50dHm7RBFGKC2qiellJfCRUE3EDWXVcBKucOR1OVTQ5lMFT5dyrbsmx8sbbMXGjR0vFu8fLfTyylKwSU6dLciJHiIxzNM/lsVcdP1DmSCjdudehiJAU9YlKGxRX3eFQLebFGv1rFPTNJTUdx0s+Hln601Uy4mRlHYeSmC+NkMJUY4/gc8jFCaPuc9/b4CTOl10GKCq3cqimHs05fg3fGOvh7ukpde1jknu3adVcSnc7yLEQlYIyC+kI2oioh4czlc/Pe8uhAEGne6LCBucuM8j97Ar0zijiLPvXFd6jubt9AsSkqdNnSOXmoAe2JCaslguiNEmQqP5UhTTKclGRq1TNNxEBVZiJki8PM0cXJ05WWqEYT7mo/Db0QnHD2P0cr8wiOGa24hr8dHCNo9cSKzd//oXUbo5D0cFmu1MkIaqlkD7zOnYAU7Iaw4lwnk/9WOfw4nSy+g14PHMEDKmFHI+pR3iP5mjN3T6F70/X1kltES96u2dpp0joxO0FSU4HbaJF76LMp8pvtbqwEqJ8FE/afAVg7Z5aCJpxHDkB6/daeI/m9Gv170EcLbvZKNUNhvbdOxjfeyGh+TRR6iLCN6AJNdc0x7NiWBirSo2F+jV50HjsCFirLwFFcYuLKkiIKP8PwL6SRlj15VWYmVeBVMKqr65CYWkjn1PrHL2H3SdgnBG5Pm59OhwbO1g7PXtBKRw7QKLqcKh5MpVLO4rS6tYXJiH6qvyx5g7M+6gGuk8+JG6fMRKsu08+DG9trcE1+DDjWkeboB+AXL59tw7GyA9+B1HIzLeSNbELeKr20oILiphQZsl5B+40NEhdEdUWBp+daILVpkb4tqT1Q0j39ekqGxw81wSdnjzIhZ0fP2AH9bo8dZCvobWOHmbtb4FbnE9mxJY0NnBLOkRueRw+fypaCoYxnocpwrg01ZWY6/JXSGURnx5vghnrr8PgrDoYMree59e33Wh1YTrN0/gHa/+PTeD/52PQbcph6PH0ETuoR3O0htY6+gS0r9HA+YnHIzanMZKnjWS8mypkpXTlUJLGrIgJg9qcBVKbTvwOTF8nxAfNrYPByCCqkQnZrX95ChlxW5DgPrzfC0ub7KAezenXtnyf3t5GI799wjdNZOG4gYGb0yECobxseiyrHBrC8KS5MNUVclyVnszUbUPyJKmEiag3m6HxBwda/w5SPyHOXCLYXbBfq8d8dje4dnzE1dAlyj0tYlMatCR2zUQ4HRfGKqJJnDYRCpQrooPZtc92cnmKZ9deQ1GLDhRH6Uhdb/ziejiGf1XVxdVpUn4Q9K8hii/cgluHEiFjjEumodfvQ7LDN04EQRrPtIEBGyewBX8doUmbo0PAPDQEqh5PluoAu/CeJ1HHiE0oZm2+rgn8Wn4+8SpYvw+ERc/3zDH4vxZjGrBhIoRtmMD0mwjbMJ5R/9DoCODykquL35b6AOMW1cPAOZZmUNRu3IK/77zpUOhhqCleCtb9/Zl1fyBsf9trpyFoYZJ5wIYJ4Iiw9ePZlPlJzDw4iJUj5iHBcOvoYS5fWmODCJQiSE7V96YW/ph/DQ6fb/1A3o/TlfVgOfYsyvdF+b7Mtr8fnP/Y12wIXT+ODViPwkgYZzyvqU819XalDeQbKMcNqId375nbEI5CnDdkRkhUZH1P37fAyAUW2FjY6FDUEfTA3joYB9bCAGYt7MuzbX8AXPm3r8UQtm48hK5DWcx3Iyk3FcoHBbLzUf0Zt8fI23sLBqC4Qsna9RzUfLOynrS8HuYV3IBvS638rzJ93xdXNkBpeRmUn93LaoqXQH3RFCBZa6EfsxX6g60wgI95jdkQsm4sC0VJe8ZB6FoE65C1Y1kwkvOnoXA+KlDbwIo9NzU5PWH3GLecUz16LxUk2iyr8BPs96d5sO7zxU8AM9aGoGUpluC1Y1gICSNUUw5ZM5aPqR+8ZgwbkpcKJ2OD8UdaFb/QzmONEDa7FkJnX+WZRHjW1y2yWhtKPV1/D96OPKz1XIpkrfuMuBFfHPvKDWCNPZ5FzXuGgHcTzCRJBKGoJo5ZQX3itVmxcLPoEL/WJfwDRkICIeeYlnOt15ZU2/h7sroDXMqGciTYjA+jXnPfhxFlW3ubDV5/iSwIzh+Lpyxkg/PH2NVB+amM4H1cV/TxKn4xisz8eghBgRCUEvnhSV5YJ98N4M75eSjXB0XtQVmwfueN0gTWcrw7191k8JgcnC3khCzfjBwTgatTcAOUUxkxOTtNXg6g4GgTBL9+FYJRhIM1SfHefVDrCo42yncDsB2OQUEvPG0SpOxF0iTLxyJLsL/oOZccg0tM70yS5KKrU4Hgm1mtED2BGB+qPikvCTBtdQMEoYiCpIJe/1kT1c/Zr7mKr62X74K3z+VtSlTSG4V7IZS9wMZ7NMZ6n2DicOc0Q9vHnFy53KpU6L8qmW8ikNe4Kcx6qEdrkj6cBg1N1/mFq2rvwKh3LRCI0iQe+DeRm+urWo/WqN6o9yxQhc8RRUPjdTz9aJIVot968pqyTZ85veS8JzO6tzXyn9PeLw02Ba5KkaIp0P/9ZJTH8fuqJ/p8LHvzv8/jF6egTWTgaZJcK+QG9EzFtfQaFXVn8d7nUiTnwTjfeVJPN/bATXjiBkX/aH7341yewjXJZ1Z/FFP0WzmaNY+T7fp8bqXoLS3aJBVE7ChqhJHv1EI/lOyPqKyYuqoOdujueYrtJ9dArYluD01YhztK68cCGzI1xXma1DcYHnF2cg3ITrT0RTmCC0pJyv0kNEdZ36NPgm4BfZRcssHXp5sg9+sbsHT3DdzYLbsTp2hovAbz9+fBtl1BKNWTThmzu6zdUZJqRU8c9wTrNz0YQXPa7aPCbbxflpLql4eyeaNYv7zRWCPYC5DjgBWY5bivnI/f/DTbXvqlVLt/HLx0AuI3Pc3i8+NQFsUU33RHQUQb9+BIeaQbbQDWvNp5ndRuDvoU/BYm1CqxvisQyrweZTcmaW1Mc3KcsOkZmF+YxwUvNvwkdYHX1Ms9vBGi1qaL1+LrKr7GbxVNrDtmQlebqLab4/i4P2J/+iq6jvPLwhPmF/BfkcQ0cZ4VYuy/nOb5J6LV1A9YLqCeymJe3xvJXvkgEmXc8HYgMTcSFZKmrrIm3Owzzr2Z6ZwldR2H92vRx5WEQskHLE+S6OdbjvU9tT4J/JaN5PJUR+YlQMVX+DBKKS5oIkk37IlsNbky3jN1xTGCuezDLuVS8+7h5OZs9H0vzuK/LAkUdFF9JhmRE5kSoyxI5HOKlmP/ZSMhe2sgynVFWRJzZbdNLjgmXGXPhVG+vbcL7xFXPu1iMd7t1mkZnYd4ZPouTWSEuqgA66WYCRz7YW5eI+ZorPUxU61/3fD3Y6VUs5yoXaSwC1i13JlhzXNabLt0qfdg4TbGby5d3BG+uQmapNbPTWy1TmHE9fQaYusO/KlMYkrQ1AXFRRaynVC6M21KgPWcjEfnSq2HC9cxxiwuhggJkQklZlyCdS5tKpGjzcuxysTkNYO4kB6biWTte9a9HRnv7+0Eb05rd++H9n7RIbR7us+C4RYU1UR8lyRCnyXxKB/PqFY9X1xDfYLG9Br9uOILfChRjsTs6Yh0wH5HuL3nMWZFruzqYMlIccqUGr8unLo6G73ejDZzwRwUz5EZx1wS6z45cYiY09Dm49iLG0KFHBftACTJxUVP5D2PUYYjq5yPG93bPNgD+zDhktonS4n5oJQxJ56L+mRTLbKq+2SLOSJ2+VA8ffx2IVEhK3HWpK17HmVXPmlvmZPh9Mvu9wcN+jS6Tem/jkRJUo/3ohF8A97ZI/gc1ry/+p/4byAKojBJC3Y/qtVXPmlXOyejbZZrxzau8jL/+6CNdBrsken5ctRxEufCi+M0RC8Ohi0bSvLNkPju9gyB3YvbmZ57ou2s/6u4o6DN0MPumu6X3WNmmKnXG0PMtAmvhcPZR9t64wk7Wc5ucTJ/PM+pYOHMttlTU9pM+22kDYb/Amt8e8f/SRClAAAAAElFTkSuQmCC" InformativeScreenshot="1bdb040eb2a4747363c23d59aa58b219.jpg" Title="Customer Vault">
                            <uix:TargetApp.Selector>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_883">string.Format("&lt;html app='{0}' title='Customer Vault' /&gt;", str_BrowserValue)</CSharpValue>
                              </InArgument>
                            </uix:TargetApp.Selector>
                            <uix:TargetApp.Url>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_875">str_Url</CSharpValue>
                              </InArgument>
                            </uix:TargetApp.Url>
                          </uix:TargetApp>
                        </uix:NApplicationCard.TargetApp>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </uix:NApplicationCard>
                    </Sequence>
                  </ui:CommentOut.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CommentOut>
                <dc:SearchCustomerInCustomerVault bool_in_CustomerIDValidation="{x:Null}" DisplayName="Search customer in customer vault" sap:VirtualizedContainerService.HintSize="388,299.3333333333333" sap2010:WorkflowViewState.IdRef="SearchCustomerInCustomerVault_1">
                  <dc:SearchCustomerInCustomerVault.Int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_977">int_ReportId</CSharpValue>
                    </InArgument>
                  </dc:SearchCustomerInCustomerVault.Int_in_Report_ID>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <dc:SearchCustomerInCustomerVault.str_in_CustomerNameorID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_975">str_outFirstName</CSharpValue>
                    </InArgument>
                  </dc:SearchCustomerInCustomerVault.str_in_CustomerNameorID>
                  <dc:SearchCustomerInCustomerVault.str_in_TestID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_976">str_TestId</CSharpValue>
                    </InArgument>
                  </dc:SearchCustomerInCustomerVault.str_in_TestID>
                  <dc:SearchCustomerInCustomerVault.str_in_URL>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_978">str_Url</CSharpValue>
                    </InArgument>
                  </dc:SearchCustomerInCustomerVault.str_in_URL>
                </dc:SearchCustomerInCustomerVault>
                <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="388,91.33333333333333" sap2010:WorkflowViewState.IdRef="Delay_9" />
                <dc:ValidateCustomerDetails sap:VirtualizedContainerService.HintSize="388,455.3333333333333" sap2010:WorkflowViewState.IdRef="ValidateCustomerDetails_4">
                  <dc:ValidateCustomerDetails.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_852">int_ReportId</CSharpValue>
                    </InArgument>
                  </dc:ValidateCustomerDetails.int_in_Report_ID>
                  <dc:ValidateCustomerDetails.str_in_EmailId>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_847">str_Email</CSharpValue>
                    </InArgument>
                  </dc:ValidateCustomerDetails.str_in_EmailId>
                  <dc:ValidateCustomerDetails.str_in_FirstName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_848">str_outFirstName</CSharpValue>
                    </InArgument>
                  </dc:ValidateCustomerDetails.str_in_FirstName>
                  <dc:ValidateCustomerDetails.str_in_LastName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_849">str_outLastName</CSharpValue>
                    </InArgument>
                  </dc:ValidateCustomerDetails.str_in_LastName>
                  <dc:ValidateCustomerDetails.str_in_RecurringStatus>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_924">str_RecurringStatus</CSharpValue>
                    </InArgument>
                  </dc:ValidateCustomerDetails.str_in_RecurringStatus>
                  <dc:ValidateCustomerDetails.str_in_TestID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_851">str_TestId</CSharpValue>
                    </InArgument>
                  </dc:ValidateCustomerDetails.str_in_TestID>
                  <dc:ValidateCustomerDetails.str_in_Url>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_850">str_Url</CSharpValue>
                    </InArgument>
                  </dc:ValidateCustomerDetails.str_in_Url>
                  <dc:ValidateCustomerDetails.str_out_CustomerId>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_186">str_outCustomerId</CSharpReference>
                    </OutArgument>
                  </dc:ValidateCustomerDetails.str_out_CustomerId>
                </dc:ValidateCustomerDetails>
                <dc:Verify_TransactionHistory_CustomerVault bool_in_transaction="{x:Null}" sap:VirtualizedContainerService.HintSize="388,507.3333333333333" sap2010:WorkflowViewState.IdRef="Verify_TransactionHistory_CustomerVault_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <dc:Verify_TransactionHistory_CustomerVault.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_583">int_ReportId</CSharpValue>
                    </InArgument>
                  </dc:Verify_TransactionHistory_CustomerVault.int_in_Report_ID>
                  <dc:Verify_TransactionHistory_CustomerVault.str_in_Cardnumber>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_585">str_CardNumber</CSharpValue>
                    </InArgument>
                  </dc:Verify_TransactionHistory_CustomerVault.str_in_Cardnumber>
                  <dc:Verify_TransactionHistory_CustomerVault.str_in_PaymentOption>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_979">str_PaymentType</CSharpValue>
                    </InArgument>
                  </dc:Verify_TransactionHistory_CustomerVault.str_in_PaymentOption>
                  <dc:Verify_TransactionHistory_CustomerVault.str_in_PaymentType>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_925">str_CardType</CSharpValue>
                    </InArgument>
                  </dc:Verify_TransactionHistory_CustomerVault.str_in_PaymentType>
                  <dc:Verify_TransactionHistory_CustomerVault.str_in_Status>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_579">str_TransactionStatus</CSharpValue>
                    </InArgument>
                  </dc:Verify_TransactionHistory_CustomerVault.str_in_Status>
                  <dc:Verify_TransactionHistory_CustomerVault.str_in_TestID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_582">str_TestId</CSharpValue>
                    </InArgument>
                  </dc:Verify_TransactionHistory_CustomerVault.str_in_TestID>
                  <dc:Verify_TransactionHistory_CustomerVault.str_in_Total>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_854">dbl_TotalAmount.ToString()</CSharpValue>
                    </InArgument>
                  </dc:Verify_TransactionHistory_CustomerVault.str_in_Total>
                  <dc:Verify_TransactionHistory_CustomerVault.str_in_Url>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_581">str_Url</CSharpValue>
                    </InArgument>
                  </dc:Verify_TransactionHistory_CustomerVault.str_in_Url>
                </dc:Verify_TransactionHistory_CustomerVault>
                <dc:VerifyRecurringTransactionTable sap:VirtualizedContainerService.HintSize="388,559.3333333333334" sap2010:WorkflowViewState.IdRef="VerifyRecurringTransactionTable_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <dc:VerifyRecurringTransactionTable.bool_in_transaction>
                    <InArgument x:TypeArguments="x:Boolean" />
                  </dc:VerifyRecurringTransactionTable.bool_in_transaction>
                  <dc:VerifyRecurringTransactionTable.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_562">int_ReportId</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringTransactionTable.int_in_Report_ID>
                  <dc:VerifyRecurringTransactionTable.str_in_Action>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_926">str_Action</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringTransactionTable.str_in_Action>
                  <dc:VerifyRecurringTransactionTable.str_in_Amount>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_823">dbl_TotalAmount.ToString()</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringTransactionTable.str_in_Amount>
                  <dc:VerifyRecurringTransactionTable.str_in_Frequency>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_900">str_Frequency</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringTransactionTable.str_in_Frequency>
                  <dc:VerifyRecurringTransactionTable.str_in_Last4Digits>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_565">str_CardNumber</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringTransactionTable.str_in_Last4Digits>
                  <dc:VerifyRecurringTransactionTable.str_in_PaymentType>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_796">str_CardType</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringTransactionTable.str_in_PaymentType>
                  <dc:VerifyRecurringTransactionTable.str_in_TestID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_561">str_TestId</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringTransactionTable.str_in_TestID>
                  <dc:VerifyRecurringTransactionTable.str_in_Url>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_560">str_Url</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringTransactionTable.str_in_Url>
                  <dc:VerifyRecurringTransactionTable.str_out_RecurringID>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_138">str_RecurringId</CSharpReference>
                    </OutArgument>
                  </dc:VerifyRecurringTransactionTable.str_out_RecurringID>
                </dc:VerifyRecurringTransactionTable>
                <dc:VerifyRecurringSummary sap:VirtualizedContainerService.HintSize="388,507.3333333333333" sap2010:WorkflowViewState.IdRef="VerifyRecurringSummary_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <dc:VerifyRecurringSummary.bool_in_transaction>
                    <InArgument x:TypeArguments="x:Boolean" />
                  </dc:VerifyRecurringSummary.bool_in_transaction>
                  <dc:VerifyRecurringSummary.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_567">int_ReportId</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringSummary.int_in_Report_ID>
                  <dc:VerifyRecurringSummary.str_in_Amount>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_572">dbl_TotalAmount.ToString()</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringSummary.str_in_Amount>
                  <dc:VerifyRecurringSummary.str_in_EndDate>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_715">str_outEndDate</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringSummary.str_in_EndDate>
                  <dc:VerifyRecurringSummary.str_in_Frequency>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_901">str_Frequency</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringSummary.str_in_Frequency>
                  <dc:VerifyRecurringSummary.str_in_RecurringID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_570">str_RecurringId</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringSummary.str_in_RecurringID>
                  <dc:VerifyRecurringSummary.str_in_StartDate>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_714">str_outStartDate</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringSummary.str_in_StartDate>
                  <dc:VerifyRecurringSummary.str_in_TestID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_569">str_TestId</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringSummary.str_in_TestID>
                  <dc:VerifyRecurringSummary.str_in_Url>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_568">str_Url</CSharpValue>
                    </InArgument>
                  </dc:VerifyRecurringSummary.str_in_Url>
                </dc:VerifyRecurringSummary>
              </Sequence>
              <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="450,91.33333333333333" sap2010:WorkflowViewState.IdRef="Delay_14">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Delay>
              <dr:TransactionSearched str_in_MerchantID="{x:Null}" sap:VirtualizedContainerService.HintSize="450,299.3333333333333" sap2010:WorkflowViewState.IdRef="TransactionSearched_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dr:TransactionSearched.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_590">int_ReportId</CSharpValue>
                  </InArgument>
                </dr:TransactionSearched.int_in_ReportId>
                <dr:TransactionSearched.str_in_FirstName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_777">str_outFirstName</CSharpValue>
                  </InArgument>
                </dr:TransactionSearched.str_in_FirstName>
                <dr:TransactionSearched.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_589">str_TestId</CSharpValue>
                  </InArgument>
                </dr:TransactionSearched.str_in_TestId>
                <dr:TransactionSearched.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_588">str_Url</CSharpValue>
                  </InArgument>
                </dr:TransactionSearched.str_in_Url>
              </dr:TransactionSearched>
              <Delay Duration="00:00:15" sap:VirtualizedContainerService.HintSize="450,91.33333333333333" sap2010:WorkflowViewState.IdRef="Delay_10" />
              <dr:Verify_RealtimeTransactionGrid bool_in_transaction="{x:Null}" str_in_VaultAction="{x:Null}" str_out_ApprovalCode="{x:Null}" sap:VirtualizedContainerService.HintSize="450,819.3333333333334" sap2010:WorkflowViewState.IdRef="Verify_RealtimeTransactionGrid_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dr:Verify_RealtimeTransactionGrid.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_592">int_ReportId</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.int_in_ReportId>
                <dr:Verify_RealtimeTransactionGrid.str_in_ApprovalCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_599">str_AuthorizationCode</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_ApprovalCode>
                <dr:Verify_RealtimeTransactionGrid.str_in_FirstName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_778">str_outFirstName</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_FirstName>
                <dr:Verify_RealtimeTransactionGrid.str_in_Last4Digits>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_597">str_CardNumber</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_Last4Digits>
                <dr:Verify_RealtimeTransactionGrid.str_in_LastName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_779">str_outLastName</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_LastName>
                <dr:Verify_RealtimeTransactionGrid.str_in_MID>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_593">str_MID</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_MID>
                <dr:Verify_RealtimeTransactionGrid.str_in_PaymentType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_927">str_CardType</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_PaymentType>
                <dr:Verify_RealtimeTransactionGrid.str_in_Status>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_602">str_TransactionStatus</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_Status>
                <dr:Verify_RealtimeTransactionGrid.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_591">str_TestId</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_TestId>
                <dr:Verify_RealtimeTransactionGrid.str_in_TransactionAmount>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_598">dbl_TotalAmount.ToString()</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_TransactionAmount>
                <dr:Verify_RealtimeTransactionGrid.str_in_Type>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_600">str_PaymentMethod</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_Type>
                <dr:Verify_RealtimeTransactionGrid.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_601">str_Url</CSharpValue>
                  </InArgument>
                </dr:Verify_RealtimeTransactionGrid.str_in_Url>
              </dr:Verify_RealtimeTransactionGrid>
              <dr:Click_on_ViewIcon_button DisplayName="Click on ViewIcon_button" sap:VirtualizedContainerService.HintSize="450,195.33333333333334" sap2010:WorkflowViewState.IdRef="Click_on_ViewIcon_button_2">
                <dr:Click_on_ViewIcon_button.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_604">int_ReportId</CSharpValue>
                  </InArgument>
                </dr:Click_on_ViewIcon_button.int_in_ReportId>
                <dr:Click_on_ViewIcon_button.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_603">str_TestId</CSharpValue>
                  </InArgument>
                </dr:Click_on_ViewIcon_button.str_in_TestId>
                <dr:Click_on_ViewIcon_button.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_605">str_Url</CSharpValue>
                  </InArgument>
                </dr:Click_on_ViewIcon_button.str_in_Url>
              </dr:Click_on_ViewIcon_button>
              <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="450,91.33333333333333" sap2010:WorkflowViewState.IdRef="Delay_11" />
              <dr:Verify_TransactionInformation str_in_SurchargeAmount="{x:Null}" sap:VirtualizedContainerService.HintSize="450,975.3333333333334" sap2010:WorkflowViewState.IdRef="Verify_TransactionInformation_2">
                <dr:Verify_TransactionInformation.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_606">int_ReportId</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.int_in_ReportId>
                <dr:Verify_TransactionInformation.str_in_ApprovalCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_617">str_AuthorizationCode</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_ApprovalCode>
                <dr:Verify_TransactionInformation.str_in_CardExpiry>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_612">str_CardExpiry</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_CardExpiry>
                <dr:Verify_TransactionInformation.str_in_CardNumber>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_611">str_CardNumber</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_CardNumber>
                <dr:Verify_TransactionInformation.str_in_CardType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_610">str_CardType</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_CardType>
                <dr:Verify_TransactionInformation.str_in_DiscountAmount>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_613">str_DiscountRateAmount</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_DiscountAmount>
                <dr:Verify_TransactionInformation.str_in_OrderNote>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_618">str_OrderNote</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_OrderNote>
                <dr:Verify_TransactionInformation.str_in_PaymentType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_928">str_PaymentType</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_PaymentType>
                <dr:Verify_TransactionInformation.str_in_ProcessingFeeIncluded>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_903">str_ProcessingFee</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_ProcessingFeeIncluded>
                <dr:Verify_TransactionInformation.str_in_SubmissionMethod>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_902">str_SubmissionMethod</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_SubmissionMethod>
                <dr:Verify_TransactionInformation.str_in_TaxAmount>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_614">str_TaxAmoount</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_TaxAmount>
                <dr:Verify_TransactionInformation.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_607">str_TestId</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_TestId>
                <dr:Verify_TransactionInformation.str_in_TotalTransactionAmount>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_615">dbl_TotalAmount.ToString()</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_TotalTransactionAmount>
                <dr:Verify_TransactionInformation.str_in_TransactionStatus>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_616">str_TransactionStatus</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_TransactionStatus>
                <dr:Verify_TransactionInformation.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_608">str_Url</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_in_Url>
                <dr:Verify_TransactionInformation.str_out_InvoiceNum>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_980">str_InvoiceNumber</CSharpValue>
                  </InArgument>
                </dr:Verify_TransactionInformation.str_out_InvoiceNum>
                <dr:Verify_TransactionInformation.str_out_PaymentId>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_140">str_outPaymentId</CSharpReference>
                  </OutArgument>
                </dr:Verify_TransactionInformation.str_out_PaymentId>
              </dr:Verify_TransactionInformation>
              <dr:Verify_CustomerInformation sap:VirtualizedContainerService.HintSize="450,923.3333333333334" sap2010:WorkflowViewState.IdRef="Verify_CustomerInformation_2">
                <dr:Verify_CustomerInformation.Validation_CompanyName>
                  <InArgument x:TypeArguments="x:String" />
                </dr:Verify_CustomerInformation.Validation_CompanyName>
                <dr:Verify_CustomerInformation.Validation_CustomerID>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_619">str_outCustomerId</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.Validation_CustomerID>
                <dr:Verify_CustomerInformation.Validation_Fax>
                  <InArgument x:TypeArguments="x:String" />
                </dr:Verify_CustomerInformation.Validation_Fax>
                <dr:Verify_CustomerInformation.Validation_IpAddress>
                  <InArgument x:TypeArguments="x:String" />
                </dr:Verify_CustomerInformation.Validation_IpAddress>
                <dr:Verify_CustomerInformation.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_631">int_ReportId</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.int_in_ReportId>
                <dr:Verify_CustomerInformation.str_in_CustomerAddress>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_623">str_CustomerAddress</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_CustomerAddress>
                <dr:Verify_CustomerInformation.str_in_CustomerCity>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_624">str_CustomerCity</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_CustomerCity>
                <dr:Verify_CustomerInformation.str_in_CustomerCountryCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_630">str_CustomerCountryCode</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_CustomerCountryCode>
                <dr:Verify_CustomerInformation.str_in_CustomerName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_622">str_CustomerName</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_CustomerName>
                <dr:Verify_CustomerInformation.str_in_CustomerPhone>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_626">str_CustPhoneNumber</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_CustomerPhone>
                <dr:Verify_CustomerInformation.str_in_CustomerStateCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_629">str_CustomerSateCode</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_CustomerStateCode>
                <dr:Verify_CustomerInformation.str_in_CustomerZipCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_625">str_CustomerZipCode</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_CustomerZipCode>
                <dr:Verify_CustomerInformation.str_in_Email>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_627">str_Email</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_Email>
                <dr:Verify_CustomerInformation.str_in_FirstName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_780">str_outFirstName</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_FirstName>
                <dr:Verify_CustomerInformation.str_in_PartOfRecurringSchedule>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_904">str_PartOfRecurring</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_PartOfRecurringSchedule>
                <dr:Verify_CustomerInformation.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_628">str_TestId</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_TestId>
                <dr:Verify_CustomerInformation.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_620">str_Url</CSharpValue>
                  </InArgument>
                </dr:Verify_CustomerInformation.str_in_Url>
              </dr:Verify_CustomerInformation>
              <dr:Verify_SaleItemsInRealTimeTransaction dbl_in_ThirdSaleitemPrice="{x:Null}" str_in_ThirdSaleItemName="{x:Null}" str_in_ThirdSaleItemSKUCode="{x:Null}" sap:VirtualizedContainerService.HintSize="450,715.3333333333334" sap2010:WorkflowViewState.IdRef="Verify_SaleItemsInRealTimeTransaction_2">
                <dr:Verify_SaleItemsInRealTimeTransaction.dbl_in_FirstSaleitemPrice>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_772">dbl_QuickSaleItemPrice</CSharpValue>
                  </InArgument>
                </dr:Verify_SaleItemsInRealTimeTransaction.dbl_in_FirstSaleitemPrice>
                <dr:Verify_SaleItemsInRealTimeTransaction.dbl_in_SaleItemTotalAmount>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_638">dbl_TwoSaleItemTotal</CSharpValue>
                  </InArgument>
                </dr:Verify_SaleItemsInRealTimeTransaction.dbl_in_SaleItemTotalAmount>
                <dr:Verify_SaleItemsInRealTimeTransaction.dbl_in_SecondSaleitemPrice>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_773">dbl_PresetSaleItemPrice</CSharpValue>
                  </InArgument>
                </dr:Verify_SaleItemsInRealTimeTransaction.dbl_in_SecondSaleitemPrice>
                <dr:Verify_SaleItemsInRealTimeTransaction.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_636">int_ReportId</CSharpValue>
                  </InArgument>
                </dr:Verify_SaleItemsInRealTimeTransaction.int_in_ReportId>
                <dr:Verify_SaleItemsInRealTimeTransaction.str_in_FirstSaleItemName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_766">str_QuickSaleItemName</CSharpValue>
                  </InArgument>
                </dr:Verify_SaleItemsInRealTimeTransaction.str_in_FirstSaleItemName>
                <dr:Verify_SaleItemsInRealTimeTransaction.str_in_FirstSaleItemSKUCode>
                  <InArgument x:TypeArguments="x:String" />
                </dr:Verify_SaleItemsInRealTimeTransaction.str_in_FirstSaleItemSKUCode>
                <dr:Verify_SaleItemsInRealTimeTransaction.str_in_SecondSaleItemName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_632">str_PresetSaleItemName</CSharpValue>
                  </InArgument>
                </dr:Verify_SaleItemsInRealTimeTransaction.str_in_SecondSaleItemName>
                <dr:Verify_SaleItemsInRealTimeTransaction.str_in_SecondSaleItemSKUCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_716">str_outSKUCode</CSharpValue>
                  </InArgument>
                </dr:Verify_SaleItemsInRealTimeTransaction.str_in_SecondSaleItemSKUCode>
                <dr:Verify_SaleItemsInRealTimeTransaction.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_635">str_TestId</CSharpValue>
                  </InArgument>
                </dr:Verify_SaleItemsInRealTimeTransaction.str_in_TestId>
                <dr:Verify_SaleItemsInRealTimeTransaction.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_639">str_Url</CSharpValue>
                  </InArgument>
                </dr:Verify_SaleItemsInRealTimeTransaction.str_in_Url>
              </dr:Verify_SaleItemsInRealTimeTransaction>
              <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="450,91.33333333333333" sap2010:WorkflowViewState.IdRef="Delay_13">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Delay>
              <dr:Verify_ReceiptDetails bool_in_VerifyAgrimentStatement="{x:Null}" dbl_in_FirstSaleitemPrice="{x:Null}" dbl_in_SecondSaleitemPrice="{x:Null}" dbl_in_ThirdSaleitemPrice="{x:Null}" str_in_CustomerName="{x:Null}" str_in_FirstSaleItemName="{x:Null}" str_in_SecondSaleItemName="{x:Null}" str_in_ThirdSaleItemName="{x:Null}" sap:VirtualizedContainerService.HintSize="450,2067.3333333333335" sap2010:WorkflowViewState.IdRef="Verify_ReceiptDetails_2" bool_in_PrintLogoVerify="True" str_in_TransactionType="CREDITCARD">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dr:Verify_ReceiptDetails.bool_in_VerifyQRCode>
                  <InArgument x:TypeArguments="x:Boolean" />
                </dr:Verify_ReceiptDetails.bool_in_VerifyQRCode>
                <dr:Verify_ReceiptDetails.bool_in_VerifyTaxableItemText>
                  <InArgument x:TypeArguments="x:Boolean" />
                </dr:Verify_ReceiptDetails.bool_in_VerifyTaxableItemText>
                <dr:Verify_ReceiptDetails.int_in_ReportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_640">int_ReportId</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.int_in_ReportId>
                <dr:Verify_ReceiptDetails.str_in_AccountNumber>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_645">str_CardNumber</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_AccountNumber>
                <dr:Verify_ReceiptDetails.str_in_AccountType>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_644">str_CardType</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_AccountType>
                <dr:Verify_ReceiptDetails.str_in_ApprovalCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_649">str_AuthorizationCode</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_ApprovalCode>
                <dr:Verify_ReceiptDetails.str_in_CustomerEmail>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_654">str_Email</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_CustomerEmail>
                <dr:Verify_ReceiptDetails.str_in_CustomerPhone>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_653">str_CustPhoneNumber</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_CustomerPhone>
                <dr:Verify_ReceiptDetails.str_in_DiscountAmount>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_646">str_DiscountRateAmount</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_DiscountAmount>
                <dr:Verify_ReceiptDetails.str_in_FooterLin1>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_827">FooterLine1</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_FooterLin1>
                <dr:Verify_ReceiptDetails.str_in_FooterLin2>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_828">Footerline2</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_FooterLin2>
                <dr:Verify_ReceiptDetails.str_in_FooterLin3>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_829">Footerline3</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_FooterLin3>
                <dr:Verify_ReceiptDetails.str_in_Invoice>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_826">str_outInvoiceNumber</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_Invoice>
                <dr:Verify_ReceiptDetails.str_in_MerchantAddress1>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_830">str_MerchantAddress1</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_MerchantAddress1>
                <dr:Verify_ReceiptDetails.str_in_MerchantAddress2>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_831">str_MerchantAddress2</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_MerchantAddress2>
                <dr:Verify_ReceiptDetails.str_in_MerchantCity>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_834">str_MerchantCity</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_MerchantCity>
                <dr:Verify_ReceiptDetails.str_in_MerchantName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_642">str_MerchantName</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_MerchantName>
                <dr:Verify_ReceiptDetails.str_in_MerchantPhone>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_833">str_MerchantPhone</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_MerchantPhone>
                <dr:Verify_ReceiptDetails.str_in_MerchantStateCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_835">str_MerchantStateCode</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_MerchantStateCode>
                <dr:Verify_ReceiptDetails.str_in_MerchantZipCode>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_832">str_MerchantZipCode</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_MerchantZipCode>
                <dr:Verify_ReceiptDetails.str_in_OrderNote>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_650">str_OrderNote</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_OrderNote>
                <dr:Verify_ReceiptDetails.str_in_PaidAmount>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_986">dbl_TotalAmount.ToString()</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_PaidAmount>
                <dr:Verify_ReceiptDetails.str_in_Response>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_648">str_TransactionStatus</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_Response>
                <dr:Verify_ReceiptDetails.str_in_SurChargeAmount>
                  <InArgument x:TypeArguments="x:String" />
                </dr:Verify_ReceiptDetails.str_in_SurChargeAmount>
                <dr:Verify_ReceiptDetails.str_in_TaxAmount>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_985">str_TaxAmoount</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_TaxAmount>
                <dr:Verify_ReceiptDetails.str_in_TestId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_641">str_TestId</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_TestId>
                <dr:Verify_ReceiptDetails.str_in_TotalAmount>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_647">dbl_TotalAmount.ToString()</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_TotalAmount>
                <dr:Verify_ReceiptDetails.str_in_TransactionId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_651">str_outPaymentId</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_TransactionId>
                <dr:Verify_ReceiptDetails.str_in_Url>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_652">str_Url</CSharpValue>
                  </InArgument>
                </dr:Verify_ReceiptDetails.str_in_Url>
              </dr:Verify_ReceiptDetails>
              <Sequence sap:VirtualizedContainerService.HintSize="450,2792" sap2010:WorkflowViewState.IdRef="Sequence_25">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <dr1:SearchTransaction DisplayName="Reports_SearchTransaction" sap:VirtualizedContainerService.HintSize="388,53.333333333333336" sap2010:WorkflowViewState.IdRef="SearchTransaction_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <dr1:SearchTransaction.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_656">int_ReportId</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransaction.int_in_Report_ID>
                  <dr1:SearchTransaction.str_in_CustomerName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_782">str_outFirstName</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransaction.str_in_CustomerName>
                  <dr1:SearchTransaction.str_in_MerchantField>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_905">str_MerchantField</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransaction.str_in_MerchantField>
                  <dr1:SearchTransaction.str_in_MerchantIdValue>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_657">str_MID</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransaction.str_in_MerchantIdValue>
                  <dr1:SearchTransaction.str_in_Test_ID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_655">str_TestId</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransaction.str_in_Test_ID>
                  <dr1:SearchTransaction.str_in_URL>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_659">str_Url</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransaction.str_in_URL>
                </dr1:SearchTransaction>
                <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="388,131.33333333333334" sap2010:WorkflowViewState.IdRef="Delay_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Delay>
                <dr1:SearchTransactionGridVerification bool_in_Transaction="{x:Null}" DisplayName="Verify the report sub menu search transaction grid information" sap:VirtualizedContainerService.HintSize="388,93.33333333333333" sap2010:WorkflowViewState.IdRef="SearchTransactionGridVerification_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <dr1:SearchTransactionGridVerification.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_661">int_ReportId</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.int_in_Report_ID>
                  <dr1:SearchTransactionGridVerification.str_in_Amount>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_670">dbl_TotalAmount.ToString()</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_Amount>
                  <dr1:SearchTransactionGridVerification.str_in_AuthorizationCode>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_663">str_AuthorizationCode</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_AuthorizationCode>
                  <dr1:SearchTransactionGridVerification.str_in_FirstName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_783">str_outFirstName</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_FirstName>
                  <dr1:SearchTransactionGridVerification.str_in_Last4digits>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_668">str_CardNumber</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_Last4digits>
                  <dr1:SearchTransactionGridVerification.str_in_LastName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_784">str_outLastName</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_LastName>
                  <dr1:SearchTransactionGridVerification.str_in_MerchantMID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_664">str_MID</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_MerchantMID>
                  <dr1:SearchTransactionGridVerification.str_in_PaymentType>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_836">str_CardType</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_PaymentType>
                  <dr1:SearchTransactionGridVerification.str_in_Test_ID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_660">str_TestId</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_Test_ID>
                  <dr1:SearchTransactionGridVerification.str_in_TransactionStatus>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_671">str_TransactionStatus</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_TransactionStatus>
                  <dr1:SearchTransactionGridVerification.str_in_TransactionType>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_669">str_PaymentMethod</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_TransactionType>
                  <dr1:SearchTransactionGridVerification.str_in_URL>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_662">str_Url</CSharpValue>
                    </InArgument>
                  </dr1:SearchTransactionGridVerification.str_in_URL>
                </dr1:SearchTransactionGridVerification>
                <dr1:TransactionReportAdvanceSearch sap:VirtualizedContainerService.HintSize="388,391.3333333333333" sap2010:WorkflowViewState.IdRef="TransactionReportAdvanceSearch_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <dr1:TransactionReportAdvanceSearch.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_673">int_ReportId</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportAdvanceSearch.int_in_Report_ID>
                  <dr1:TransactionReportAdvanceSearch.str_in_MerchantID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_672">str_MID</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportAdvanceSearch.str_in_MerchantID>
                  <dr1:TransactionReportAdvanceSearch.str_in_ReportDetailType>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_906">str_ReportDetailType</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportAdvanceSearch.str_in_ReportDetailType>
                  <dr1:TransactionReportAdvanceSearch.str_in_TestID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_674">str_TestId</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportAdvanceSearch.str_in_TestID>
                  <dr1:TransactionReportAdvanceSearch.str_in_URL>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_675">str_Url</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportAdvanceSearch.str_in_URL>
                </dr1:TransactionReportAdvanceSearch>
                <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="388,131.33333333333334" sap2010:WorkflowViewState.IdRef="Delay_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Delay>
                <dr1:TransactionReportTableVerification bool_in_Transaction="{x:Null}" DisplayName="Verify the transaction report table details" sap:VirtualizedContainerService.HintSize="388,93.33333333333333" sap2010:WorkflowViewState.IdRef="TransactionReportTableVerification_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <dr1:TransactionReportTableVerification.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_810">int_ReportId</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.int_in_Report_ID>
                  <dr1:TransactionReportTableVerification.str_in_AccountNumber>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_818">str_CardNumber</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_AccountNumber>
                  <dr1:TransactionReportTableVerification.str_in_Amount>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_816">dbl_TotalAmount.ToString()</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_Amount>
                  <dr1:TransactionReportTableVerification.str_in_ApprovalCode>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_820">str_AuthorizationCode</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_ApprovalCode>
                  <dr1:TransactionReportTableVerification.str_in_FirstName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_813">str_outFirstName</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_FirstName>
                  <dr1:TransactionReportTableVerification.str_in_LastName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_814">str_outLastName</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_LastName>
                  <dr1:TransactionReportTableVerification.str_in_MerchantMID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_812">str_MID</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_MerchantMID>
                  <dr1:TransactionReportTableVerification.str_in_MerchantName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_811">str_MerchantName</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_MerchantName>
                  <dr1:TransactionReportTableVerification.str_in_PaymentID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_821">str_outPaymentId</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_PaymentID>
                  <dr1:TransactionReportTableVerification.str_in_PaymentType>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_817">str_CardType</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_PaymentType>
                  <dr1:TransactionReportTableVerification.str_in_RecurringID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_846">str_RecurringId</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_RecurringID>
                  <dr1:TransactionReportTableVerification.str_in_RecurringTransaction>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_908">str_RecurringTransaction</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_RecurringTransaction>
                  <dr1:TransactionReportTableVerification.str_in_SubmissionMethod>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_907">str_SubmissionMethod</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_SubmissionMethod>
                  <dr1:TransactionReportTableVerification.str_in_Test_ID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_809">str_TestId</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_Test_ID>
                  <dr1:TransactionReportTableVerification.str_in_TransactionStatus>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_819">str_TransactionStatus</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_TransactionStatus>
                  <dr1:TransactionReportTableVerification.str_in_TransactionType>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_815">str_PaymentMethod</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_TransactionType>
                  <dr1:TransactionReportTableVerification.str_in_URL>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_808">str_Url</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_URL>
                  <dr1:TransactionReportTableVerification.str_in_VaultTransaction>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_909">str_VaultTransaction</CSharpValue>
                    </InArgument>
                  </dr1:TransactionReportTableVerification.str_in_VaultTransaction>
                </dr1:TransactionReportTableVerification>
                <dr1:SaleItemReport_AdvanceSearch DisplayName="Navigate_SaleItemReport" sap:VirtualizedContainerService.HintSize="388,93.33333333333333" sap2010:WorkflowViewState.IdRef="SaleItemReport_AdvanceSearch_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <dr1:SaleItemReport_AdvanceSearch.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_693">int_ReportId</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReport_AdvanceSearch.int_in_Report_ID>
                  <dr1:SaleItemReport_AdvanceSearch.str_in_MerchantMID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_690">str_MID</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReport_AdvanceSearch.str_in_MerchantMID>
                  <dr1:SaleItemReport_AdvanceSearch.str_in_TestID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_692">str_TestId</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReport_AdvanceSearch.str_in_TestID>
                  <dr1:SaleItemReport_AdvanceSearch.str_in_URL>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_691">str_Url</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReport_AdvanceSearch.str_in_URL>
                </dr1:SaleItemReport_AdvanceSearch>
                <dr1:SaleItemReportTableVerification sap:VirtualizedContainerService.HintSize="388,1414" sap2010:WorkflowViewState.IdRef="SaleItemReportTableVerification_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <dr1:SaleItemReportTableVerification.int_in_Report_ID>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_696">int_ReportId</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.int_in_Report_ID>
                  <dr1:SaleItemReportTableVerification.str_in_Address>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_702">str_CustomerAddress</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_Address>
                  <dr1:SaleItemReportTableVerification.str_in_Amount>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_700">dbl_TotalAmount.ToString()</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_Amount>
                  <dr1:SaleItemReportTableVerification.str_in_City>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_703">str_CustomerCity</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_City>
                  <dr1:SaleItemReportTableVerification.str_in_Email>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_705">str_Email</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_Email>
                  <dr1:SaleItemReportTableVerification.str_in_FirstName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_790">str_outFirstName</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_FirstName>
                  <dr1:SaleItemReportTableVerification.str_in_LastName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_791">str_outLastName</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_LastName>
                  <dr1:SaleItemReportTableVerification.str_in_MerchantMID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_697">str_MID</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_MerchantMID>
                  <dr1:SaleItemReportTableVerification.str_in_PaymentMehod>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_706">str_CardType</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_PaymentMehod>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem1>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_769">str_QuickSaleItemName</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem1>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem1ItemPice>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_770">dbl_QuickSaleItemPrice.ToString()</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem1ItemPice>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem1ItemQuantity>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_929">str_SaleItem1ItemQuantity</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem1ItemQuantity>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem1TotalPrice>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_969">dbl_TwoQuickSaleItemPrice.ToString()</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem1TotalPrice>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem2>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_710">str_PresetSaleItemName</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem2>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem2ItemPice>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_711">dbl_PresetSaleItemPrice.ToString()</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem2ItemPice>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem2ItemQuantity>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_930">str_SaleItem2ItemQuantity</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem2ItemQuantity>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem2TotalPrice>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_712">dbl_PresetSaleItemPrice.ToString()</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem2TotalPrice>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem3>
                    <InArgument x:TypeArguments="x:String" />
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem3>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem3ItemPice>
                    <InArgument x:TypeArguments="x:String" />
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem3ItemPice>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem3ItemQuantity>
                    <InArgument x:TypeArguments="x:String" />
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem3ItemQuantity>
                  <dr1:SaleItemReportTableVerification.str_in_SaleItem3TotalPrice>
                    <InArgument x:TypeArguments="x:String" />
                  </dr1:SaleItemReportTableVerification.str_in_SaleItem3TotalPrice>
                  <dr1:SaleItemReportTableVerification.str_in_StateCode>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_713">str_CustomerSateCode</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_StateCode>
                  <dr1:SaleItemReportTableVerification.str_in_Test_ID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_695">str_TestId</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_Test_ID>
                  <dr1:SaleItemReportTableVerification.str_in_TransactionID>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_701">str_outPaymentId</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_TransactionID>
                  <dr1:SaleItemReportTableVerification.str_in_URL>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_694">str_Url</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_URL>
                  <dr1:SaleItemReportTableVerification.str_in_ZipCode>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_704">str_CustomerZipCode</CSharpValue>
                    </InArgument>
                  </dr1:SaleItemReportTableVerification.str_in_ZipCode>
                </dr1:SaleItemReportTableVerification>
              </Sequence>
            </Sequence>
          </Sequence>
          <dl1:DPP_Logout BreakTriggerScopeInArgument="{x:Null}" sap:VirtualizedContainerService.HintSize="574,270" sap2010:WorkflowViewState.IdRef="DPP_Logout_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <dl1:DPP_Logout.int_in_ReportId>
              <InArgument x:TypeArguments="x:Int32">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_868">int_ReportId</CSharpValue>
              </InArgument>
            </dl1:DPP_Logout.int_in_ReportId>
            <dl1:DPP_Logout.str_in_DppURL>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_870">str_Url</CSharpValue>
              </InArgument>
            </dl1:DPP_Logout.str_in_DppURL>
            <dl1:DPP_Logout.str_in_TestId>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_869">str_TestId</CSharpValue>
              </InArgument>
            </dl1:DPP_Logout.str_in_TestId>
          </dl1:DPP_Logout>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="640.6666666666666,22.666666666666668" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="512,525.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_36">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence sap:VirtualizedContainerService.HintSize="450,440" sap2010:WorkflowViewState.IdRef="Sequence_42">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,93.33333333333333" sap2010:WorkflowViewState.IdRef="LogMessage_10">
                  <ui:LogMessage.Level>
                    <InArgument x:TypeArguments="ui:LogLevel">
                      <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_914">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Level>
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_913">exception.Message</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <cr:failedStep str_in_actualStep="{x:Null}" sap:VirtualizedContainerService.HintSize="388,94" sap2010:WorkflowViewState.IdRef="failedStep_2" str_in_expectedStep="step ">
                  <cr:failedStep.Actual_Result>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_917">exception.Message</CSharpValue>
                    </InArgument>
                  </cr:failedStep.Actual_Result>
                  <cr:failedStep.Expected_Result>
                    <InArgument x:TypeArguments="x:String" />
                  </cr:failedStep.Expected_Result>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <cr:failedStep.str_in_reportId>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_915">int_ReportId</CSharpValue>
                    </InArgument>
                  </cr:failedStep.str_in_reportId>
                  <cr:failedStep.str_in_testId>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_916">str_TestId</CSharpValue>
                    </InArgument>
                  </cr:failedStep.str_in_testId>
                </cr:failedStep>
                <Rethrow sap:VirtualizedContainerService.HintSize="388,65.33333333333333" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
                <dl1:DPP_Logout BreakTriggerScopeInArgument="{x:Null}" sap:VirtualizedContainerService.HintSize="388,76.66666666666667" sap2010:WorkflowViewState.IdRef="DPP_Logout_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <dl1:DPP_Logout.int_in_ReportId>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_918">int_ReportId</CSharpValue>
                    </InArgument>
                  </dl1:DPP_Logout.int_in_ReportId>
                  <dl1:DPP_Logout.str_in_DppURL>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_920">str_Url</CSharpValue>
                    </InArgument>
                  </dl1:DPP_Logout.str_in_DppURL>
                  <dl1:DPP_Logout.str_in_TestId>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_919">str_TestId</CSharpValue>
                    </InArgument>
                  </dl1:DPP_Logout.str_in_TestId>
                </dl1:DPP_Logout>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>