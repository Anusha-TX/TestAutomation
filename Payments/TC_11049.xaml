<Activity mc:Ignorable="sap sap2010" x:Class="TC_11049" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:dp="clr-namespace:Deluxe_ReusableLibrary.Payments;assembly=Deluxe_ReusableLibrary" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:ra="clr-namespace:ReporterForUiPath.Activities;assembly=ReporterForUiPath.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="str_TestId" Type="InArgument(x:String)" />
    <x:Property Name="int_ReportId" Type="InArgument(x:Int32)" />
    <x:Property Name="str_SuiteId" Type="InArgument(x:String)" />
  </x:Members>
  <this:TC_11049.str_TestId>
    <InArgument x:TypeArguments="x:String" />
  </this:TC_11049.str_TestId>
  <this:TC_11049.int_ReportId>
    <InArgument x:TypeArguments="x:Int32" />
  </this:TC_11049.int_ReportId>
  <this:TC_11049.str_SuiteId>
    <InArgument x:TypeArguments="x:String" />
  </this:TC_11049.str_SuiteId>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>822,6295</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>ReporterForUiPath.Enums</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>ReporterForUiPath.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>Deluxe_ReusableLibrary.Payments</x:String>
      <x:String>Deluxe_ReusableLibrary</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>CommonLibrary.Report</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>UiPath.Testing</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>UiPath.Testing.Activities.TestData</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Core.Activities.DateModifications</x:String>
      <x:String>UiPath.Activities.System.Workflow.Business</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Testing.Enums</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>ReporterForUiPath</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>ReporterForUiPath.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Jira.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>Deluxe_ReusableLibrary</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>CommonLibrary</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Windows.Forms.Design</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="TC_11049" sap:VirtualizedContainerService.HintSize="558,6230" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="TC_11049" sap:VirtualizedContainerService.HintSize="496,6119" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Default="bhanu" Name="str_firstName" />
        <Variable x:TypeArguments="x:String" Default="chandra" Name="str_lastName" />
        <Variable x:TypeArguments="x:String" Default="https://payments2.deluxe.com/gateway/*" Name="str_URL" />
        <Variable x:TypeArguments="x:String" Default="Sale" Name="str_PaymentMethod" />
        <Variable x:TypeArguments="x:String" Default="5145" Name="str_CustomerAddress" />
        <Variable x:TypeArguments="x:String" Default="8745864566" Name="str_phone_number" />
        <Variable x:TypeArguments="x:String" Default="Telangana" Name="str_CustomerState" />
        <Variable x:TypeArguments="x:String" Default="518000" Name="str_CustomerZipCode" />
        <Variable x:TypeArguments="x:String" Default="hyderabad" Name="str_CustomerCity" />
        <Variable x:TypeArguments="x:String" Default="hyd.ts@gmail.com" Name="str_Email" />
        <Variable x:TypeArguments="x:String" Default="Banana" Name="str_QuickSaleItemName" />
        <Variable x:TypeArguments="x:String" Default="10" Name="str_QuickSaleItemPrice" />
        <Variable x:TypeArguments="x:String" Default="SaleTax" Name="str_QuickSaleItemTaxName" />
        <Variable x:TypeArguments="x:Double" Name="dbl_saleItem_Taxrate" />
        <Variable x:TypeArguments="x:String" Default="testing for customer with ACH" Name="str_OrderNote" />
        <Variable x:TypeArguments="x:String" Default="NewDiscount" Name="str_DiscountRateOption" />
        <Variable x:TypeArguments="x:String" Default="ACH/EFT" Name="str_PaymentType" />
        <Variable x:TypeArguments="x:String" Name="str_CardType" />
        <Variable x:TypeArguments="x:String" Default="6/15 ZENTRO TEST FOR ROBERT ESA" Name="str_MerchantName" />
        <Variable x:TypeArguments="x:String" Default="IN" Name="str_CustomerCountryCode" />
        <Variable x:TypeArguments="x:Double" Name="dbl_saleItem_Price" />
        <Variable x:TypeArguments="x:Double" Name="dbl_total_Amount" />
        <Variable x:TypeArguments="x:String" Name="str_card_last4Digits" />
        <Variable x:TypeArguments="x:String" Name="str_discount_Rate_Amount" />
        <Variable x:TypeArguments="x:String" Name="str_startdate" />
        <Variable x:TypeArguments="x:String" Name="str_EndDate" />
        <Variable x:TypeArguments="x:String" Default="Quarterly" Name="str_Frequency" />
        <Variable x:TypeArguments="x:String" Default="6556" Name="str_ACH_number" />
        <Variable x:TypeArguments="x:Boolean" Default="True" Name="bool_RemoveSurcharge" />
        <Variable x:TypeArguments="x:String" Name="str_TaxAmoount" />
        <Variable x:TypeArguments="x:String" Name="str_SurchargeAmount" />
        <Variable x:TypeArguments="x:String" Name="str_AuthorizationCode" />
        <Variable x:TypeArguments="x:String" Name="str_TransactionStatus" />
        <Variable x:TypeArguments="x:String" Default="Ground" Name="str_Shipping_method" />
        <Variable x:TypeArguments="x:String" Name="str_Get_startdate" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ra:CreateReport ContinueOnError="{x:Null}" DisplayName="Create Report" sap:VirtualizedContainerService.HintSize="434,133" sap2010:WorkflowViewState.IdRef="CreateReport_3" ReportLocation="C:\Users\Varadi Madhu Kumar\Documents\UiPath\Deluxe_project\Dpp_Testautomation\Reports" ReportName="TC_11049">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ra:CreateReport.isCreated>
          <OutArgument x:TypeArguments="x:Int32">
            <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">int_ReportId</CSharpReference>
          </OutArgument>
        </ra:CreateReport.isCreated>
      </ra:CreateReport>
      <ra:StartSuite ContinueOnError="{x:Null}" DisplayName="Start Suite" sap:VirtualizedContainerService.HintSize="434,85" sap2010:WorkflowViewState.IdRef="StartSuite_2" SuiteName="recurring transaction for quarterly frequency with ACH EFT Quickitem tax">
        <ra:StartSuite.ReportId>
          <InArgument x:TypeArguments="x:Int32">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_102">int_ReportId</CSharpValue>
          </InArgument>
        </ra:StartSuite.ReportId>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ra:StartSuite.suiteId>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">str_SuiteId</CSharpReference>
          </OutArgument>
        </ra:StartSuite.suiteId>
      </ra:StartSuite>
      <ra:StartTest ContinueOnError="{x:Null}" TagName="{x:Null}" TestDescription="{x:Null}" DisplayName="Start Test" sap:VirtualizedContainerService.HintSize="434,85" sap2010:WorkflowViewState.IdRef="StartTest_2" Priority="High" TestName="Executing TC_11049">
        <ra:StartTest.ReportId>
          <InArgument x:TypeArguments="x:Int32">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_103">int_ReportId</CSharpValue>
          </InArgument>
        </ra:StartTest.ReportId>
        <ra:StartTest.SuiteId>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_104">str_SuiteId</CSharpValue>
          </InArgument>
        </ra:StartTest.SuiteId>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ra:StartTest.testId>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">str_TestId</CSharpReference>
          </OutArgument>
        </ra:StartTest.testId>
      </ra:StartTest>
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="CommentOut_10">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="512,192" sap2010:WorkflowViewState.IdRef="Sequence_16">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Read Test Data Sequence" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_15">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="dt_TestData" />
                <Variable x:TypeArguments="sd:DataTable" Name="dt_TestCaseData" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ReadRange Range="{x:Null}" AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Payments" WorkbookPath="TestData\DPPTestData.xlsx">
                <ui:ReadRange.DataTable>
                  <OutArgument x:TypeArguments="sd:DataTable">
                    <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">dt_TestData</CSharpReference>
                  </OutArgument>
                </ui:ReadRange.DataTable>
              </ui:ReadRange>
              <ui:FilterDataTable DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="388,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" SelectColumnsMode="Remove">
                <ui:FilterDataTable.DataTable>
                  <InArgument x:TypeArguments="sd:DataTable">
                    <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_111">dt_TestData</CSharpValue>
                  </InArgument>
                </ui:FilterDataTable.DataTable>
                <ui:FilterDataTable.Filters>
                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                    <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                      <ui:FilterOperationArgument.Column>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_109">"TestCaseId"</CSharpValue>
                        </InArgument>
                      </ui:FilterOperationArgument.Column>
                      <ui:FilterOperationArgument.Operand>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_110">"TC_10999"</CSharpValue>
                        </InArgument>
                      </ui:FilterOperationArgument.Operand>
                    </ui:FilterOperationArgument>
                  </scg:List>
                </ui:FilterDataTable.Filters>
                <ui:FilterDataTable.OutputDataTable>
                  <OutArgument x:TypeArguments="sd:DataTable">
                    <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">dt_TestCaseData</CSharpReference>
                  </OutArgument>
                </ui:FilterDataTable.OutputDataTable>
                <ui:FilterDataTable.SelectColumns>
                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                    <x:Null />
                  </scg:List>
                </ui:FilterDataTable.SelectColumns>
              </ui:FilterDataTable>
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="521,943" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="479,674" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="32">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_88">str_MerchantName</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_113">CurrentRow["MerchantName"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_41">str_PaymentMethod</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_114">CurrentRow["PaymentMethod"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_42">str_phone_number</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_117">CurrentRow["Phone"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_43">str_PaymentType</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_118">CurrentRow["PaymentType"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_89">str_CardType</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_121">CurrentRow["CardType"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_44">str_QuickSaleItemName</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_122">CurrentRow["QuickSaleItemName"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_45">str_QuickSaleItemPrice</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_144">CurrentRow["QuickSaleItemPrice"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_46">str_QuickSaleItemTaxName</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_124">CurrentRow["QuickSaleItemTax"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_49">str_CustomerAddress</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_126">CurrentRow["CustomerAddress"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_50">str_CustomerState</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_127">CurrentRow["CustomerState"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_51">str_CustomerCity</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_128">CurrentRow["CustomerCity"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_52">str_CustomerZipCode</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_129">CurrentRow["CustomerZipCode"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_53">str_CustomerCountryCode</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_131">CurrentRow["CountryCode"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_47">str_OrderNote</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_132">CurrentRow["OrderNote"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_54">str_DiscountRateOption</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_133">CurrentRow["DiscountRate"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:Boolean">
                                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_58">bool_RemoveSurcharge</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_142">Convert.ToBoolean(CurrentRow["RemoveSurChargeAmount"].ToString().ToLower())</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_59">str_Email</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_143">CurrentRow["Email"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_60">str_Frequency</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_145">CurrentRow["Frequency"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_45">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_87">str_Shipping_method</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_202">CurrentRow["Shipping_method"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:MultipleAssign>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="479,141" sap2010:WorkflowViewState.IdRef="LogMessage_1">
                        <ui:LogMessage.Level>
                          <InArgument x:TypeArguments="ui:LogLevel">
                            <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Level>
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_135">str_MerchantName</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                      </ui:LogMessage>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
                <ui:ForEachRow.DataTable>
                  <InArgument x:TypeArguments="sd:DataTable">
                    <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_112">dt_TestCaseData</CSharpValue>
                  </InArgument>
                </ui:ForEachRow.DataTable>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachRow>
            </Sequence>
          </Sequence>
        </ui:CommentOut.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CommentOut>
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="CommentOut_8">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,255" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <dp:PaymentsCreation BreakTriggerScopeInArgument="{x:Null}" bool_in_CreateValutCustomer="{x:Null}" str_in_CardExpiration="{x:Null}" str_in_CardNumber="{x:Null}" str_in_CustEmail="{x:Null}" str_in_CustPhoneNumber="{x:Null}" str_in_PaymentType="{x:Null}" str_in_TransactionAmount_Total="{x:Null}" str_io_CustFirstName="{x:Null}" str_io_CustLastName="{x:Null}" str_out_MID="{x:Null}" DisplayName="Payments creation" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="PaymentsCreation_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dp:PaymentsCreation.int_in_reportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">int_ReportId</CSharpValue>
                </InArgument>
              </dp:PaymentsCreation.int_in_reportId>
              <dp:PaymentsCreation.str_in_ACH_AccountNickName>
                <InArgument x:TypeArguments="x:String" />
              </dp:PaymentsCreation.str_in_ACH_AccountNickName>
              <dp:PaymentsCreation.str_in_ACH_AccountNumber>
                <InArgument x:TypeArguments="x:String" />
              </dp:PaymentsCreation.str_in_ACH_AccountNumber>
              <dp:PaymentsCreation.str_in_ACH_AccountType>
                <InArgument x:TypeArguments="x:String" />
              </dp:PaymentsCreation.str_in_ACH_AccountType>
              <dp:PaymentsCreation.str_in_ACH_RoutingNumber>
                <InArgument x:TypeArguments="x:String" />
              </dp:PaymentsCreation.str_in_ACH_RoutingNumber>
              <dp:PaymentsCreation.str_in_Cash_AmountTender>
                <InArgument x:TypeArguments="x:String" />
              </dp:PaymentsCreation.str_in_Cash_AmountTender>
              <dp:PaymentsCreation.str_in_CheckNumber>
                <InArgument x:TypeArguments="x:String" />
              </dp:PaymentsCreation.str_in_CheckNumber>
              <dp:PaymentsCreation.str_in_ExistingCustomerName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">str_firstName</CSharpValue>
                </InArgument>
              </dp:PaymentsCreation.str_in_ExistingCustomerName>
              <dp:PaymentsCreation.str_in_MerchantName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">str_MerchantName</CSharpValue>
                </InArgument>
              </dp:PaymentsCreation.str_in_MerchantName>
              <dp:PaymentsCreation.str_in_PaymentMethod>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">str_PaymentMethod</CSharpValue>
                </InArgument>
              </dp:PaymentsCreation.str_in_PaymentMethod>
              <dp:PaymentsCreation.str_in_Url>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">str_URL</CSharpValue>
                </InArgument>
              </dp:PaymentsCreation.str_in_Url>
              <dp:PaymentsCreation.str_in_testId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">str_TestId</CSharpValue>
                </InArgument>
              </dp:PaymentsCreation.str_in_testId>
            </dp:PaymentsCreation>
            <dp:ExistingCustomerDetailsValidations sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="ExistingCustomerDetailsValidations_1" str_StepName="Step">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <dp:ExistingCustomerDetailsValidations.int_in_reportId>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_148">int_ReportId</CSharpValue>
                </InArgument>
              </dp:ExistingCustomerDetailsValidations.int_in_reportId>
              <dp:ExistingCustomerDetailsValidations.str_Address>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_149">str_CustomerAddress</CSharpValue>
                </InArgument>
              </dp:ExistingCustomerDetailsValidations.str_Address>
              <dp:ExistingCustomerDetailsValidations.str_City>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_150">str_CustomerCity</CSharpValue>
                </InArgument>
              </dp:ExistingCustomerDetailsValidations.str_City>
              <dp:ExistingCustomerDetailsValidations.str_Email>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_151">str_Email</CSharpValue>
                </InArgument>
              </dp:ExistingCustomerDetailsValidations.str_Email>
              <dp:ExistingCustomerDetailsValidations.str_FirstName>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_62">str_FirstName</CSharpReference>
                </OutArgument>
              </dp:ExistingCustomerDetailsValidations.str_FirstName>
              <dp:ExistingCustomerDetailsValidations.str_LastName>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_63">str_LastName</CSharpReference>
                </OutArgument>
              </dp:ExistingCustomerDetailsValidations.str_LastName>
              <dp:ExistingCustomerDetailsValidations.str_PhoneNumber>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_156">str_phone_number</CSharpValue>
                </InArgument>
              </dp:ExistingCustomerDetailsValidations.str_PhoneNumber>
              <dp:ExistingCustomerDetailsValidations.str_Postalcode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_153">str_CustomerZipCode</CSharpValue>
                </InArgument>
              </dp:ExistingCustomerDetailsValidations.str_Postalcode>
              <dp:ExistingCustomerDetailsValidations.str_in_testId>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_157">str_TestId</CSharpValue>
                </InArgument>
              </dp:ExistingCustomerDetailsValidations.str_in_testId>
              <dp:ExistingCustomerDetailsValidations.str_state>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_155">str_CustomerState</CSharpValue>
                </InArgument>
              </dp:ExistingCustomerDetailsValidations.str_state>
            </dp:ExistingCustomerDetailsValidations>
          </Sequence>
        </ui:CommentOut.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CommentOut>
      <dp:VerifytheCustomerDetails str_in_Amount="{x:Null}" str_in_CardNumber="{x:Null}" sap:VirtualizedContainerService.HintSize="434,1008" sap2010:WorkflowViewState.IdRef="VerifytheCustomerDetails_1" StepName="Step ">
        <dp:VerifytheCustomerDetails.Str_URL>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_210">str_URL</CSharpValue>
          </InArgument>
        </dp:VerifytheCustomerDetails.Str_URL>
        <dp:VerifytheCustomerDetails.in_CustomerName>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_211">str_firstName</CSharpValue>
          </InArgument>
        </dp:VerifytheCustomerDetails.in_CustomerName>
        <dp:VerifytheCustomerDetails.int_in_ReportId>
          <InArgument x:TypeArguments="x:Int32">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_212">int_ReportId</CSharpValue>
          </InArgument>
        </dp:VerifytheCustomerDetails.int_in_ReportId>
        <dp:VerifytheCustomerDetails.str_in_Address>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_213">str_CustomerAddress</CSharpValue>
          </InArgument>
        </dp:VerifytheCustomerDetails.str_in_Address>
        <dp:VerifytheCustomerDetails.str_in_City>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_214">str_CustomerCity</CSharpValue>
          </InArgument>
        </dp:VerifytheCustomerDetails.str_in_City>
        <dp:VerifytheCustomerDetails.str_in_Country>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_215">str_CustomerCountryCode</CSharpValue>
          </InArgument>
        </dp:VerifytheCustomerDetails.str_in_Country>
        <dp:VerifytheCustomerDetails.str_in_Countrycode>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_216">str_CustomerCountryCode</CSharpValue>
          </InArgument>
        </dp:VerifytheCustomerDetails.str_in_Countrycode>
        <dp:VerifytheCustomerDetails.str_in_FirstName>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_205">str_MerchantName</CSharpValue>
          </InArgument>
        </dp:VerifytheCustomerDetails.str_in_FirstName>
        <dp:VerifytheCustomerDetails.str_in_LastName>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_206">str_lastName</CSharpValue>
          </InArgument>
        </dp:VerifytheCustomerDetails.str_in_LastName>
        <dp:VerifytheCustomerDetails.str_in_MailId>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_207">str_Email</CSharpValue>
          </InArgument>
        </dp:VerifytheCustomerDetails.str_in_MailId>
        <dp:VerifytheCustomerDetails.str_in_PaymentMethod>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_217">str_PaymentMethod</CSharpValue>
          </InArgument>
        </dp:VerifytheCustomerDetails.str_in_PaymentMethod>
        <dp:VerifytheCustomerDetails.str_in_Phonenumber>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_218">str_phone_number</CSharpValue>
          </InArgument>
        </dp:VerifytheCustomerDetails.str_in_Phonenumber>
        <dp:VerifytheCustomerDetails.str_in_SelectMerchant>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_208">str_MerchantName</CSharpValue>
          </InArgument>
        </dp:VerifytheCustomerDetails.str_in_SelectMerchant>
        <dp:VerifytheCustomerDetails.str_in_State>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_219">str_CustomerState</CSharpValue>
          </InArgument>
        </dp:VerifytheCustomerDetails.str_in_State>
        <dp:VerifytheCustomerDetails.str_in_TesID>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_209">str_TestId</CSharpValue>
          </InArgument>
        </dp:VerifytheCustomerDetails.str_in_TesID>
        <dp:VerifytheCustomerDetails.str_in_ZipCode>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_220">str_CustomerZipCode</CSharpValue>
          </InArgument>
        </dp:VerifytheCustomerDetails.str_in_ZipCode>
      </dp:VerifytheCustomerDetails>
      <dp:Verifytheshippinginfodetails sap:VirtualizedContainerService.HintSize="434,294" sap2010:WorkflowViewState.IdRef="Verifytheshippinginfodetails_1" str_StepName="Step">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <dp:Verifytheshippinginfodetails.int_in_reportId>
          <InArgument x:TypeArguments="x:Int32">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_85">int_ReportId</CSharpValue>
          </InArgument>
        </dp:Verifytheshippinginfodetails.int_in_reportId>
        <dp:Verifytheshippinginfodetails.str_Url>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_86">str_URL</CSharpValue>
          </InArgument>
        </dp:Verifytheshippinginfodetails.str_Url>
        <dp:Verifytheshippinginfodetails.str_in_shipping_Method>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_203">str_Shipping_method</CSharpValue>
          </InArgument>
        </dp:Verifytheshippinginfodetails.str_in_shipping_Method>
        <dp:Verifytheshippinginfodetails.str_in_testId>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_84">str_TestId</CSharpValue>
          </InArgument>
        </dp:Verifytheshippinginfodetails.str_in_testId>
      </dp:Verifytheshippinginfodetails>
      <dp:AddQuickSaleItem DisplayName="Add quick sale item" sap:VirtualizedContainerService.HintSize="434,396" sap2010:WorkflowViewState.IdRef="AddQuickSaleItem_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <dp:AddQuickSaleItem.dbl_out_SaleItemTaxRate>
          <OutArgument x:TypeArguments="x:Double">
            <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">dbl_saleItem_Taxrate</CSharpReference>
          </OutArgument>
        </dp:AddQuickSaleItem.dbl_out_SaleItemTaxRate>
        <dp:AddQuickSaleItem.int_in_ReportId>
          <InArgument x:TypeArguments="x:Int32">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">int_ReportId</CSharpValue>
          </InArgument>
        </dp:AddQuickSaleItem.int_in_ReportId>
        <dp:AddQuickSaleItem.str_in_SaleItemName>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">str_QuickSaleItemName</CSharpValue>
          </InArgument>
        </dp:AddQuickSaleItem.str_in_SaleItemName>
        <dp:AddQuickSaleItem.str_in_SaleItemPrice>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">str_QuickSaleItemPrice</CSharpValue>
          </InArgument>
        </dp:AddQuickSaleItem.str_in_SaleItemPrice>
        <dp:AddQuickSaleItem.str_in_SaleItemTaxName>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">str_QuickSaleItemTaxName</CSharpValue>
          </InArgument>
        </dp:AddQuickSaleItem.str_in_SaleItemTaxName>
        <dp:AddQuickSaleItem.str_in_TestId>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">str_TestId</CSharpValue>
          </InArgument>
        </dp:AddQuickSaleItem.str_in_TestId>
        <dp:AddQuickSaleItem.str_in_Url>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">str_URL</CSharpValue>
          </InArgument>
        </dp:AddQuickSaleItem.str_in_Url>
      </dp:AddQuickSaleItem>
      <dp:AdditionalFields str_in_CustomerTaxExempt="{x:Null}" str_in_InvoiceNumber="{x:Null}" str_out_TaxRatePercentage="{x:Null}" DisplayName="Additional fields" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="AdditionalFields_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <dp:AdditionalFields.int_in_ReportId>
          <InArgument x:TypeArguments="x:Int32">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">int_ReportId</CSharpValue>
          </InArgument>
        </dp:AdditionalFields.int_in_ReportId>
        <dp:AdditionalFields.str_in_DiscountRate>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">str_DiscountRateOption</CSharpValue>
          </InArgument>
        </dp:AdditionalFields.str_in_DiscountRate>
        <dp:AdditionalFields.str_in_OrderNote>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">str_OrderNote</CSharpValue>
          </InArgument>
        </dp:AdditionalFields.str_in_OrderNote>
        <dp:AdditionalFields.str_in_TaxRateListName>
          <InArgument x:TypeArguments="x:String" />
        </dp:AdditionalFields.str_in_TaxRateListName>
        <dp:AdditionalFields.str_in_TestId>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">str_TestId</CSharpValue>
          </InArgument>
        </dp:AdditionalFields.str_in_TestId>
        <dp:AdditionalFields.str_in_Url>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">str_URL</CSharpValue>
          </InArgument>
        </dp:AdditionalFields.str_in_Url>
        <dp:AdditionalFields.str_out_DiscountRateAmount>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">str_discount_Rate_Amount</CSharpReference>
          </OutArgument>
        </dp:AdditionalFields.str_out_DiscountRateAmount>
      </dp:AdditionalFields>
      <dp:SelectVaultType in_CardNumber="{x:Null}" in_SelectCard="{x:Null}" str_in_CardLogo="{x:Null}" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="SelectVaultType_1" step="Step">
        <dp:SelectVaultType.In_Report_ID>
          <InArgument x:TypeArguments="x:Int32">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_87">int_ReportId</CSharpValue>
          </InArgument>
        </dp:SelectVaultType.In_Report_ID>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <dp:SelectVaultType.in_ACH_number>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93">str_ACH_number</CSharpValue>
          </InArgument>
        </dp:SelectVaultType.in_ACH_number>
        <dp:SelectVaultType.in_PaymentType>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_88">str_PaymentType</CSharpValue>
          </InArgument>
        </dp:SelectVaultType.in_PaymentType>
        <dp:SelectVaultType.in_TestID>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_89">str_TestId</CSharpValue>
          </InArgument>
        </dp:SelectVaultType.in_TestID>
        <dp:SelectVaultType.out_TestID>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_90">str_TestId</CSharpValue>
          </InArgument>
        </dp:SelectVaultType.out_TestID>
        <dp:SelectVaultType.str_CardType>
          <InArgument x:TypeArguments="x:String" />
        </dp:SelectVaultType.str_CardType>
        <dp:SelectVaultType.str_Url>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_91">str_URL</CSharpValue>
          </InArgument>
        </dp:SelectVaultType.str_Url>
        <dp:SelectVaultType.str_in_VaultType>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_92">str_PaymentType</CSharpValue>
          </InArgument>
        </dp:SelectVaultType.str_in_VaultType>
      </dp:SelectVaultType>
      <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Double">
            <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">dbl_saleItem_Price</CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Double">
            <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">Convert.ToDouble(str_QuickSaleItemPrice)</CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <dp:SetupRecurringPayment_ToggleButton sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="SetupRecurringPayment_ToggleButton_1">
        <dp:SetupRecurringPayment_ToggleButton.DPP_Url>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_176">str_URL</CSharpValue>
          </InArgument>
        </dp:SetupRecurringPayment_ToggleButton.DPP_Url>
      </dp:SetupRecurringPayment_ToggleButton>
      <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">str_startdate</CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">DateAndTime.Now.ToString("MMMM d, yyyy")</CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <dp:StartDate_DatePicker sap:VirtualizedContainerService.HintSize="434,294" sap2010:WorkflowViewState.IdRef="StartDate_DatePicker_1">
        <dp:StartDate_DatePicker.Str_InputStartDate>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_224">str_startdate</CSharpValue>
          </InArgument>
        </dp:StartDate_DatePicker.Str_InputStartDate>
        <dp:StartDate_DatePicker.int_in_ReportId>
          <InArgument x:TypeArguments="x:Int32">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_222">int_ReportId</CSharpValue>
          </InArgument>
        </dp:StartDate_DatePicker.int_in_ReportId>
        <dp:StartDate_DatePicker.str_in_TestId>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_223">str_TestId</CSharpValue>
          </InArgument>
        </dp:StartDate_DatePicker.str_in_TestId>
        <dp:StartDate_DatePicker.str_in_Url>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_221">str_URL</CSharpValue>
          </InArgument>
        </dp:StartDate_DatePicker.str_in_Url>
        <dp:StartDate_DatePicker.str_out_StartDate>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_90">str_Get_startdate</CSharpReference>
          </OutArgument>
        </dp:StartDate_DatePicker.str_out_StartDate>
      </dp:StartDate_DatePicker>
      <dp:Frequency_Option str_in_AnnuallyMonth="{x:Null}" str_in_AnnuallyOptions="{x:Null}" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="Frequency_Option_1">
        <dp:Frequency_Option.Dpp_Url>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_177">str_URL</CSharpValue>
          </InArgument>
        </dp:Frequency_Option.Dpp_Url>
        <dp:Frequency_Option.Frequency>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_179">str_Frequency</CSharpValue>
          </InArgument>
        </dp:Frequency_Option.Frequency>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <dp:Frequency_Option.str_in_BiWeeklyOptions>
          <InArgument x:TypeArguments="x:String" />
        </dp:Frequency_Option.str_in_BiWeeklyOptions>
        <dp:Frequency_Option.str_in_Frequency>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_178">str_Frequency</CSharpValue>
          </InArgument>
        </dp:Frequency_Option.str_in_Frequency>
        <dp:Frequency_Option.str_in_WeeklyOptions>
          <InArgument x:TypeArguments="x:String" />
        </dp:Frequency_Option.str_in_WeeklyOptions>
        <dp:Frequency_Option.str_in_reportid>
          <InArgument x:TypeArguments="x:Int32">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_180">int_ReportId</CSharpValue>
          </InArgument>
        </dp:Frequency_Option.str_in_reportid>
        <dp:Frequency_Option.str_in_testid>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_181">str_TestId</CSharpValue>
          </InArgument>
        </dp:Frequency_Option.str_in_testid>
      </dp:Frequency_Option>
      <dp:OrderSummary dbl_in_ThirdSaleitemPrice="{x:Null}" str_in_AmountTendered="{x:Null}" str_in_SecondSaleItem="{x:Null}" str_in_ThirdSaleItem="{x:Null}" DisplayName="Order summary" sap:VirtualizedContainerService.HintSize="434,1569" sap2010:WorkflowViewState.IdRef="OrderSummary_1" dbl_in_SecondSaleItemTaxRate="0" dbl_in_SecondSaleitemPrice="0" dbl_in_ThirdSaleItemTaxRate="0">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <dp:OrderSummary.bool_in_RemoveSurcharge>
          <InArgument x:TypeArguments="x:Boolean">
            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_139">bool_RemoveSurcharge</CSharpValue>
          </InArgument>
        </dp:OrderSummary.bool_in_RemoveSurcharge>
        <dp:OrderSummary.dbl_in_DiscountRateAmount>
          <InArgument x:TypeArguments="x:Double">
            <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">Convert.ToDouble(str_discount_Rate_Amount)</CSharpValue>
          </InArgument>
        </dp:OrderSummary.dbl_in_DiscountRateAmount>
        <dp:OrderSummary.dbl_in_FirstSaleItemTaxRate>
          <InArgument x:TypeArguments="x:Double">
            <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63">dbl_saleItem_Taxrate</CSharpValue>
          </InArgument>
        </dp:OrderSummary.dbl_in_FirstSaleItemTaxRate>
        <dp:OrderSummary.dbl_in_FirstSaleitemPrice>
          <InArgument x:TypeArguments="x:Double">
            <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">dbl_saleItem_Price</CSharpValue>
          </InArgument>
        </dp:OrderSummary.dbl_in_FirstSaleitemPrice>
        <dp:OrderSummary.dbl_in_SaleItemTotalAmount>
          <InArgument x:TypeArguments="x:Double">
            <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">dbl_saleItem_Price</CSharpValue>
          </InArgument>
        </dp:OrderSummary.dbl_in_SaleItemTotalAmount>
        <dp:OrderSummary.dbl_out_TotalAmount>
          <OutArgument x:TypeArguments="x:Double">
            <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">dbl_total_Amount</CSharpReference>
          </OutArgument>
        </dp:OrderSummary.dbl_out_TotalAmount>
        <dp:OrderSummary.int_in_ReportId>
          <InArgument x:TypeArguments="x:Int32">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">int_ReportId</CSharpValue>
          </InArgument>
        </dp:OrderSummary.int_in_ReportId>
        <dp:OrderSummary.str_in_CardType>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">str_CardType</CSharpValue>
          </InArgument>
        </dp:OrderSummary.str_in_CardType>
        <dp:OrderSummary.str_in_CustomerAddress>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">str_CustomerAddress</CSharpValue>
          </InArgument>
        </dp:OrderSummary.str_in_CustomerAddress>
        <dp:OrderSummary.str_in_CustomerCity>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">str_CustomerCity</CSharpValue>
          </InArgument>
        </dp:OrderSummary.str_in_CustomerCity>
        <dp:OrderSummary.str_in_CustomerCountryCode>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">str_CustomerCountryCode</CSharpValue>
          </InArgument>
        </dp:OrderSummary.str_in_CustomerCountryCode>
        <dp:OrderSummary.str_in_CustomerSateCode>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_57">str_CustomerState</CSharpValue>
          </InArgument>
        </dp:OrderSummary.str_in_CustomerSateCode>
        <dp:OrderSummary.str_in_CustomerZipCode>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_58">str_CustomerZipCode</CSharpValue>
          </InArgument>
        </dp:OrderSummary.str_in_CustomerZipCode>
        <dp:OrderSummary.str_in_FirstName>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">str_firstName</CSharpValue>
          </InArgument>
        </dp:OrderSummary.str_in_FirstName>
        <dp:OrderSummary.str_in_FirstSaleItem>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">str_QuickSaleItemName</CSharpValue>
          </InArgument>
        </dp:OrderSummary.str_in_FirstSaleItem>
        <dp:OrderSummary.str_in_Last4Digits>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_182">str_card_last4Digits</CSharpValue>
          </InArgument>
        </dp:OrderSummary.str_in_Last4Digits>
        <dp:OrderSummary.str_in_LastName>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">str_lastName</CSharpValue>
          </InArgument>
        </dp:OrderSummary.str_in_LastName>
        <dp:OrderSummary.str_in_OrderNote>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">str_OrderNote</CSharpValue>
          </InArgument>
        </dp:OrderSummary.str_in_OrderNote>
        <dp:OrderSummary.str_in_PaymentType>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">str_PaymentType</CSharpValue>
          </InArgument>
        </dp:OrderSummary.str_in_PaymentType>
        <dp:OrderSummary.str_in_TestId>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">str_TestId</CSharpValue>
          </InArgument>
        </dp:OrderSummary.str_in_TestId>
        <dp:OrderSummary.str_in_Url>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_60">str_URL</CSharpValue>
          </InArgument>
        </dp:OrderSummary.str_in_Url>
        <dp:OrderSummary.str_out_Surcharge>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_65">str_SurchargeAmount</CSharpReference>
          </OutArgument>
        </dp:OrderSummary.str_out_Surcharge>
        <dp:OrderSummary.str_out_TaxAmount>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_64">str_TaxAmoount</CSharpReference>
          </OutArgument>
        </dp:OrderSummary.str_out_TaxAmount>
      </dp:OrderSummary>
      <dp:CloseOrderSummary DisplayName="Close order summary" sap:VirtualizedContainerService.HintSize="434,192" sap2010:WorkflowViewState.IdRef="CloseOrderSummary_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <dp:CloseOrderSummary.int_in_ReportId>
          <InArgument x:TypeArguments="x:Int32">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">int_ReportId</CSharpValue>
          </InArgument>
        </dp:CloseOrderSummary.int_in_ReportId>
        <dp:CloseOrderSummary.str_in_TestId>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_69">str_TestId</CSharpValue>
          </InArgument>
        </dp:CloseOrderSummary.str_in_TestId>
        <dp:CloseOrderSummary.str_in_Url>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">str_URL</CSharpValue>
          </InArgument>
        </dp:CloseOrderSummary.str_in_Url>
      </dp:CloseOrderSummary>
      <dp:VerifyChargeButtonAmount DisplayName="Verify charge button amount" sap:VirtualizedContainerService.HintSize="434,243" sap2010:WorkflowViewState.IdRef="VerifyChargeButtonAmount_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <dp:VerifyChargeButtonAmount.dbl_in_ExpectedTotalAmount>
          <InArgument x:TypeArguments="x:Double">
            <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_72">dbl_total_Amount</CSharpValue>
          </InArgument>
        </dp:VerifyChargeButtonAmount.dbl_in_ExpectedTotalAmount>
        <dp:VerifyChargeButtonAmount.int_in_reportId>
          <InArgument x:TypeArguments="x:Int32">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">int_ReportId</CSharpValue>
          </InArgument>
        </dp:VerifyChargeButtonAmount.int_in_reportId>
        <dp:VerifyChargeButtonAmount.str_in_Url>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_73">str_URL</CSharpValue>
          </InArgument>
        </dp:VerifyChargeButtonAmount.str_in_Url>
        <dp:VerifyChargeButtonAmount.str_in_testId>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_70">str_TestId</CSharpValue>
          </InArgument>
        </dp:VerifyChargeButtonAmount.str_in_testId>
      </dp:VerifyChargeButtonAmount>
      <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="Delay_1" />
      <dp:VerifyTransactionSuccessAndAuthorizationCode DisplayName="ClickOnChargeButtonAndVerifySuccess" sap:VirtualizedContainerService.HintSize="434,345" sap2010:WorkflowViewState.IdRef="VerifyTransactionSuccessAndAuthorizationCode_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <dp:VerifyTransactionSuccessAndAuthorizationCode.int_in_ReportId>
          <InArgument x:TypeArguments="x:Int32">
            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75">int_ReportId</CSharpValue>
          </InArgument>
        </dp:VerifyTransactionSuccessAndAuthorizationCode.int_in_ReportId>
        <dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_PaymentType>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_105">str_PaymentType</CSharpValue>
          </InArgument>
        </dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_PaymentType>
        <dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_TestId>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_76">str_TestId</CSharpValue>
          </InArgument>
        </dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_TestId>
        <dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_Url>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_77">str_URL</CSharpValue>
          </InArgument>
        </dp:VerifyTransactionSuccessAndAuthorizationCode.str_in_Url>
        <dp:VerifyTransactionSuccessAndAuthorizationCode.str_out_AuthorizationCode>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_66">str_AuthorizationCode</CSharpReference>
          </OutArgument>
        </dp:VerifyTransactionSuccessAndAuthorizationCode.str_out_AuthorizationCode>
        <dp:VerifyTransactionSuccessAndAuthorizationCode.str_out_TransactionStatus>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_67">str_TransactionStatus</CSharpReference>
          </OutArgument>
        </dp:VerifyTransactionSuccessAndAuthorizationCode.str_out_TransactionStatus>
      </dp:VerifyTransactionSuccessAndAuthorizationCode>
    </Sequence>
  </Sequence>
</Activity>