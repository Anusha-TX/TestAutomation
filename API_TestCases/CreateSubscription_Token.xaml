<Activity mc:Ignorable="sap sap2010" x:Class="CreatePayment_Card" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:cr="clr-namespace:CommonLibrary.Report;assembly=CommonLibrary" xmlns:dep="clr-namespace:DPP_APILibrary.EndPoints.POST;assembly=DPP_APILibrary" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:ra="clr-namespace:ReporterForUiPath.Activities;assembly=ReporterForUiPath.Activities" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:utat="clr-namespace:UiPath.Testing.Activities.TestData;assembly=UiPath.Testing.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="str_SuiteId" Type="OutArgument(x:String)" />
    <x:Property Name="str_TestId" Type="OutArgument(x:String)" />
    <x:Property Name="int_ReportId" Type="InArgument(x:Int32)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>845.3333333333334,4635.333333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>CreatePayment_Card_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>ReporterForUiPath.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>ReporterForUiPath.Enums</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Testing.Enums</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Testing.Activities.TestData</x:String>
      <x:String>DPP_APILibrary.EndPoints.POST</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>System.Security</x:String>
      <x:String>CommonLibrary.Report</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>CommonLibrary.Asset</x:String>
      <x:String>UiPath.Mail.Activities.Business.HtmlEditor</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>ReporterForUiPath</AssemblyReference>
      <AssemblyReference>ReporterForUiPath.Activities</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>DPP_APILibrary</AssemblyReference>
      <AssemblyReference>System.Windows.Forms.Design</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>CommonLibrary</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>Deluxe_TestAutomationProject.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="779.3333333333334,4570.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_9">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="717.3333333333334,4460" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Variables>
        <Variable x:TypeArguments="x:String" Name="str_Currency" />
        <Variable x:TypeArguments="x:String" Name="str_PaymentDay" />
        <Variable x:TypeArguments="x:String" Name="str_PaymentMonth" />
        <Variable x:TypeArguments="x:String" Name="str_Frequency" />
      </TryCatch.Variables>
      <TryCatch.Try>
        <Sequence DisplayName="CreatePaymentmethod_Card" sap:VirtualizedContainerService.HintSize="678.6666666666666,4220.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="ExcelPath" />
            <Variable x:TypeArguments="x:String" Name="ReportPath" />
            <Variable x:TypeArguments="x:String" Name="str_MerchantToken" />
            <Variable x:TypeArguments="x:String" Name="str_TotalAmount" />
            <Variable x:TypeArguments="x:String" Name="str_Email" />
            <Variable x:TypeArguments="x:String" Name="str_CustPhoneNumber" />
            <Variable x:TypeArguments="x:String" Name="str_TokenNumber" />
            <Variable x:TypeArguments="x:String" Name="str_CardExpiry" />
            <Variable x:TypeArguments="x:String" Name="str_CardType" />
            <Variable x:TypeArguments="x:String" Name="str_CustomerAddress" />
            <Variable x:TypeArguments="x:String" Name="str_CustomerState" />
            <Variable x:TypeArguments="x:String" Name="str_CustomerCity" />
            <Variable x:TypeArguments="x:String" Name="str_CustomerZipCode" />
            <Variable x:TypeArguments="x:String" Name="str_CustomerCountry" />
            <Variable x:TypeArguments="x:String" Name="str_LastName" />
            <Variable x:TypeArguments="x:String" Name="str_FirstName" />
            <Variable x:TypeArguments="x:String" Name="str_CardCvv" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Extract dynamic Report and TestData Path" sap:VirtualizedContainerService.HintSize="616.6666666666666,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="File_Path" />
              <Variable x:TypeArguments="x:String" Name="Report_Path" />
              <Variable x:TypeArguments="x:String" Name="FilePath_OP" />
              <Variable x:TypeArguments="x:String" Name="ReportPath_OP" />
              <Variable x:TypeArguments="njl:JObject" Name="ExcelFilePathJ" />
              <Variable x:TypeArguments="njl:JObject" Name="ReportFilePathJ" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">File_Path</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Config\ExcelPath.json</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">Report_Path</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Config\Reportpath.json</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ReadTextFile File="{x:Null}" DisplayName="Read Text File" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
              <ui:ReadTextFile.Content>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">FilePath_OP</CSharpReference>
                </OutArgument>
              </ui:ReadTextFile.Content>
              <ui:ReadTextFile.FileName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">File_Path</CSharpValue>
                </InArgument>
              </ui:ReadTextFile.FileName>
            </ui:ReadTextFile>
            <ui:ReadTextFile File="{x:Null}" DisplayName="Read Text File" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="ReadTextFile_2">
              <ui:ReadTextFile.Content>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">ReportPath_OP</CSharpReference>
                </OutArgument>
              </ui:ReadTextFile.Content>
              <ui:ReadTextFile.FileName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">Report_Path</CSharpValue>
                </InArgument>
              </ui:ReadTextFile.FileName>
            </ui:ReadTextFile>
            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1">
              <ui:DeserializeJson.JsonObject>
                <OutArgument x:TypeArguments="njl:JObject">
                  <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">ExcelFilePathJ</CSharpReference>
                </OutArgument>
              </ui:DeserializeJson.JsonObject>
              <ui:DeserializeJson.JsonString>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">FilePath_OP</CSharpValue>
                </InArgument>
              </ui:DeserializeJson.JsonString>
            </ui:DeserializeJson>
            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2">
              <ui:DeserializeJson.JsonObject>
                <OutArgument x:TypeArguments="njl:JObject">
                  <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">ReportFilePathJ</CSharpReference>
                </OutArgument>
              </ui:DeserializeJson.JsonObject>
              <ui:DeserializeJson.JsonString>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">ReportPath_OP</CSharpValue>
                </InArgument>
              </ui:DeserializeJson.JsonString>
            </ui:DeserializeJson>
            <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">ExcelPath</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">Path.Combine(Environment.CurrentDirectory,ExcelFilePathJ.SelectToken("Excel_path").ToString())</CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">ReportPath</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">System.IO.Path.Combine(Environment.CurrentDirectory, ReportFilePathJ.SelectToken("Report_path").ToString())</CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <If sap:VirtualizedContainerService.HintSize="616.6666666666666,54" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_168">int_ReportId.Equals(0) == true</CSharpValue>
              </InArgument>
            </If.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="376,223.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_11">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ra:CreateReport ContinueOnError="{x:Null}" DisplayName="Create Report" sap:VirtualizedContainerService.HintSize="334,136" sap2010:WorkflowViewState.IdRef="CreateReport_2" ReportName="Create Subscription Token">
                  <ra:CreateReport.ReportLocation>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_85">ReportPath</CSharpValue>
                    </InArgument>
                  </ra:CreateReport.ReportLocation>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ra:CreateReport.isCreated>
                    <OutArgument x:TypeArguments="x:Int32">
                      <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_70">int_ReportId</CSharpReference>
                    </OutArgument>
                  </ra:CreateReport.isCreated>
                </ra:CreateReport>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="300,81.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_12">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <ra:StartSuite ContinueOnError="{x:Null}" DisplayName="Start Suite" sap:VirtualizedContainerService.HintSize="616.6666666666666,86.66666666666667" sap2010:WorkflowViewState.IdRef="StartSuite_2" SuiteName="API testing">
            <ra:StartSuite.ReportId>
              <InArgument x:TypeArguments="x:Int32">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">int_ReportId</CSharpValue>
              </InArgument>
            </ra:StartSuite.ReportId>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ra:StartSuite.suiteId>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_71">str_SuiteId</CSharpReference>
              </OutArgument>
            </ra:StartSuite.suiteId>
          </ra:StartSuite>
          <ra:StartTest ContinueOnError="{x:Null}" TagName="{x:Null}" TestDescription="{x:Null}" DisplayName="Start Test" sap:VirtualizedContainerService.HintSize="616.6666666666666,86.66666666666667" sap2010:WorkflowViewState.IdRef="StartTest_2" Priority="High" TestName="Create Subscription Token">
            <ra:StartTest.ReportId>
              <InArgument x:TypeArguments="x:Int32">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">int_ReportId</CSharpValue>
              </InArgument>
            </ra:StartTest.ReportId>
            <ra:StartTest.SuiteId>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">str_SuiteId</CSharpValue>
              </InArgument>
            </ra:StartTest.SuiteId>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ra:StartTest.testId>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_72">str_TestId</CSharpReference>
              </OutArgument>
            </ra:StartTest.testId>
          </ra:StartTest>
          <Sequence DisplayName="Read Test Data Sequence" sap:VirtualizedContainerService.HintSize="616.6666666666666,1578" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="dt_TestData" />
              <Variable x:TypeArguments="sd:DataTable" Name="dt_TestCaseData" />
              <Variable x:TypeArguments="x:String" Name="str_RandomString" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadRange Range="{x:Null}" AddHeaders="True" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="554.6666666666666,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="API">
              <ui:ReadRange.DataTable>
                <OutArgument x:TypeArguments="sd:DataTable">
                  <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">dt_TestData</CSharpReference>
                </OutArgument>
              </ui:ReadRange.DataTable>
              <ui:ReadRange.WorkbookPath>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">ExcelPath</CSharpValue>
                </InArgument>
              </ui:ReadRange.WorkbookPath>
            </ui:ReadRange>
            <ui:FilterDataTable DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="554.6666666666666,164" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" SelectColumnsMode="Remove">
              <ui:FilterDataTable.DataTable>
                <InArgument x:TypeArguments="sd:DataTable">
                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">dt_TestData</CSharpValue>
                </InArgument>
              </ui:FilterDataTable.DataTable>
              <ui:FilterDataTable.Filters>
                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                  <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                    <ui:FilterOperationArgument.Column>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">"TestCaseId"</CSharpValue>
                      </InArgument>
                    </ui:FilterOperationArgument.Column>
                    <ui:FilterOperationArgument.Operand>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_152">"CreatePaymentCard"</CSharpValue>
                      </InArgument>
                    </ui:FilterOperationArgument.Operand>
                  </ui:FilterOperationArgument>
                </scg:List>
              </ui:FilterDataTable.Filters>
              <ui:FilterDataTable.OutputDataTable>
                <OutArgument x:TypeArguments="sd:DataTable">
                  <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">dt_TestCaseData</CSharpReference>
                </OutArgument>
              </ui:FilterDataTable.OutputDataTable>
              <ui:FilterDataTable.SelectColumns>
                <scg:List x:TypeArguments="InArgument" Capacity="4">
                  <x:Null />
                </scg:List>
              </ui:FilterDataTable.SelectColumns>
            </ui:FilterDataTable>
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="554.6666666666666,916" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="520.6666666666666,726" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.6666666666667,638.6666666666666" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="32">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_53">str_MerchantToken</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">CurrentRow["MerchantToken"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_56">str_Email</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">CurrentRow["Email"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_57">str_CustPhoneNumber</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">CurrentRow["Phone"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_58">str_TokenNumber</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_149">CurrentRow["TokenNumber"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_59">str_CardExpiry</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">CurrentRow["CardExpiry"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_61">str_CustomerAddress</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">CurrentRow["CustomerAddress"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_62">str_CustomerState</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">CurrentRow["CustomerState"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_63">str_CustomerCity</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">CurrentRow["CustomerCity"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_64">str_CustomerZipCode</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">CurrentRow["CustomerZipCode"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_65">str_CustomerCountry</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">CurrentRow["CustomerCountry"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_66">str_LastName</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">CurrentRow["LastName"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_67">str_FirstName</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">CurrentRow["FirstName"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_76">str_CardCvv</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_148">CurrentRow["CardCVV"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_77">str_TotalAmount</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_153">CurrentRow["TotalAmount"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_82">str_Frequency</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_159">CurrentRow["Frequency"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_83">str_PaymentMonth</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_160">CurrentRow["PaymentMonth"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_84">str_PaymentDay</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_161">CurrentRow["PaymentDay"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_85">str_Currency</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_162">CurrentRow["Currency"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:MultipleAssign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <ui:ForEachRow.DataTable>
                <InArgument x:TypeArguments="sd:DataTable">
                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">dt_TestCaseData</CSharpValue>
                </InArgument>
              </ui:ForEachRow.DataTable>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachRow>
            <utat:RandomString Case="LowerCase" DisplayName="Random String" sap:VirtualizedContainerService.HintSize="554.6666666666666,54" sap2010:WorkflowViewState.IdRef="RandomString_1" Length="4">
              <utat:RandomString.Output>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_36">str_RandomString</CSharpReference>
                </OutArgument>
              </utat:RandomString.Output>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </utat:RandomString>
            <Assign sap:VirtualizedContainerService.HintSize="554.6666666666666,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_68">str_FirstName</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">str_FirstName+str_RandomString</CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <Sequence DisplayName="Create Payment" sap:VirtualizedContainerService.HintSize="616.6666666666666,2020" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="str_accessToken" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <dep:FetchAccessToken sap:VirtualizedContainerService.HintSize="388,197.33333333333334" sap2010:WorkflowViewState.IdRef="FetchAccessToken_1">
              <dep:FetchAccessToken.in_ReportID>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">int_ReportId</CSharpValue>
                </InArgument>
              </dep:FetchAccessToken.in_ReportID>
              <dep:FetchAccessToken.out_TestID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">str_TestId</CSharpValue>
                </InArgument>
              </dep:FetchAccessToken.out_TestID>
              <dep:FetchAccessToken.out_accessToken>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_73">str_accessToken</CSharpReference>
                </OutArgument>
              </dep:FetchAccessToken.out_accessToken>
            </dep:FetchAccessToken>
            <dep:CreatePayment str_out_paymentID="{x:Null}" DisplayName="CreatePayment - Copy (1)" sap:VirtualizedContainerService.HintSize="388,1672" sap2010:WorkflowViewState.IdRef="CreatePayment_1" str_in_Active="true" str_in_Endpoint="subscriptions" str_in_PaymentMethod="token" str_in_PaymentMethodKey1="token" str_in_PaymentMethodKey2="expiry" str_in_PaymentMethodKey3="cvv" str_in_TestCase="Payment Creation - Token">
              <dep:CreatePayment.dbl_in_Amount>
                <InArgument x:TypeArguments="x:Double">
                  <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_142">Convert.ToDouble(str_TotalAmount)</CSharpValue>
                </InArgument>
              </dep:CreatePayment.dbl_in_Amount>
              <dep:CreatePayment.in_ReportID>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_143">int_ReportId</CSharpValue>
                </InArgument>
              </dep:CreatePayment.in_ReportID>
              <dep:CreatePayment.in_merchanttoken>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_132">str_MerchantToken</CSharpValue>
                </InArgument>
              </dep:CreatePayment.in_merchanttoken>
              <dep:CreatePayment.in_token>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_131">str_accessToken</CSharpValue>
                </InArgument>
              </dep:CreatePayment.in_token>
              <dep:CreatePayment.int_in_PaymentMonth>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_163">Convert.ToInt32(str_PaymentMonth)</CSharpValue>
                </InArgument>
              </dep:CreatePayment.int_in_PaymentMonth>
              <dep:CreatePayment.out_TestID>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_144">str_TestId</CSharpValue>
                </InArgument>
              </dep:CreatePayment.out_TestID>
              <dep:CreatePayment.str_in_Currency>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_167">str_Currency</CSharpValue>
                </InArgument>
              </dep:CreatePayment.str_in_Currency>
              <dep:CreatePayment.str_in_CustEmail>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_141">str_Email</CSharpValue>
                </InArgument>
              </dep:CreatePayment.str_in_CustEmail>
              <dep:CreatePayment.str_in_CustPhoneNumber>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_140">str_CustPhoneNumber</CSharpValue>
                </InArgument>
              </dep:CreatePayment.str_in_CustPhoneNumber>
              <dep:CreatePayment.str_in_CustomerAddress>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_135">str_CustomerAddress</CSharpValue>
                </InArgument>
              </dep:CreatePayment.str_in_CustomerAddress>
              <dep:CreatePayment.str_in_CustomerCity>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_137">str_CustomerCity</CSharpValue>
                </InArgument>
              </dep:CreatePayment.str_in_CustomerCity>
              <dep:CreatePayment.str_in_CustomerCountryCode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_139">str_CustomerCountry</CSharpValue>
                </InArgument>
              </dep:CreatePayment.str_in_CustomerCountryCode>
              <dep:CreatePayment.str_in_CustomerSateCode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_138">str_CustomerState</CSharpValue>
                </InArgument>
              </dep:CreatePayment.str_in_CustomerSateCode>
              <dep:CreatePayment.str_in_CustomerZipCode>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">str_CustomerZipCode</CSharpValue>
                </InArgument>
              </dep:CreatePayment.str_in_CustomerZipCode>
              <dep:CreatePayment.str_in_EndDate>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_164">DateTime.Now.AddDays(5).ToString("MM/dd/yy")</CSharpValue>
                </InArgument>
              </dep:CreatePayment.str_in_EndDate>
              <dep:CreatePayment.str_in_FirstName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_133">str_FirstName</CSharpValue>
                </InArgument>
              </dep:CreatePayment.str_in_FirstName>
              <dep:CreatePayment.str_in_Frequency>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_165">str_Frequency</CSharpValue>
                </InArgument>
              </dep:CreatePayment.str_in_Frequency>
              <dep:CreatePayment.str_in_LastName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_134">str_LastName</CSharpValue>
                </InArgument>
              </dep:CreatePayment.str_in_LastName>
              <dep:CreatePayment.str_in_PaymentDay>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_166">str_PaymentDay</CSharpValue>
                </InArgument>
              </dep:CreatePayment.str_in_PaymentDay>
              <dep:CreatePayment.str_in_PaymentMethodValue1>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_146">str_TokenNumber</CSharpValue>
                </InArgument>
              </dep:CreatePayment.str_in_PaymentMethodValue1>
              <dep:CreatePayment.str_in_PaymentMethodValue2>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_145">str_CardExpiry</CSharpValue>
                </InArgument>
              </dep:CreatePayment.str_in_PaymentMethodValue2>
              <dep:CreatePayment.str_in_PaymentMethodValue3>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_147">str_CardCvv</CSharpValue>
                </InArgument>
              </dep:CreatePayment.str_in_PaymentMethodValue3>
              <dep:CreatePayment.str_in_StartDate>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_154">DateTime.Now.ToString("MM/dd/yy")</CSharpValue>
                </InArgument>
              </dep:CreatePayment.str_in_StartDate>
            </dep:CreatePayment>
          </Sequence>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="683.3333333333334,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="450,716" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_1">
                <ui:LogMessage.Level>
                  <InArgument x:TypeArguments="ui:LogLevel">
                    <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_87">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Level>
                <ui:LogMessage.Message>
                  <InArgument x:TypeArguments="x:Object">
                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_86">exception.Message</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Message>
              </ui:LogMessage>
              <cr:failedStep str_in_expectedStep="{x:Null}" sap:VirtualizedContainerService.HintSize="388,355.3333333333333" sap2010:WorkflowViewState.IdRef="failedStep_1" str_in_actualStep="Exception">
                <cr:failedStep.Actual_Result>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_88">exception.Message</CSharpValue>
                  </InArgument>
                </cr:failedStep.Actual_Result>
                <cr:failedStep.Expected_Result>
                  <InArgument x:TypeArguments="x:String" />
                </cr:failedStep.Expected_Result>
                <cr:failedStep.str_in_reportId>
                  <InArgument x:TypeArguments="x:Int32">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_89">int_ReportId</CSharpValue>
                  </InArgument>
                </cr:failedStep.str_in_reportId>
                <cr:failedStep.str_in_testId>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_90">str_TestId</CSharpValue>
                  </InArgument>
                </cr:failedStep.str_in_testId>
              </cr:failedStep>
              <Rethrow sap:VirtualizedContainerService.HintSize="388,25.333333333333332" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>